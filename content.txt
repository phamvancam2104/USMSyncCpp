1. Introduction
	a. prb definition: synchronization of uml architecture design model and code.
	b. why is it a problem
	c. contribution
2. Approach overview
	-Process: Model <-> extended code through mapping
	-Extended code -> executable: in-place text-to-text transformation
3. Mapping
4. In-place transformation
5. Synchronization and guiding for developers
	-how to development process is applied to each kind of developer
	-to architects: change model -> generate code -> compile, execute
	-to programmers: change architecture at the code level/user code because programmers might be more efficient in textual environemtn or favourite IDEs than graphical enviroments preferred by architects
		-> in-place transformation-> compile, debug, execute -> update model from code modifications
6. Experiments
	-model random generation and reverse + update model from code (round-trip laws
	-Case study: lego
7. Related work
	Archface: 
		-a contract description language between design and implementation ==> the focus is on design and code correctness verification
		-does not intend to implement full implementation 
		-Archface is aspect-oriented language with two interfaces: component and connector
	RTE4COMP:
		-An approach for tailoring the OOPLs
		-Used for full implementation by executable code generation 
		-Refining the semantics of a subset of OOPL contructs to contain architectural decision at the code level 
		-The focus is to allow concurrent development 
		
8. Conclusion
	