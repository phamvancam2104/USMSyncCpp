@article{sendall03,
	title = {Model transformation: the heart and soul of model-driven software development},
	volume = {20},
	issn = {0740-7459},
	shorttitle = {Model transformation},
	url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1231150},
	doi = {10.1109/MS.2003.1231150},
	number = {5},
	urldate = {2012-06-25},
	journal = {{IEEE} Software},
	author = {Sendall, S. and Kozaczynski, W.},
	year = {2003},
	pages = {42--45}
}

@inproceedings{Dunkels:2006:PSE:1182807.1182811,
	author = {Dunkels, Adam and Schmidt, Oliver and Voigt, Thiemo and Ali, Muneeb},
	title = {Protothreads: Simplifying Event-driven Programming of Memory-constrained Embedded Systems},
	booktitle = {Proceedings of the 4th International Conference on Embedded Networked Sensor Systems},
	series = {SenSys '06},
	year = {2006},
	isbn = {1-59593-343-3},
	location = {Boulder, Colorado, USA},
	pages = {29--42},
	numpages = {14},
	url = {http://doi.acm.org/10.1145/1182807.1182811},
	doi = {10.1145/1182807.1182811},
	acmid = {1182811},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {embedded systems, threads, wireless sensor networks},
} 


@inproceedings{Hutchinson:2011:MEP:1985793.1985882,
	author = {Hutchinson, John and Rouncefield, Mark and Whittle, Jon},
	title = {Model-driven Engineering Practices in Industry},
	booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
	series = {ICSE '11},
	year = {2011},
	isbn = {978-1-4503-0445-0},
	location = {Waikiki, Honolulu, HI, USA},
	pages = {633--642},
	numpages = {10},
	doi = {10.1145/1985793.1985882},
	acmid = {1985882},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {empirical evaluation, model driven engineering, software engineering},
}

@misc{_papyrus/designer/code-generation_????,
	title = {Papyrus/{Designer}/code-generation - {Eclipsepedia}},
	url = {http://wiki.eclipse.org/Papyrus/Designer/code-generation},
	urldate = {2016-04-13},
	file = {Papyrus/Designer/code-generation - Eclipsepedia:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\PQ2JTD6Q\\code-generation.html:text/html}
}

@Article{Selic2012,
	author="Selic, Bran",
	title="What will it take? A view on adoption of model-based methods in practice",
	journal="Software {\&} Systems Modeling",
	year="2012",
	volume="11",
	number="4",
	pages="513--526",
	abstract="Model-based engineering (MBE) has been touted as a new and substantively different approach to software development, characterized by higher levels of abstraction and automation compared to traditional methods. Despite the availability of published verifiable evidence that it can significantly boost both developer productivity and product quality in industrial projects, adoption of this approach has been surprisingly slow. In this article, we review the causes behind this, both technical and non-technical, and outline what needs to happen for MBE to become a reliable mainstream approach to software development.",
	issn="1619-1374",
	doi="10.1007/s10270-012-0261-0"
}

@article{Badreddin2014,
	abstract = {UML modelling tools provide poor support for composite state machine code generation. Generated code is typically complex and large, especially for composite state machines. Existing approaches either do not handle this case at all or handle it by flattening the composite state machine into a simple one with a combi- natorial explosion of states, and excessive generated code. This paper presents a new approach that trans- forms a composite state machine into an equivalent set of simple state machines before code generation. This avoids the combinatorial explosion and leads to more concise and scalable generated code. We imple- ment our approach in Umple. We report on a case study, comparing our approach to others in terms of code size and scalability.},
	author = {Badreddin, Omar and Lethbridge, Timothy C and Forward, Andrew and Elasaar, Maged and Aljamaan, Hamoud},
	isbn = {9789897580079},
	journal = {Modelsward 2014},
	keywords = {code generation,generated code is,model driven architec-,model driven development,model oriented programming,poor support for composite,reverse engineering,state machine,state machine code generation,ture,uml modelling tools provide,umple},
	pages = {1--11},
	title = {{Enhanced Code Generation from UML Composite State Machines}},
	year = {2014}
}

@Inbook{Pilitowski2007,
	author="Pilitowski, Romuald
	and Derezi{\~{n}}ska, Anna",
	editor="Sobh, Tarek",
	title="Code Generation and Execution Framework for UML 2.0 Classes and State Machines",
	bookTitle="Innovations and Advanced Techniques in Computer and Information Sciences and Engineering",
	year="2007",
	publisher="Springer Netherlands",
	address="Dordrecht",
	pages="421--427",
	isbn="978-1-4020-6268-1",
	doi="10.1007/978-1-4020-6268-1_75",
	url="http://dx.doi.org/10.1007/978-1-4020-6268-1_75"
}


@misc{shuang_formalizing,
	type = {{UML} {SM} {Semantics}},
	title = {Formalizing {UML} {State} {Machine} {Semantics} for {Automatic} {Verification}–the {PAT} {Approach}},
	url = {http://www.comp.nus.edu.sg/~pat/uml/techreport/uml  \_sm\_semantics.pdf},
	urldate = {2016-07-27},
	journal = {UML SM Semantics},
	author = {Shuang, Liu}
}

@misc{sinelabore,
	howpublished = "\url{http://www.sinelabore.com/lib/exe/fetch.php?media=wiki:downloads:sinelaborert.pdf}",
	url = {http://www.sinelabore.com/lib/exe/fetch.php?media=wiki:downloads:sinelaborert.pdf},
	urldate = {2016-06-07},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\MKKTCQRM\\fetch.html:text/html},
	author = {{SinelaboreRT}},
	title = {{Sinelabore} {Manual}}
}

@article{Knapp2004,
	abstract = {The abstract syntax and semantics of a simplified subclass of UML state machines is defined},
	author = {Knapp, Alexander},
	file = {:C$\backslash$:/Users/VP242103/Downloads/TR0408.pdf:pdf},
	title = {{Semantics of UML State Machines}},
	url = {http://www.pst.ifi.lmu.de/veroeffentlichungen/TR0408.pdf},
	year = {2004}
}

@inproceedings{balser2004interactive,
	title={Interactive verification of UML state machines},
	author={Balser, Michael and B{\"a}umler, Simon and Knapp, Alexander and Reif, Wolfgang and Thums, Andreas},
	booktitle={International Conference on Formal Engineering Methods},
	pages={434--448},
	year={2004},
	organization={Springer}
}

@article{Omg2008,
abstract = {This specification provides the architecture, languages, operational mappings, and core language for the MOF 2.0 Query, View, and Transformation (QVT) specification. The specification defines three related transformation languages: Relations, Operational Mappings, and Core. (QVT spec v1.0)},
author = {Omg, Qvt},
journal = {Transformation},
number = {January},
pages = {1--230},
title = {{Meta Object Facility ( MOF ) 2 . 0 Query / View / Transformation Specification}},
url = {http://www.omg.org/spec/QVT/1.0/PDF/},
year = {2008}
}


@article{Michelson2006,
	author = {Michelson, Brenda M},
	file = {:C$\backslash$:/Users/VP242103/Downloads/bda2-2-06cc.pdf:pdf},
	journal = {Patricia Seybold Group},
	title = {{Event-driven architecture overview}},
	volume = {2},
	year = {2006}
}

@article{Uckelmann2011,
	abstract = {Many of the initial developments towards the Internet of Things have focused on the combination of Auto-ID and networked infrastructures in businessto- business logistics and product life cycle applications. However, a future Internet of Things can provide a broader vision and also enable everyone to access and contribute rich information about things and locations. The success of social networks to share experience and personalised insights shows also great potential for integration with business-centric applications. The integration and interoperability with mainstream business software platforms can be enhanced and extended by real-time analytics, business intelligence and agent-based autonomous services. Information sharing may be rewarded through incentives, thus transforming the Internet of Things from a cost-focused experiment to a revenue-generating infrastructure to enable trading of enriched information and accelerate business innovation. Mash-ups and end-user programming will enable people to contribute to the Internet of Things with data, presentation and functionality. Things-generated physical world content and events from Auto-ID, sensors, actuators or meshed networks will be aggregated and combined with information from virtual worlds, such as business databases and Web 2.0 applications, and processed based on new business intelligence concepts. Direct action on the physical world will be supported through machine-interfaces and introduction of agile strategies. This chapter aims to provide a concept for a future architecture of the Internet of Things, including a definition, a review of developments, a list of key requirements and a technical design for possible implementation of the future Internet of Things. As open issues, the evaluation of usability by stakeholders in user-centric as well as business-centric scenarios is discussed and the need for quantifying costs and benefits for businesses, consumers, society and the environment is emphasised. Finally, guidelines are derived, for use by researchers as well as practitioners.},
	archivePrefix = {arXiv},
	arxivId = {arXiv:gr-qc/9809069v1},
	author = {Uckelmann, Dieter and Harrison, Mark and Michahelles, Florian},
	doi = {10.1007/978-3-642-19157-2},
	eprint = {9809069v1},
	isbn = {978-3-642-19156-5},
	issn = {0717-6163},
	journal = {Architecting the Internet of Things},
	number = {JANUARY},
	pages = {1--353},
	pmid = {15487673},
	primaryClass = {arXiv:gr-qc},
	title = {{Architecting the Internet of Things}},
	year = {2011}
}

@article{Li2015,
	abstract = {This paper addresses the Internet of Things. Main enabling factor of this promising paradigm is the integration of several technologies and communications solutions. Identification and tracking technologies, wired and wireless sensor and actuator networks, enhanced communication protocols (shared with the Next Generation Internet), and distributed intelligence for smart objects are just the most relevant. As one can easily imagine, any serious contribution to the advance of the Internet of Things must necessarily be the result of synergetic activities conducted in different fields of knowledge, such as telecommunications, informatics, electronics and social science. In such a complex scenario, this survey is directed to those who want to approach this complex discipline and contribute to its development. Different visions of this Internet of Things paradigm are reported and enabling technologies reviewed. What emerges is that still major issues shall be faced by the research community. The most relevant among them are addressed in details. ?? 2010 Elsevier B.V. All rights reserved.},
	archivePrefix = {arXiv},
	arxivId = {arXiv:1011.1669v3},
	author = {Li, Shancang and Xu, Li Da and Zhao, Shanshan},
	doi = {10.1007/s10796-014-9492-7},
	eprint = {arXiv:1011.1669v3},
	isbn = {1389-1286},
	issn = {13873326},
	journal = {Information Systems Frontiers},
	keywords = {Internet of Things,IoT,Literature Review,RFID,Service Oriented Architecture,Wireless Sensors Network},
	number = {2},
	pages = {243--259},
	pmid = {25246403},
	title = {{The internet of things: a survey}},
	volume = {17},
	year = {2015}
}





@INPROCEEDINGS{6032552, 
author={S. Jarzabek and H. D. Trung}, 
booktitle={2011 33rd International Conference on Software Engineering (ICSE)}, 
title={Flexible generators for software reuse and evolution: NIER Track}, 
year={2011}, 
pages={920-923}, 
keywords={Unified Modeling Language;software reusability;NIER track;UML;code generation;flexible generators;software evolution;software reuse;DSL;Generators;Manuals;Productivity;Programming;Software;Unified modeling language;domain-specific languages;generators;software product lines;software reuse}, 
doi={10.1145/1985793.1985946}, 
ISSN={0270-5257}, 
month={May},}

@article{OMG2015,
author = {OMG},
file = {:C$\backslash$:/Users/VP242103/Downloads/formal-15-10-02.pdf:pdf},
number = {October},
title = {{Precise Semantics Of UML Composite Structures}},
howpublished = "\url{http://www.omg.org/spec/PSCS/}",
year = {2015}
}

@article {1030,
	title = {Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure},
	journal = {Science of Computer Programming},
	volume = {89},
	year = {2014},
	pages = {144-161},
	keywords = {JRA2, JRA7},
	author = {Jon Whittle and John Hutchinson and M Rouncefield}
}


@Inbook{Paesschen2005,
author="Paesschen, Ellen
and Meuter, Wolfgang
and D'Hondt, Maja",
editor="Briand, Lionel
and Williams, Clay",
chapter="SelfSync: A Dynamic Round-Trip Engineering Environment",
title="Model Driven Engineering Languages and Systems: 8th International Conference, MoDELS 2005, Montego Bay, Jamaica, October 2-7, 2005. Proceedings",
year="2005",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="633--647",
isbn="978-3-540-32057-9",
doi="10.1007/11557432_47"
}



@inproceedings{Hettel2008,
abstract = {In a model-centric software development environment, a multitude of$\backslash$ndifferent models are used to describe a software system on different$\backslash$nabstraction layers and from different perspectives. Following the$\backslash$nMDA vision, model transformation is used to support the gradual refinement$\backslash$nfrom abstract models into more concrete models. However, target models$\backslash$ndo not stay untouched but may be changed due to maintenance work$\backslash$nor evolution of the software. Therefore, in order to preserve a coherent$\backslash$ndescription of the whole system, it is necessary to propagate certain$\backslash$nchanges to a target model back to the source model. However, as transformations$\backslash$nin general are partial and not injective, they cannot be easily reversed$\backslash$nto propagate changes. This paper presents a formal definition of$\backslash$nround-trip engineering and the semantics of target changes in the$\backslash$ncontext of partial and non-injective transformations.},
author = {Hettel, Thomas and Lawley, Michael and Raymond, Kerry},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-540-69927-9{\_}3},
isbn = {3540699260},
issn = {03029743},
pages = {31--45},
title = {{Model synchronisation: Definitions for round-trip engineering}},
volume = {5063 LNCS},
year = {2008}
}


@misc{Domnguez2012,
abstract = {Context: Model Driven Development (MDD) encourages the use of models for developing complex software systems. Following a MDD approach, modelling languages are used to diagrammatically model the structure and behaviour of object-oriented software, among which state-based languages (including UML state machines, finite state machines and Harel statecharts) constitute the most widely used to specify the dynamic behaviour of a system. However, generating code from state machine models as part of the final system constitutes one of the most challenging tasks due to its dynamic nature and because many state machine concepts are not supported by the object-oriented programming languages. Therefore, it is not surprising that such code generation has received great attention over the years. Objective: The overall objective of this paper is to plot the landscape of published proposals in the field of object oriented code generation from state machine specifications, restricting the search neither to a specific context nor to a particular programming language. Method: We perform a systematic, accurate literature review of published studies focusing on the object oriented implementation of state machine specifications. Results: The systematic review is based on a comprehensive set of 53 resources in all, which we have classified into two groups: pattern-based and not pattern-based. For each proposal, we have analysed both the state machine specification elements they support and the means the authors propose for their implementation. Additionally, the review investigates which proposals take into account desirable features to be considered in software development such as maintenance or reusability. Conclusions: One of the conclusions drawn from the review is that most of the analysed works are based on a software design pattern. Another key finding is that many papers neither support several of the main components of the expressive richness of state machine specifications nor provide an implementation strategy that considers relevant qualitative aspects in software development. ?? 2012 Elsevier B.V. All rights reserved.},
author = {Dom\'{i}nguez, Eladio and P\'{e}rez, Beatriz and Rubio, \'{A}ngel L. and Zapata, Mar\'{i}a A.},
booktitle = {Information and Software Technology},
doi = {10.1016/j.infsof.2012.04.008},
isbn = {0950-5849},
issn = {09505849},
keywords = {Code generation,Finite state machines,Statecharts,Systematic review,UML state machines},
number = {10},
pages = {1045--1066},
title = {{A systematic review of code generation proposals from state machine specifications}},
volume = {54},
year = {2012}
}


@article{Aßmann200333,
title = "Automatic Roundtrip Engineering ",
journal = "Electronic Notes in Theoretical Computer Science ",
volume = "82",
number = "5",
pages = "33 - 41",
year = "2003",
note = "\{SC\} 2003, Workshop on Software Composition (Satellite Event for \{ETAPS\} 2003) ",
issn = "1571-0661",
doi = "http://dx.doi.org/10.1016/S1571-0661(04)80732-1",
author = "Uwe A{\ss}mann"
}



@book{Douglass1999,
abstract = {This edition features version 1.3 of the UML standard and includes extensive coverage of the action semantics metamodel and statecharts, as well as further ...},
author = {Douglass, Bruce Powel},
booktitle = {The Addison-Wesley object technology series},
isbn = {0201657848},
keywords = {Embedded computer systems Programming.,Object-oriented methods (Computer science),Real-time data processing.},
pages = {xxxi, 328},
title = {{Real-time UML : developing efficient objects for embedded systems}},
year = {1999}
}

@article{Duby2001,
author = {Duby, Carolyn},
file = {:C$\backslash$:/Documents/articles/Duby01.pdf:pdf},
journal = {Proceedings of Embedded Systems Conference Fall},
number = {April},
title = {{Class 265 : Implementing UML Statechart Diagrams}},
year = {2001}
}

@article{Allegrini2002,
author = {Allegrini, Tiziana},
file = {:C$\backslash$:/Documents/articles/tesi{\_}en.pdf:pdf},
title = {{Code Generation Starting From Statecharts Specified in UML}},
volume = {9},
year = {2002}
}

@article{Shalyto2006,
author = {Shalyto, Anatoly and Shamgunov, Nikita},
file = {:C$\backslash$:/Documents/articles/paper on state pattern B31-full.pdf:pdf},
journal = {Proc. of the 4th International Conference on.NET Technologies},
keywords = {state-machine},
mendeley-groups = {code gen},
title = {{State machine design pattern}},
year = {2006}
}

@book{Booch1998,
abstract = {Introduced in 1997, the Unified Modeling Language (UML) has rapidly been accepted throughout the software industry as the standard graphical language for specifying, constructing, visualizing and documenting software-intensive systems. The UML provides anyone involved in the production, deployment, and maintenance of software with a standard notation for expressing a system's blueprint. The UML covers conceptual things, such as business processes and system functions, as well as concrete things, such as programming-language classes, database schemas, and reusable software components. In textitThe Unified Modeling Language User Guide, the original developers of the UML--Grady Booch, James Rumbaugh, and Ivar Jacobson--provide a tutorial to the core aspects of the language in a two-color format designed to facilitate learning. Starting with a conceptual model of the UML, the book progressively applies the UML to a series of increasingly complex modeling problems across a variety of application domains. This example-driven approach helps readers quickly understand and apply the UML. For more advanced developers, the book includes a learning track focused on applying the UML to advanced modeling problems. With textitThe Unified Modeling Language User Guide, readers will: beginitemize item Understand what the UML is, what it is not, and why it is relevant to the development of software-intensive systems. item Master the vocabulary, rules, and idioms of the UML in order to ``speak" the language effectively. item Learn how to apply the UML to a number of common modeling problems. item See illustrations of the UML's use interspersed with use cases for specific UML features. item Gain insight into the UML from the original creators of the UML. enditemize},
author = {Booch, Grady and Rumbaugh, James and Jacobson, Ivar},
booktitle = {Techniques},
isbn = {0201571684},
issn = {20157168},
pages = {512},
title = {{The Unified Modeling Language User Guide}},
url = {http://portal.acm.org/citation.cfm?id=1088874},
volume = {3},
year = {1998}
}


@article{Specification2007,
abstract = {This specification defines the Unified Modeling Language (UML), revision 2. The objective of UML is to provide system architects, software engineers, and software developers with tools for analysis, design, and implementation of software- based systems as well as for modeling business and similar processes.},
author = {Specification, O M G Available and Bars, Change},
doi = {10.1007/s002870050092},
isbn = {formal/2015-03-01},
issn = {08950695},
journal = {Language},
number = {November},
pages = {1 -- 212},
pmid = {10834647},
title = {{OMG Unified Modeling Language ( OMG UML )}},
url = {http://www.omg.org/spec/UML/2.1.2/Infrastructure/PDF},
year = {2007}
}


@article{Mussbacher2014,
author = {Mussbacher, Gunter and Amyot, Daniel and Breu, Ruth and Bruel, Jean-michel and Cheng, Betty H C and Collet, Philippe and Combemale, Benoit and France, Robert B and Heldal, Rogardt and Hill, James and Kienzle, J{\"{o}}rg and Sch{\"{o}}ttle, Matthias},
file = {:C$\backslash$:/Users/VP242103/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Mussbacher et al. - 2014 - The Relevance of Model-Driven Engineering Thirty Years from Now.pdf:pdf},
journal = {ACM/IEEE 17th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
keywords = {benoit combemale 7,betty h,c,cheng 5,daniel amyot 2,france 8,gunter mussbacher 1,jean-michel bruel 4,philippe collet 6,relevance of model-driven engineering,robert b,ruth breu 3,thirty years from now},
mendeley-groups = {MODELS Con},
pages = {183--200},
title = {{The Relevance of Model-Driven Engineering Thirty Years from Now}},
year = {2014}
}

@article{wagelaar_composition_2008,
	title = {Composition {Techniques} for {Rule}-{Based} {Model} {Transformation} {Languages}},
	url = {http://dx.doi.org/10.1007/978-3-540-69927-9_11},
	doi = {10.1007/978-3-540-69927-9_11},
	abstract = {Model transformation languages have matured to a point where people have started experimenting with model transformation definitions themselves in addition to the language they are written in. In addition to the transformation language properties, the properties of model transformation definitions themselves become important, such as scalability, maintainability and reusability. Composition of model transformations allows for the creation of smaller, maintainable and reusable model transformation definitions that can scale up to a larger model transformation. There are two kinds of composition for model transformations. External composition deals with chaining separate model transformations together by passing models from one transformation to another. Internal composition composes two model transformation definitions into one new model transformation, which typically requires knowledge of the transformation language. This paper focuses on internal composition for two rule-based model transformation languages. One is the ATLAS Transformation Language, which serves as our implementation vehicle. The other is the QVT Relations language, which is a standard transformation language for MOF. We propose a composition technique called module superimposition. We discuss how module superimposition interacts with other composition techniques in ATL, such as helpers, called rules and rule inheritance. Together, these techniques allow for powerful composition of entire transformation modules as well as individual transformation rules. By applying superimposition to QVT Relations, we demonstrate that our composition technique is relevant outside the ATL language as well.},
	urldate = {2015-05-19},
	journal = {Theory and Practice of Model Transformations},
	author = {Wagelaar, Dennis},
	year = {2008},
	keywords = {transformation},
	pages = {152--167}
}

@incollection{chenouard_automatically_2009,
	title = {Automatically {Discovering} {Hidden} {Transformation} {Chaining} {Constraints}},
	volume = {5795},
	isbn = {978-3-642-04424-3},
	url = {http://dx.doi.org/10.1007/978-3-642-04425-0_8},
	abstract = {Model transformations operate on models conforming to precisely defined metamodels. Consequently, it often seems relatively easy to chain them: the output of a transformation may be given as input to a second one if metamodels match. However, this simple rule has some obvious limitations. For instance, a transformation may only use a subset of a metamodel. Therefore, chaining transformations appropriately requires more information. We present here an approach that automatically discovers more detailed information about actual chaining constraints by statically analyzing transformations. The objective is to provide developers who decide to chain transformations with more data on which to base their choices. This approach has been successfully applied to the case of a library of endogenous transformations. They all have the same source and target metamodel but have some hidden chaining constraints. In such a case, the simple metamodel matching rule given above does not provide any useful information.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Chenouard, Raphaël and Jouault, Frédéric},
	editor = {Schürr, Andy and Selic, Bran},
	year = {2009},
	keywords = {transformation},
	pages = {92--106}
}

@incollection{bergmann_efficient_2009,
	title = {Efficient model transformations by combining pattern matching strategies},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-02408-5_3},
	urldate = {2015-05-19},
	booktitle = {Theory and {Practice} of {Model} {Transformations}},
	publisher = {Springer},
	author = {Bergmann, Gábor and Horváth, Akos and Ráth, István and Varró, Dániel},
	year = {2009},
	pages = {20--34},
	file = {icmt2009.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\SWMUAVSA\\icmt2009.pdf:application/pdf}
}

@inproceedings{varro_automatic_2002,
	title = {Automatic {Program} {Generation} for and by {Model} {Transformation} {Systems}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.18.3061},
	abstract = {Model transformation systems are graph transformation systems that perform translations between languages defined by a corresponding metamodel as the type graph. The current paper proposes a reflective method for the automatic generation of the implementation for such transformation systems derived from a high--level specification consisting of a set of graph transformation rules and a control flow graph. The program generator takes a UML profile tailored to model transformation systems as the...},
	urldate = {2015-05-19},
	author = {Varr\{{\textbackslash}'o\}, D{\textbackslash}'aniel},
	editor = {Kreowski, Hans and Knirsch, Peter},
	month = apr,
	year = {2002},
	keywords = {generation, mda, model, transformation},
	pages = {161--173}
}

@inproceedings{czarnecki_classification_2003,
	title = {Classification of model transformation approaches},
	volume = {45},
	url = {http://www.researchgate.net/profile/Simon_Helsen/publication/213882885_Classification_of_Model_Transformation_Approaches/links/00b495204f8807e206000000.pdf},
	urldate = {2015-05-19},
	booktitle = {Proceedings of the 2nd {OOPSLA} {Workshop} on {Generative} {Techniques} in the {Context} of the {Model} {Driven} {Architecture}},
	publisher = {USA},
	author = {Czarnecki, Krzysztof and Helsen, Simon},
	year = {2003},
	pages = {1--17},
	file = {[PDF] from researchgate.net:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\SPCRPHAG\\Czarnecki et Helsen - 2003 - Classification of model transformation approaches.pdf:application/pdf}
}

@misc{_uml_????,
	title = {{UML} {Lab} - {Yatta} {Solutions}},
	url = {http://www.uml-lab.com/en/uml-lab/},
	urldate = {2016-04-05},
	file = {UML Lab - Yatta Solutions:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\CW8T9PJ7\\uml-lab.html:text/html}
}

@misc{qompass,
	author = {Qompass},
	title = {{Qompass}},
	howpublished = "\url{https://wiki.eclipse.org/Papyrus_Qompass}",
	note = "[Online; accessed 01-Sept-2015]",
	year = {2015}
}

@misc{Massif,
	title = {{Valgrind} {Massif}},
	url = {http://valgrind.org/docs/manual/ms-manual.html},
	urldate = {2016-06-05},
}


@misc{benchmark,
	title = {{State} {Machine} {Benchmark}},
	url = {http://boost-experimental.github.io/msm-lite/benchmarks/index.html},
	urldate = {2016-06-05},
}

@misc{EUML,
	title = {{State} {Machine} {Benchmark}},
	url = {http://www.boost.org/doc/libs/1_61_0/libs/msm/doc/HTML/ch03s04.html},
	urldate = {2016-06-05},
}

@article{lengyel_metamodel-based_2006,
	title = {Metamodel-{Based} {Model} {Transformation} with {Aspect}-{Oriented} {Constraints}},
	volume = {152},
	url = {http://dx.doi.org/10.1016/j.entcs.2005.10.020},
	doi = {10.1016/j.entcs.2005.10.020},
	abstract = {Model transformation means converting an input model available at the beginning of the transformation process to an output model. A widely used approach to model transformation uses graph rewriting as the underlying transformation technique. In case of diagrammatic languages, such as the Unified Modeling Language (UML), the exclusive topological matching is found to be not enough. To define precisely the transformation steps beyond the topology of the visual models, additional constraints must be specified which ensures the correctness of the attributes, or other properties to be enforced. Dealing with OCL constraints provides a solution for these unsolved issues, because topological and attribute transformation methods cannot perform and express the problems which can be addressed by constraint validation. The use of OCL as a constraint and query language in modeling is essential. We have shown that it can be applied to model transformations as well. Often, the same constraint is repetitiously applied in many different places in a transformation. It would be beneficial to describe a common constraint in a modular manner, and to designate the places where it is to be applied. This paper presents the problem of crosscutting constraints in transformation rules, and provides an aspect-oriented solution for it. Our approach makes it possible to define constraints separately from the transformation steps, and facilitates specifying their propagation assignment to graph transformation rules. To illustrate the conceptual results, a case study is also provided, which introduces (i) how our approach generates user interface handler source code for mobile platform from a resource model and a statechart diagram, and (ii) how it validates specific properties during the transformation steps using aspect-oriented constraints.},
	urldate = {2015-05-19},
	journal = {Proceedings of the International Workshop on Graph and Model Transformation (GraMoT 2005)},
	author = {Lengyel, Laszlo and Levendovszky, Tihamer and Mezei, Gergely and Forstner, Bertalan and Charaf, Hassan},
	month = mar,
	year = {2006},
	keywords = {constraints, features, variability},
	pages = {111--123}
}

@inproceedings{iacob_reusable_2008,
	title = {Reusable {Model} {Transformation} {Patterns}},
	doi = {10.1109/EDOCW.2008.51},
	abstract = {This paper is a reflection of our experience with the specification and subsequent execution of model transformations in the QVT core and Relations languages. Since this technology for executing transformations written in high-level, declarative specification languages is of very recent date, we observe that there is little knowledge available on how to write such declarative model transformations. Consequently, there is a need for a body of knowledge on transformation engineering. With this paper we intend to make an initial contribution to this emerging discipline. Based on our experiences we propose a number of useful design patterns for transformation specification. In addition we provide a method for specifying such transformation patterns in QVT, such that others can add their own patterns to a catalogue and the body of knowledge can grow as experience is built up. Finally, we illustrate how these patterns can be used in the specification of complex transformations.},
	booktitle = {Enterprise {Distributed} {Object} {Computing} {Conference} {Workshops}, 2008 12th},
	author = {Iacob, M.-E. and Steen, M.W.A. and Heerink, L.},
	month = sep,
	year = {2008},
	keywords = {Computational modeling, Computer architecture, Context modeling, declarative specification language, design pattern, Domain specific languages, Engines, executing model transformation, Knowledge engineering, object-oriented programming, query/view/transformation core, Reflection, reusable model, Shape, software reusability, Software standards, specification languages},
	pages = {1--10},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\DT7DN6TZ\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\R2J68QHH\\Iacob et al. - 2008 - Reusable Model Transformation Patterns.pdf:application/pdf}
}

@article{kurtev_rule-based_2007,
	title = {Rule-based modularization in model transformation languages illustrated with {ATL}},
	volume = {68},
	issn = {0167-6423},
	url = {http://dx.doi.org/10.1016/j.scico.2007.05.006},
	doi = {10.1016/j.scico.2007.05.006},
	abstract = {This paper studies ways for modularizing transformation definitions in current rule-based model transformation languages. Two scenarios are shown in which the modular units are identified on the basis of relations between source and target metamodels and on the base of generic transformation functionality. Both scenarios justify modularization by requiring adaptability and reusability in transformation definitions. To enable representation and composition of the identified units, a transformation language must provide proper modular constructs and mechanisms for their integration. We evaluate several implementations of the scenarios by applying different transformation techniques: usage of explicit and implicit rule calls, and usage of rule inheritance. ATLAS Transformation Language (ATL) is used to illustrate these implementations. The experience with these scenarios shows that current languages provide a reasonably full set of modular constructs but may have problems in handling some composition tasks.},
	number = {3},
	urldate = {2015-05-19},
	journal = {Special Issue on Model Transformation},
	author = {Kurtev, Ivan and van den Berg, Klaas and Jouault, Frédéric},
	month = oct,
	year = {2007},
	keywords = {transformation},
	pages = {138--154}
}

@article{pajic_model-driven_2014,
	title = {Model-driven safety analysis of closed-loop medical systems},
	volume = {10},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6341078},
	number = {1},
	urldate = {2015-06-11},
	journal = {Industrial Informatics, IEEE Transactions on},
	author = {Pajic, Miroslav and Mangharam, Rahul and Sokolsky, Oleg and Arney, David and Goldman, Julian M. and Lee, Inkyu},
	year = {2014},
	pages = {3--16},
	file = {Model-Driven Safety Analysis of Closed-Loop Medical Systems.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\3WFWSI7P\\Model-Driven Safety Analysis of Closed-Loop Medical Systems.pdf:application/pdf}
}

@article{levendovszky_systematic_2005,
	title = {A systematic approach to metamodeling environments and model transformation systems in {VMTS}},
	volume = {127},
	url = {http://www.sciencedirect.com/science/article/pii/S1571066105001155},
	number = {1},
	urldate = {2015-05-19},
	journal = {Electronic Notes in Theoretical Computer Science},
	author = {Levendovszky, Tihamér and Lengyel, László and Mezei, Gergely and Charaf, Hassan},
	year = {2005},
	pages = {65--75},
	file = {[HTML] from sciencedirect.com:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\9M3P9Q78\\S1571066105001155.html:text/html}
}

@incollection{petriu_metamodel_2004,
	title = {A metamodel for generating performance models from {UML} designs},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-30187-5_4},
	urldate = {2015-06-09},
	booktitle = {«{UML}» 2004—{The} {Unified} {Modeling} {Language}. {Modeling} {Languages} and {Applications}},
	publisher = {Springer},
	author = {Petriu, Dorin B. and Woodside, Murray},
	year = {2004},
	pages = {41--53},
	file = {Petriu et Woodside - 2004 - A metamodel for generating performance models from.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\XCRNFAPA\\Petriu et Woodside - 2004 - A metamodel for generating performance models from.pdf:application/pdf}
}

@book{ehrig_termination_2005,
	title = {Termination criteria for model transformation},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-31984-9_5},
	urldate = {2015-05-19},
	publisher = {Springer},
	author = {Ehrig, Hartmut and Ehrig, Karsten and De Lara, Juan and Taentzer, Gabriele and Varró, Dániel and Varró-Gyapay, Szilvia},
	year = {2005},
	file = {[PDF] from dagstuhl.de:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\E8C33MZC\\Ehrig et al. - 2005 - Termination criteria for model transformation.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\KI2XI9MB\\978-3-540-31984-9_5.html:text/html}
}

@article{smith_impossibility_2005,
	title = {On the (im)possibility of social justice in {South} {Africa}},
	volume = {58},
	url = {http://dx.doi.org/10.1353/trn.2005.0041},
	doi = {10.1353/trn.2005.0041},
	abstract = {The purpose of this paper is to explore the meaning of social justice, in
general and within the particular context of South Africa. It draws freely on a number of my previous publications (listed in the references and not cited individually in the text). The intention here is to make more explicit a position stated obliquely in the conclusions of some of my recent writings: that it is difficult if not impossible to imagine social justice in South Africa. The argument is based on problems with the concept of social justice, and on the reality of South Africa emerging from apartheid.},
	number = {1},
	urldate = {2015-05-19},
	journal = {Transformation: Critical Perspectives on Southern Africa},
	author = {Smith, David},
	year = {2005},
	keywords = {justice, south-africa},
	pages = {45--65}
}

@incollection{biermann_graphical_2006,
	title = {Graphical {Definition} of {In}-{Place} {Transformations} in the {Eclipse} {Modeling} {Framework}},
	volume = {4199},
	isbn = {978-3-540-45772-5},
	url = {http://dx.doi.org/10.1007/11880240_30},
	abstract = {The Eclipse Modeling Framework (EMF) provides a modeling and code generation framework for Eclipse applications based on structured data models. Although EMF provides basic operations for modifying EMF based models, a framework for graphical definition of rule-based modification of EMF models is still missing. In this paper we present a framework for in-place EMF model transformation based on graph transformation. Transformations are visually defined by rules on object patterns typed over an EMF core model. Defined transformation systems can be compiled to Java code building up on generated EMF classes. As running example different refactoring methods for Ecore models are considered.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer Berlin / Heidelberg},
	author = {Biermann, Enrico and Ehrig, Karsten and Köhler, Christian and Kuhns, Günter and Taentzer, Gabriele and Weiss, Eduard},
	editor = {Nierstrasz, Oscar,  and Whittle, Jon,  and Harel, David,  and Reggio, Gianna, },
	year = {2006},
	keywords = {eclipse, grammar, graph, mda, model, transformation},
	pages = {425--439}
}

@article{wada_model-driven_2010,
	title = {A model-driven development framework for non-functional aspects in service oriented architecture},
	url = {http://books.google.com/books?hl=en&lr=&id=fXJ7IW0mBa4C&oi=fnd&pg=PA358&dq=%22and+connections+between+services.+Each+service+encapsulates+the+function+of+a%22+%22(e.g.,+security+and+fault+tolerance)+of+services+and+connections+from+their%22+%22from+maliciously+sniffing+or+altering+the+messages.+Another+application+may%22+&ots=tHAMUNCf_p&sig=wMyhGO4vxOe48PbD2ZiOx7xtK4g},
	urldate = {2015-06-09},
	journal = {Web Services Research for Emerging Applications: Discoveries and Trends: Discoveries and Trends},
	author = {Wada, Hiroshi and Suzuki, Junichi and Oba, Katsuya},
	year = {2010},
	pages = {358},
	file = {Wada et al. - 2010 - A model-driven development framework for non-funct.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\89GZGCPU\\Wada et al. - 2010 - A model-driven development framework for non-funct.pdf:application/pdf}
}

@inproceedings{jouault_transforming_2006,
	title = {Transforming models with {ATL}},
	url = {http://link.springer.com/chapter/10.1007/11663430_14},
	urldate = {2015-05-19},
	booktitle = {satellite events at the {MoDELS} 2005 {Conference}},
	publisher = {Springer},
	author = {Jouault, Frédéric and Kurtev, Ivan},
	year = {2006},
	pages = {128--138},
	file = {Jouault05.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\CQXEP334\\Jouault05.pdf:application/pdf}
}

@inproceedings{madari_synchronizing_2009,
	title = {Synchronizing user interfaces of different mobile platforms},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5167897},
	urldate = {2015-05-19},
	booktitle = {{EUROCON} 2009, {EUROCON}'09. {IEEE}},
	publisher = {IEEE},
	author = {Madari, István and Lengyel, László},
	year = {2009},
	pages = {1852--1859},
	file = {IstVan Madari - Laszlo - Sync User Interfaces of mobile platforms.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\KVPEQWWP\\IstVan Madari - Laszlo - Sync User Interfaces of mobile platforms.pdf:application/pdf}
}

@article{mens_applying_2006,
	title = {Applying a {Model} {Transformation} {Taxonomy} to {Graph} {Transformation} {Technology}},
	volume = {152},
	issn = {15710661},
	url = {http://dx.doi.org/10.1016/j.entcs.2005.10.022},
	doi = {10.1016/j.entcs.2005.10.022},
	abstract = {A taxonomy of model transformations was introduced in [T. Mens, P.V. Gorp, A taxonomy of model transformation, in: Proc. Int'l Workshop on Graph and Model Transformation (GraMoT 2005), Electronic Notes in Computer Science (2005)]. Among others, such a taxonomy can help developers in deciding which language, forma lism, tool or mechanism is best suited to carry out a particular model transformation activity. In this paper we apply the taxonomy to the technique of graph transformation, and we exemplify it by referring to four representative graph transformation tools. As a byproduct of our analysis, we discuss how well each of the considered tools carry out the activity of model transformation.},
	urldate = {2015-05-19},
	journal = {Proceedings of the International Workshop on Graph and Model Transformation (GraMoT 2005)},
	author = {Mens, T and Vangorp, P and Varro, D and Karsai, G},
	month = mar,
	year = {2006},
	keywords = {graph\_transformations, model\_transformations},
	pages = {143--159}
}

@inproceedings{bezivin_first_2003,
	title = {First experiments with the {ATL} model transformation language: {Transforming} {XSLT} into {XQuery}},
	volume = {37},
	shorttitle = {First experiments with the {ATL} model transformation language},
	url = {https://www.mscs.mu.edu/~praveen/Teaching/fa05/AdvDb/PaperTeams/XSLT2XQTeam/bezivin.pdf},
	urldate = {2015-05-19},
	booktitle = {2nd {OOPSLA} {Workshop} on {Generative} {Techniques} in the context of {Model} {Driven} {Architecture}},
	author = {Bézivin, Jean and Dupé, Grégoire and Jouault, Frédéric and Pitette, Gilles and Rougui, Jamal Eddine},
	year = {2003}
}

@article{kamete_when_2008,
	title = {When livelihoods take a battering...{Mapping} the '{New} {Gold} {Rush}' in {Zimbabwe}'s {Angwa}-{Pote} {Basin}},
	volume = {65},
	url = {http://muse.jhu.edu/journals/trn/v065/65.1kamete.html},
	number = {1},
	urldate = {2015-05-19},
	journal = {Transformation: Critical Perspectives on Southern Africa},
	author = {Kamete, Amin},
	year = {2008},
	pages = {36--67}
}

@misc{visual_paradigm_visual_????,
	title = {Visual {Paramdigm}},
	url = {https://www.visual-paradigm.com/},
	urldate = {2016-04-02},
	author = {Visual Paradigm},
	file = {Software Design Tools for Agile Teams, with UML, BPMN and More:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\7V3W9PSE\\www.visual-paradigm.com.html:text/html}
}

@misc{moka,
	title = {Moka {Model} {Execution}},
	url = {https://wiki.eclipse.org/Papyrus/UserGuide/ModelExecution},
	urldate = {2016-04-02},
	file = {Software Design Tools for Agile Teams, with UML, BPMN and More:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\7V3W9PSE\\www.visual-paradigm.com.html:text/html}
}

@misc{_models_????,
	title = {Models at {Runtime} for {Self}-{Adaptive} {Software} {\textbar} {MDELab}},
	url = {https://www.hpi.uni-potsdam.de/giese/public/mdelab/mdelab-projects/software-engineering-for-self-adaptive-systems/morisia/},
	urldate = {2015-06-10},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\DFF54FGH\\morisia.html:text/html}
}

@article{jouault_interoperability_2007,
	title = {On the interoperability of model-to-model transformation languages},
	volume = {68},
	issn = {01676423},
	url = {http://dx.doi.org/10.1016/j.scico.2007.05.005},
	doi = {10.1016/j.scico.2007.05.005},
	abstract = {Transforming models is a crucial activity in Model Driven Engineering (MDE). With the adoption of the OMG QVT standard for model transformation languages, it is anticipated that the experience in applying model transformations in various domains will increase. However, the QVT standard is just one possible approach for solving model transformation problems. In parallel with the QVT activity, many research groups and companies have been working on their own model transformation approaches and languages. It is important for software developers to be able to compare and select the most suitable languages and tools for a particular problem. This paper compares several model-to-model transformation languages as a step in the direction of gathering knowledge about the existing model transformation approaches. The focus is on the major language components (sublanguages and their features, execution tools, etc.) and how they are related. The major goal is to motivate the need for language interoperability and to explore options and obstacles for such interoperability. We propose a set of heuristics to reason about the problems that must be addressed when translators between languages have to be developed. These heuristics are applied on several examples. The experience from these examples shows that achieving a large degree of interoperability is difficult since some languages expose incompatible features. We managed to identify, however, cases where the interoperability between languages is feasible and brings certain benefits.},
	number = {3},
	urldate = {2015-05-19},
	journal = {Special Issue on Model Transformation},
	author = {Jouault, Frédéric and Kurtev, Ivan},
	month = oct,
	year = {2007},
	keywords = {mda, model, model\_transform},
	pages = {114--137}
}

@article{niaz_object-oriented_2005,
	title = {An object-oriented approach to generate {Java} code from {UML} {Statecharts}},
	volume = {6},
	number = {2},
	urldate = {2016-01-26},
	journal = {International Journal of Computer \& Information Science},
	author = {Niaz, Iftikhar Azim and Tanaka, Jiro},
	year = {2005},
	pages = {315--321},
	file = {10.1.1.77.1843.pdf:C\:\\Documents\\articles\\umlstatemachine\\10.1.1.77.1843.pdf:application/pdf}
}

@book{brambilla_model-driven_2012,
	title = {Model-{Driven} {Software} {Engineering} in {Practice}},
	isbn = {9781608458820},
	abstract = {This book discusses how model-based approaches can improve the daily practice of software professionals. This is known as Model-Driven Software Engineering (MDSE) or, simply, Model-Driven Engineering (MDE). MDSE practices have proved to increase efficiency and effectiveness in software development, as demonstrated by various quantitative and qualitative studies. MDSE adoption in the software industry is foreseen to grow exponentially in the near future, e.g., due to the convergence of software development and business analysis. The aim of this book is to provide you with an agile and flexible tool to introduce you to the MDSE world, thus allowing you to quickly understand its basic principles and techniques and to choose the right set of MDSE instruments for your needs so that you can start to benefit from MDSE right away. The book is organized into two main parts. The first part discusses the foundations of MDSE in terms of basic concepts (i.e., models and transformations), driving principles, application scenarios and current standards, like the well-known MDA initiative proposed by OMG (Object Management Group) as well as the practices on how to integrate MDSE in existing development processes. The second part deals with the technical aspects of MDSE, spanning from the basics on when and how to build a domain-specific modeling language, to the description of Model-to-Text and Model-to-Model transformations, and the tools that support the management of MDSE projects. The book is targeted to a diverse set of readers, spanning: professionals, CTOs, CIOs, and team managers that need to have a bird's eye vision on the matter, so as to take the appropriate decisions when it comes to choosing the best development techniques for their company or team; software analysts, developers, or designers that expect to use MDSE for improving everyday work productivity, either by applying the basic modeling techniques and notations or by defining new domain-specific modeling languages and applying end-to-end MDSE practices in the software factory; and academic teachers and students to address undergrad and postgrad courses on MDSE. In addition to the contents of the book, more resources are provided on the book's website, including the examples presented in the book. Table of Contents: Introduction / MDSE Principles / MDSE Use Cases / Model-Driven Architecture (MDA) / Integration of MDSE in your Development Process / Modeling Languages at a Glance / Developing your Own Modeling Language / Model-to-Model Transformations / Model-to-Text Transformations / Managing Models / Summary},
	language = {en},
	publisher = {Morgan \& Claypool Publishers},
	author = {Brambilla, Marco and Cabot, Jordi and Wimmer, Manuel},
	year = {2012},
	keywords = {Computers / Software Development \& Engineering / General}
}

@article{savicks_animation_2009,
	title = {Animation of {UML}-{B} {State}-machines},
	url = {http://eprints.soton.ac.uk/268261/},
	urldate = {2016-04-13},
	author = {Savicks, Vitaly and Snook, Colin and Butler, Michael},
	year = {2009},
	file = {TBFMsmAnim.pdf:C\:\\Documents\\articles\\TBFMsmAnim.pdf:application/pdf}
}

@article{sendall_model_2003,
	title = {Model transformation: the heart and soul of model-driven software development},
	volume = {20},
	issn = {0740-7459},
	shorttitle = {Model transformation},
	url = {http://dx.doi.org/10.1109/ms.2003.1231150},
	doi = {10.1109/ms.2003.1231150},
	abstract = {The model-driven approach can increase development productivity and quality by describing important aspects of a solution with human-friendly abstractions and by generating common application fragments with templates. This article examines different approaches to model transformations and recommends desirable language characteristics for describing them.},
	number = {5},
	urldate = {2015-05-19},
	journal = {IEEE Software},
	author = {Sendall, S and Kozaczynski, W},
	month = sep,
	year = {2003},
	keywords = {2003, mdd, model, transformation},
	pages = {42--45}
}

@misc{_17_????,
	title = {17 {Brilliant} {Short} {Novels} {You} {Can} {Read} in a {Sitting}},
	url = {http://electricliterature.com/17-brilliant-short-novels-you-can-read-in-a-sitting/},
	abstract = {This week author Ian McEwan expressed his love of short novels, saying "very few [long] novels earn their length." Certainly it seems like a novel has to be a minimum of 500 pages to win a major li...},
	urldate = {2015-05-25},
	journal = {Electric Literature},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\685RV84I\\17-brilliant-short-novels-you-can-read-in-a-sitting.html:text/html}
}

@inproceedings{bambagini_code_2012,
	title = {A code generation framework for distributed real-time embedded systems},
	doi = {10.1109/ETFA.2012.6489586},
	abstract = {Modeling languages and tools, including Simulink, Scicos, SysML and the Eclipse Modeling Framework (EMF), bring the promise of an improved quality and productivity in the development of embedded systems and software. Unfortunately, none of these modeling languages, taken individually, is capable of fulfilling all the needs in the development of complex distributed embedded applications, from the modeling, analysis and validation stages to the automatic generation of the implementation. Overall, their strengths and weaknesses are somewhat complementary and an integrated approach could be the most promising solution. In this paper, we present a framework for integrated code generation in complex real-time distributed systems, where MBD approaches are used for the analysis and the generation of the functional (or behavioral) part, and MDA approaches (SysML/EMF) are used for modeling the execution platform, the task model and the deployment of functions onto the platform resources. This paper presents a meta-model for the description of execution platforms and an open-source code generation framework, based on the selected mapping of the functional components on the chosen platform.},
	booktitle = {2012 {IEEE} 17th {Conference} on {Emerging} {Technologies} {Factory} {Automation} ({ETFA})},
	author = {Bambagini, M. and Di Natale, M.},
	month = sep,
	year = {2012},
	keywords = {automatic generation, complex distributed embedded applications, complex real-time distributed systems, distributed processing, distributed real-time embedded systems, Eclipse Modeling Framework, embedded software, embedded systems, EMF, execution platform, functional components, integrated code generation, MBD approaches, modeling languages, modeling tools, open-source code generation framework, platform resources, productivity, program compilers, Scicos, selected mapping, Simulink, software quality, specification languages, SysML},
	pages = {1--10},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\U9VAIRAQ\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\JH8QBCSJ\\Bambagini et Di Natale - 2012 - A code generation framework for distributed real-t.pdf:application/pdf}
}

@inproceedings{koscher_experimental_2010,
	title = {Experimental security analysis of a modern automobile},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5504804},
	urldate = {2015-06-10},
	booktitle = {Security and {Privacy} ({SP}), 2010 {IEEE} {Symposium} on},
	publisher = {IEEE},
	author = {Koscher, Karl and Czeskis, Alexei and Roesner, Franziska and Patel, Shwetak and Kohno, Tadayoshi and Checkoway, Stephen and McCoy, Damon and Kantor, Brian and Anderson, Danny and Shacham, Hovav and {others}},
	year = {2010},
	pages = {447--462},
	file = {Koscher et al. - 2010 - Experimental security analysis of a modern automob.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\T4GMUJES\\Koscher et al. - 2010 - Experimental security analysis of a modern automob.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\DTD36FKN\\cookiedetectresponse.html:text/html}
}

@inproceedings{sendall_taming_2004,
	title = {Taming {Model} {Round}-{Trip} {Engineering}},
	abstract = {Abstract: Round-trip engineering is a challenging task that will become an important enabler for many Model-Driven Software Development approaches. Model round-trip engineering involves synchronizing models and keeping them consistent, thus enabling the software engineer to freely move between different representations. This vision of complete round-trip engineering is only realized to a limited degree in tools nowadays, and it proves to be a very difficult problem to solve in general. In this paper, our goal is to clarify some of the issues in automating round-trip engineering and point out some of the highlevel qualities that are desirable for round-trip engineering approaches to possess. Clarifying this domain is an important first step towards being able to systematically automate round-trip engineering of models. 1.},
	booktitle = {In {Proceedings} of {Workshop} ’{Best} {Practices} for {Model}-{Driven} {Software} {Development}},
	author = {Sendall, Shane and Küster, Jochen},
	year = {2004},
	file = {Citeseer - Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\BTGU86UJ\\Sendall et Küster - 2004 - Taming Model Round-Trip Engineering.pdf:application/pdf;Citeseer - Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\FTDFC4Z8\\summary.html:text/html}
}

@misc{_uml_????-1,
	title = {{UML} {State} {Machine} {Diagrams} - {Overview} of {Graphical} {Notation}},
	url = {http://www.uml-diagrams.org/state-machine-diagrams.html},
	urldate = {2016-04-06},
	file = {UML State Machine Diagrams - Overview of Graphical Notation:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\DRZUDAJF\\state-machine-diagrams.html:text/html}
}

@inproceedings{iacob_reusable_2008-1,
	title = {Reusable {Model} {Transformation} {Patterns}},
	doi = {10.1109/EDOCW.2008.51},
	abstract = {This paper is a reflection of our experience with the specification and subsequent execution of model transformations in the QVT core and Relations languages. Since this technology for executing transformations written in high-level, declarative specification languages is of very recent date, we observe that there is little knowledge available on how to write such declarative model transformations. Consequently, there is a need for a body of knowledge on transformation engineering. With this paper we intend to make an initial contribution to this emerging discipline. Based on our experiences we propose a number of useful design patterns for transformation specification. In addition we provide a method for specifying such transformation patterns in QVT, such that others can add their own patterns to a catalogue and the body of knowledge can grow as experience is built up. Finally, we illustrate how these patterns can be used in the specification of complex transformations.},
	booktitle = {Enterprise {Distributed} {Object} {Computing} {Conference} {Workshops}, 2008 12th},
	author = {Iacob, M.-E. and Steen, M.W.A. and Heerink, L.},
	month = sep,
	year = {2008},
	keywords = {Computational modeling, Computer architecture, Context modeling, declarative specification language, design pattern, Domain specific languages, Engines, executing model transformation, Knowledge engineering, object-oriented programming, query/view/transformation core, Reflection, reusable model, Shape, software reusability, Software standards, specification languages},
	pages = {1--10},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\ZPJ2EUQM\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\4UFRKF6B\\Iacob et al. - 2008 - Reusable Model Transformation Patterns.pdf:application/pdf}
}

@article{gilmore_non-functional_2011,
	title = {Non-functional properties in the model-driven development of service-oriented systems},
	volume = {10},
	issn = {1619-1366, 1619-1374},
	url = {http://link.springer.com/10.1007/s10270-010-0155-y},
	doi = {10.1007/s10270-010-0155-y},
	language = {en},
	number = {3},
	urldate = {2015-06-09},
	journal = {Software \& Systems Modeling},
	author = {Gilmore, Stephen and Gönczy, László and Koch, Nora and Mayer, Philip and Tribastone, Mirco and Varró, Dániel},
	month = jul,
	year = {2011},
	pages = {287--311},
	file = {Gilmore et al. - 2011 - Non-functional properties in the model-driven deve.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\WMQNMWRR\\Gilmore et al. - 2011 - Non-functional properties in the model-driven deve.pdf:application/pdf}
}

@misc{__????,
	url = {http://eprints.soton.ac.uk/268261/1/TBFMsmAnim.pdf},
	urldate = {2016-04-13},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\G8B3EFN3\\TBFMsmAnim.html:text/html}
}

@article{lengyel_modularized_2013,
	title = {Modularized {Constraint} {Management} in {Model} {Transformation} {Frameworks}},
	volume = {10},
	url = {http://www.uni-obuda.hu/journal/Lengyel_39.pdf},
	number = {1},
	urldate = {2015-05-19},
	journal = {Acta Polytechnica Hungarica},
	author = {Lengyel, László},
	year = {2013},
	file = {Lengyel_39 (1).pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\NZ8PNW8H\\Lengyel_39 (1).pdf:application/pdf}
}

@article{chi_three_2008,
	title = {Three types of conceptual change: {Belief} revision, mental model transformation, and categorical shift},
	shorttitle = {Three types of conceptual change},
	url = {https://books.google.fr/books?hl=en&lr=&id=sdyOAgAAQBAJ&oi=fnd&pg=PA61&dq=model+transformation&ots=qzX2Lkc1kk&sig=oskx2-_UreM77AZrhkBxB56zWG8},
	urldate = {2015-05-19},
	journal = {International handbook of research on conceptual change},
	author = {Chi, Michelene TH},
	year = {2008},
	pages = {61--82},
	file = {[PDF] from asu.edu:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\QX32R57N\\Chi - 2008 - Three types of conceptual change Belief revision,.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\864VIUT8\\books.html:text/html}
}

@inproceedings{bezivin_object_2001,
	title = {From object composition to model transformation with the {MDA}},
	url = {http://www.computer.org/csdl/proceedings/tools/2001/1251/00/12510350.pdf},
	urldate = {2015-05-19},
	booktitle = {Technology of {Object}-{Oriented} {Languages}, {International} {Conference} on},
	publisher = {IEEE Computer Society},
	author = {Bézivin, Jean},
	year = {2001},
	pages = {0350--0350},
	file = {[PDF] from uma.es:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\X2N8JS7H\\Bézivin - 2001 - From object composition to model transformation wi.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\6J7R5T6I\\12510350.html:text/html}
}

@incollection{akehurst_sitra:_2006,
	title = {{SiTra}: {Simple} {Transformations} in {Java}},
	shorttitle = {{SiTra}},
	url = {http://dx.doi.org/10.1007/11880240_25},
	abstract = {A number of different Model Transformation Frameworks (MTF) are being developed, each of them requiring a user to learn a different language and each possessing its own specific language peculiarities, even if they are based on the QVT standard. To write even a simple transformation, these MTFs require a large amount of learning time. We describe in this paper a minimal, Java based, library that can be used to support the implementation of many practical transformations. Use of this library enables simple transformations to be implemented simply, whilst still providing some support for more complex transformations.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	author = {Akehurst, D and Bordbar, B and Evans, M and Howells, W and Mcdonald-Maier, K},
	year = {2006},
	keywords = {java, model, transformation},
	pages = {351--364}
}

@article{ravi_security_2004,
	title = {Security in embedded systems: {Design} challenges},
	volume = {3},
	shorttitle = {Security in embedded systems},
	url = {http://dl.acm.org/citation.cfm?id=1015049},
	number = {3},
	urldate = {2015-06-10},
	journal = {ACM Transactions on Embedded Computing Systems (TECS)},
	author = {Ravi, Srivaths and Raghunathan, Anand and Kocher, Paul and Hattangady, Sunil},
	year = {2004},
	pages = {461--491},
	file = {Ravi et al. - 2004 - Security in embedded systems Design challenges.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\ETFRVJ48\\Ravi et al. - 2004 - Security in embedded systems Design challenges.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\MXXMBN3X\\citation.html:text/html}
}

@incollection{anastasakis_uml2alloy:_2007,
	title = {{UML}2Alloy: {A} challenging model transformation},
	shorttitle = {{UML}2Alloy},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-75209-7_30},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer},
	author = {Anastasakis, Kyriakos and Bordbar, Behzad and Georg, Geri and Ray, Indrakshi},
	year = {2007},
	pages = {436--450},
	file = {[PDF] from anastasakis.net:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\FQNKAAEM\\Anastasakis et al. - 2007 - UML2Alloy A challenging model transformation.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\WTRZCQVQ\\978-3-540-75209-7_30.html:text/html}
}

@incollection{varro_recursive_2008,
	title = {Recursive graph pattern matching},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-89020-1_31},
	urldate = {2015-05-19},
	booktitle = {Applications of {Graph} {Transformations} with {Industrial} {Relevance}},
	publisher = {Springer},
	author = {Varró, Gergely and Horváth, Akos and Varró, Dániel},
	year = {2008},
	pages = {456--470},
	file = {HVV_AGTIVE_07.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\QMGZEAP6\\HVV_AGTIVE_07.pdf:application/pdf}
}

@incollection{varro_generic_2004,
	title = {Generic and meta-transformations for model transformation engineering},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-30187-5_21},
	urldate = {2015-05-19},
	booktitle = {«{UML}» 2004—{The} {Unified} {Modeling} {Language}. {Modeling} {Languages} and {Applications}},
	publisher = {Springer},
	author = {Varró, Dániel and Pataricza, András},
	year = {2004},
	pages = {290--304},
	file = {[PDF] from researchgate.net:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\V6UWVUTF\\Varró et Pataricza - 2004 - Generic and meta-transformations for model transfo.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\53TD63ZS\\978-3-540-30187-5_21.html:text/html}
}

@misc{b.p__????,
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.114.2206&rep=rep1&type=pdf},
	urldate = {2016-04-13},
	author = {B.P, Douglass},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\WJMKETGJ\\download.html:text/html}
}

@inproceedings{ameller_dealing_2010,
	title = {Dealing with non-functional requirements in model-driven development},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5636894},
	urldate = {2015-06-09},
	booktitle = {Requirements {Engineering} {Conference} ({RE}), 2010 18th {IEEE} {International}},
	publisher = {IEEE},
	author = {Ameller, David and Franch, Xavier and Cabot, Jordi},
	year = {2010},
	pages = {189--198},
	file = {Ameller et al. - 2010 - Dealing with non-functional requirements in model-.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\87MDUTGC\\Ameller et al. - 2010 - Dealing with non-functional requirements in model-.pdf:application/pdf}
}

@misc{_unified_????,
	title = {the unified modeling language user guide - {Google} {Search}},
	url = {https://www.google.fr/search?q=the+unified+modeling+language+user+guide},
	urldate = {2016-04-12},
	file = {the unified modeling language user guide - Google Search:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\CGDH3KET\\search.html:text/html}
}

@article{makar_formate_1975,
	title = {Formate assay in body fluids: application in methanol poisoning},
	volume = {13},
	issn = {0006-2944},
	shorttitle = {Formate assay in body fluids},
	language = {eng},
	number = {2},
	journal = {Biochemical Medicine},
	author = {Makar, A. B. and McMartin, K. E. and Palese, M. and Tephly, T. R.},
	month = jun,
	year = {1975},
	pmid = {1},
	keywords = {Aldehyde Oxidoreductases, Animals, Body Fluids, Carbon Dioxide, Formates, Haplorhini, Humans, Hydrogen-Ion Concentration, Kinetics, Methanol, Methods, Pseudomonas},
	pages = {117--126}
}

@phdthesis{panesar-walawege_using_2012,
	title = {Using {Model}-{Driven} {Engineering} to {Support} the {Certification} of {Safety}-{Critical} {Systems}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.303.1898&rep=rep1&type=pdf},
	urldate = {2015-06-11},
	school = {Citeseer},
	author = {Panesar-Walawege, Rajwinder Kaur},
	year = {2012},
	file = {Panesar-Walawege - 2012 - Using Model-Driven Engineering to Support the Cert.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\W74FFHJS\\Panesar-Walawege - 2012 - Using Model-Driven Engineering to Support the Cert.pdf:application/pdf}
}

@incollection{sun_model_2009,
	title = {Model {Transformation} by {Demonstration}},
	volume = {5795},
	isbn = {978-3-642-04424-3},
	url = {http://dx.doi.org/10.1007/978-3-642-04425-0_58},
	abstract = {Model transformations provide a powerful capability to automate model refinements. However, the use of model transformation languages may present challenges to those who are unfamiliar with a specific transformation language. This paper presents an approach called model transformation by demonstration (MTBD), which allows an end-user to demonstrate the exact transformation desired by actually editing a source model and demonstrating the changes that evolve to a target model. An inference engine built into the underlying modeling tool records all editing operations and infers a transformation pattern, which can be reused in other models. The paper motivates the need for the approach and discusses the technical contributions of MTBD. A case study with several sample inferred transformations serves as a concrete example of the benefits of MTBD.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Sun, Yu and White, Jules and Gray, Jeff},
	editor = {Schürr, Andy and Selic, Bran},
	year = {2009},
	keywords = {2009, model, transformation},
	pages = {712--726}
}

@article{mens_taxonomy_2006,
	title = {A taxonomy of model transformation},
	volume = {152},
	url = {http://www.sciencedirect.com/science/article/pii/S1571066106001435},
	urldate = {2015-05-19},
	journal = {Electronic Notes in Theoretical Computer Science},
	author = {Mens, Tom and Van Gorp, Pieter},
	year = {2006},
	pages = {125--142},
	file = {[HTML] from sciencedirect.com:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\D4RAFV3Z\\S1571066106001435.html:text/html}
}

@misc{center_for_history_and_new_media_guide_????,
	title = {Guide rapide pour débuter},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}},
	annote = {Bienvenue dans Zotero !
Visualiser le guide rapide pour apprendre et commencer à collecter, gérer, citer et partager vos sources de recherche.
Merci d'avoir installé Zotero.}
}

@inproceedings{bezivin_model_2006,
	title = {Model transformations? transformation models!},
	isbn = {3-540-45772-0, 978-3-540-45772-5},
	shorttitle = {Model transformations?},
	url = {http://dx.doi.org/10.1007/11880240_31},
	doi = {10.1007/11880240_31},
	abstract = {Much of the current work on model transformations seems essentially operational and executable in nature. Executable descriptions are necessary from the point of view of implementation. But from a conceptual point of view, transformations can also be viewed as descriptive models by stating only the properties a transformation has to fulfill and by omitting execution details. This contribution discusses the view that model transformations can be abstracted as being transformation models. As a simple example for a transformation model, the well-known transformation from the Entity-Relationship model to the Relational model is shown. A transformation model in this contribution is nothing more than an ordinary, simple model, i.e., a UML/MOF class diagram together with OCL constraints. A transformation model may transport syntax and semantics of the described domain. The contribution thus covers two views on transformations: An operational model transformation view and a descriptive transformation model view.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer-Verlag},
	author = {Bézivin, Jean and Büttner, Fabian and Gogolla, Martin and Jouault, Frederic and Kurtev, Ivan and Lindow, Arne},
	year = {2006},
	keywords = {model, transformation},
	pages = {440--453}
}

@inproceedings{liu_integrating_2010,
	title = {Integrating {Non}-functional {Requirement} {Modeling} into {Model} {Driven} {Development} {Method}},
	isbn = {978-1-4244-8831-5},
	url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5693185},
	doi = {10.1109/APSEC.2010.21},
	urldate = {2015-06-09},
	publisher = {IEEE},
	author = {Liu, Yi and Ma, Zhiyi and Shao, Weizhong},
	month = nov,
	year = {2010},
	pages = {98--107}
}

@inproceedings{balogh_advanced_2006,
	title = {Advanced model transformation language constructs in the {VIATRA}2 framework},
	url = {http://dl.acm.org/citation.cfm?id=1141575},
	urldate = {2015-05-19},
	booktitle = {Proceedings of the 2006 {ACM} symposium on {Applied} computing},
	publisher = {ACM},
	author = {Balogh, András and Varró, Dániel},
	year = {2006},
	pages = {1280--1287},
	file = {[PDF] from bme.hu:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\I9C3VZMR\\Balogh et Varró - 2006 - Advanced model transformation language constructs .pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\NCUPPCPD\\citation.html:text/html}
}

@incollection{garlan_using_2004,
	title = {Using architectural models at runtime: {Research} challenges},
	shorttitle = {Using architectural models at runtime},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-24769-2_15},
	urldate = {2015-06-09},
	booktitle = {Software {Architecture}},
	publisher = {Springer},
	author = {Garlan, David and Schmerl, Bradley},
	year = {2004},
	pages = {200--205},
	file = {Garlan et Schmerl - 2004 - Using architectural models at runtime Research ch.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\65AP2S8N\\Garlan et Schmerl - 2004 - Using architectural models at runtime Research ch.pdf:application/pdf}
}

@inproceedings{sanchez_aspect-oriented_2008,
	title = {Aspect-{Oriented} {Model} {Weaving} {Beyond} {Model} {Composition} and {Model} {Transformation}},
	isbn = {978-3-540-87874-2},
	url = {http://dx.doi.org/10.1007/978-3-540-87875-9_53},
	doi = {10.1007/978-3-540-87875-9_53},
	abstract = {Research in Aspect-Oriented Software Development (AOSD) has brought up powerful abstractions in order to specify under which conditions an aspect affects the base software. So far, Model-Driven Development (MDD) approaches to AOSD have mostly concentrated on the weaving process and, as a result, they have come up with manifold ways to compose aspect models and base models. All too often, however, the approaches disregard the benefits that the aspect-oriented abstractions can bring to software development, though. This paper discusses the implications that such negligence has on the specification of aspect-oriented models in MDD. Furthermore, it presents a weaver that is able to cope with sophisticated join point selection abstractions, as they are known from many aspect-oriented programming languages, and which go far beyond the selection capabilities provided by current model weavers. By means of this weaver, models can realize both a higher separation of concerns as well as a higher level of abstraction.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer-Verlag},
	author = {Sanchez, Pablo and Fuentes, Lidia and Stein, Dominik and Hanenberg, Stefan and Unland, Rainer},
	year = {2008},
	keywords = {aspect-oriented, composition, model, transformation, weavering},
	pages = {766--781}
}

@inproceedings{lawley_practical_2006,
	title = {Practical declarative model transformation with {Tefkat}},
	url = {http://link.springer.com/chapter/10.1007/11663430_15},
	urldate = {2015-05-19},
	booktitle = {Satellite {Events} at the {MoDELS} 2005 {Conference}},
	publisher = {Springer},
	author = {Lawley, Michael and Steel, Jim},
	year = {2006},
	pages = {139--150},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\G24VNER8\\11663430_15.html:text/html}
}

@article{varro_model_2007,
	title = {The model transformation language of the {VIATRA}2 framework},
	volume = {68},
	url = {http://www.sciencedirect.com/science/article/pii/S016764230700127X},
	number = {3},
	urldate = {2015-05-19},
	journal = {Science of Computer Programming},
	author = {Varró, Dániel and Balogh, András},
	year = {2007},
	pages = {214--234},
	file = {[HTML] from sciencedirect.com:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\53J8ABTR\\S016764230700127X.html:text/html}
}

@inproceedings{jouault_atl:_2006,
	title = {{ATL}: a {QVT}-like transformation language},
	shorttitle = {{ATL}},
	url = {http://dl.acm.org/citation.cfm?id=1176691},
	urldate = {2015-05-19},
	booktitle = {Companion to the 21st {ACM} {SIGPLAN} symposium on {Object}-oriented programming systems, languages, and applications},
	publisher = {ACM},
	author = {Jouault, Frédéric and Allilaire, Freddy and Bézivin, Jean and Kurtev, Ivan and Valduriez, Patrick},
	year = {2006},
	pages = {719--720},
	file = {[PDF] from researchgate.net:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\8UNE27J7\\Jouault et al. - 2006 - ATL a QVT-like transformation language.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\C2IUC658\\citation.html:text/html}
}

@inproceedings{costin_large-scale_2014,
	title = {A large-scale analysis of the security of embedded firmwares},
	url = {https://www.usenix.org/system/files/conference/usenixsecurity14/sec14-paper-costin.pdf},
	urldate = {2015-06-11},
	booktitle = {{USENIX} {Security} {Symposium}},
	author = {Costin, Andrei and Zaddach, Jonas and Francillon, Aurélien and Balzarotti, Davide and Antipolis, Sophia},
	year = {2014},
	file = {Costin et al. - 2014 - A large-scale analysis of the security of embedded.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\PB9V5AG7\\Costin et al. - 2014 - A large-scale analysis of the security of embedded.pdf:application/pdf}
}

@incollection{mussbacher_relevance_2014,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {The {Relevance} of {Model}-{Driven} {Engineering} {Thirty} {Years} from {Now}},
	copyright = {©2014 Springer International Publishing Switzerland},
	isbn = {9783319116525 9783319116532},
	url = {http://link.springer.com/chapter/10.1007/978-3-319-11653-2_12},
	abstract = {Although model-driven engineering (MDE) is now an established approach for developing complex software systems, it has not been universally adopted by the software industry. In order to better understand the reasons for this, as well as to identify future opportunities for MDE, we carried out a week-long design thinking experiment with 15 MDE experts. Participants were facilitated to identify the biggest problems with current MDE technologies, to identify grand challenges for society in the near future, and to identify ways that MDE could help to address these challenges. The outcome is a reflection of the current strengths of MDE, an outlook of the most pressing challenges for society at large over the next three decades, and an analysis of key future MDE research opportunities.},
	language = {en},
	number = {8767},
	urldate = {2016-03-26},
	booktitle = {Model-{Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer International Publishing},
	author = {Mussbacher, Gunter and Amyot, Daniel and Breu, Ruth and Bruel, Jean-Michel and Cheng, Betty H. C. and Collet, Philippe and Combemale, Benoit and France, Robert B. and Heldal, Rogardt and Hill, James and Kienzle, Jörg and Schöttle, Matthias and Steimann, Friedrich and Stikkolorum, Dave and Whittle, Jon},
	editor = {Dingel, Juergen and Schulte, Wolfram and Ramos, Isidro and Abrahão, Silvia and Insfran, Emilio},
	month = sep,
	year = {2014},
	note = {DOI: 10.1007/978-3-319-11653-2\_12},
	keywords = {challenges, Logics and Meanings of Programs, Management of Computing and Information Systems, model-driven engineering, Programming Languages, Compilers, Interpreters, research opportunities, Simulation and Modeling, Software engineering, System Performance and Evaluation},
	pages = {183--200},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\AXVBBM9G\\10.html:text/html}
}

@incollection{fritzsche_putting_2008,
	title = {Putting performance engineering into model-driven engineering: {Model}-driven performance engineering},
	shorttitle = {Putting performance engineering into model-driven engineering},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-69073-3_18},
	urldate = {2015-06-10},
	booktitle = {Models in {Software} {Engineering}},
	publisher = {Springer},
	author = {Fritzsche, Mathias and Johannes, Jendrik},
	year = {2008},
	pages = {164--175},
	file = {Fritzsche et Johannes - 2008 - Putting performance engineering into model-driven .pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\XXHDEVI2\\Fritzsche et Johannes - 2008 - Putting performance engineering into model-driven .pdf:application/pdf}
}

@inproceedings{naslavsky_towards_2007,
	title = {Towards leveraging model transformation to support model-based testing},
	isbn = {978-1-59593-882-4},
	url = {http://dx.doi.org/10.1145/1321631.1321721},
	doi = {10.1145/1321631.1321721},
	abstract = {The adoption of model-driven development is leading to increased use of models in conjunction with source code in software testing. Model-based testing, however, introduces new challenges for testing activities, which include creation and maintenance of traceability information among test-related artifacts. Traceability is required to support activities such as model-based result evaluation, regression testing and coverage analysis. In this paper, we present an automated approach that leverages model transformation techniques to support test generation. The test generation process includes creation of test-related models and fine-grained relationships among these models. We also motivate our approach with a simple example demonstrating support for model-based regression testing},
	urldate = {2015-05-19},
	publisher = {ACM},
	author = {Naslavsky, Leila and Ziv, Hadar and Richardson, Debra},
	year = {2007},
	keywords = {mbt, model, testing, transformation},
	pages = {509--512}
}

@misc{__????-1,
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.114.2206&rep=rep1&type=pdf},
	urldate = {2016-04-13},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\CS5URXU4\\download.html:text/html}
}

@article{czarnecki_feature-based_2006,
	title = {Feature-based survey of model transformation approaches},
	volume = {45},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5386627},
	number = {3},
	urldate = {2015-05-19},
	journal = {IBM Systems Journal},
	author = {Czarnecki, Krzysztof and Helsen, Simon},
	year = {2006},
	pages = {621--645}
}

@article{alanen_creating_2007,
	title = {Creating and reconciling diagrams after executing model transformations},
	volume = {68},
	issn = {01676423},
	url = {http://dx.doi.org/10.1016/j.scico.2007.05.002},
	doi = {10.1016/j.scico.2007.05.002},
	abstract = {In this paper we discuss how to create and update diagrams after the execution of a model transformation. This is achieved by creating an independent diagram reconciliation tool component that is based on a mapping language from the abstract syntax to the concrete syntax of a modeling language. This approach allows us to decouple model transformation from diagram handling in model transformation languages and tools.},
	number = {3},
	urldate = {2015-05-19},
	journal = {Special Issue on Model Transformation},
	author = {Alanen, M and Lundkvist, T and Porres, I},
	month = oct,
	year = {2007},
	keywords = {model\_transformations, visualization},
	pages = {155--178}
}

@article{jouault_atl:_2008,
	title = {{ATL}: {A} model transformation tool},
	volume = {72},
	shorttitle = {{ATL}},
	url = {http://www.sciencedirect.com/science/article/pii/S0167642308000439},
	number = {1},
	urldate = {2015-05-19},
	journal = {Science of computer programming},
	author = {Jouault, Frédéric and Allilaire, Freddy and Bézivin, Jean and Kurtev, Ivan},
	year = {2008},
	pages = {31--39},
	file = {[HTML] from sciencedirect.com:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\6HG7WARB\\S0167642308000439.html:text/html}
}

@book{muller_33rd_2007,
	address = {Los Alamitos, Calif},
	title = {33rd {Euromicro} {Conference} on {Software} {Engineering} and {Advanced} {Applications}: {SEAA} 2007: proceedings: 27-31 {August} 2007, {Lübeck}, {Germany}},
	isbn = {0769529771 9780769529776},
	shorttitle = {33rd {Euromicro} {Conference} on {Software} {Engineering} and {Advanced} {Applications}},
	publisher = {IEEE Computer Society},
	editor = {Muller, Paul and Liggesmeyer, Peter and Maehle, Erik and {IEEE Computer Society}},
	year = {2007},
	keywords = {Multimedia systems, Software engineering, Telecommunication},
	annote = {"IEEE Computer Society Order Number P2977"--T.p. verso},
	file = {0c9605368eb94cf74d000000.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\2CIQRA6T\\0c9605368eb94cf74d000000.pdf:application/pdf}
}

@misc{_papyrus/designer/code-generation_????,
	title = {Papyrus/{Designer}/code-generation - {Eclipsepedia}},
	url = {http://wiki.eclipse.org/Papyrus/Designer/code-generation},
	urldate = {2016-04-13},
	file = {Papyrus/Designer/code-generation - Eclipsepedia:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\PQ2JTD6Q\\code-generation.html:text/html}
}

@inproceedings{trubiani_model-based_2013,
	address = {New York, NY, USA},
	series = {{QoSA} '13},
	title = {Model-based {Performance} {Analysis} of {Software} {Architectures} {Under} {Uncertainty}},
	isbn = {978-1-4503-2126-6},
	url = {http://doi.acm.org/10.1145/2465478.2465487},
	doi = {10.1145/2465478.2465487},
	abstract = {Performance analysis is often conducted before achieving full knowledge of a software system, in other words under a certain degree of uncertainty. Uncertainty is particularly critical in the performance domain when it relates to values of parameters such as workload, operational profile, resource demand of services, service time of hardware devices, etc. The goal of this paper is to explicitly consider uncertainty in the performance modelling and analysis process. In particular, we use probabilistic formulation of parameter uncertainties and present a Monte Carlo simulation-based approach to systematically assess the robustness of an architectural model despite its uncertainty. In case of unsatisfactory results, we introduce refactoring actions aimed at generating new software architectural models that better tolerate the uncertainty of parameters. The proposed approach is illustrated on a case study from the e-Health domain.},
	urldate = {2015-06-18},
	booktitle = {Proceedings of the 9th {International} {ACM} {Sigsoft} {Conference} on {Quality} of {Software} {Architectures}},
	publisher = {ACM},
	author = {Trubiani, Catia and Meedeniya, Indika and Cortellessa, Vittorio and Aleti, Aldeida and Grunske, Lars},
	year = {2013},
	keywords = {monte carlo simulation, performance, software architecture evaluation, uncertainty analysis},
	pages = {69--78},
	file = {ACM Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\SDJI9BWG\\Trubiani et al. - 2013 - Model-based Performance Analysis of Software Archi.pdf:application/pdf}
}

@article{moroff_yeast_1975,
	title = {Yeast glutathione reductase. {Studies} of the kinetics and stability of the enzyme as a function of {pH} and salt concentration},
	volume = {410},
	issn = {0006-3002},
	abstract = {1. The pH dependencies of the apparent Michaelis constant for oxidized glutathione and the apparent turnover number of yeast glutathione reductase (EC 1.6.4.2) have been determined at a fixed concentration of 0.1 mM NADPH in the range pH 4.5--8.0. Between pH 5.5 and 7.6, both of these parameters are relatively constant. The principal effect of low pH on the kinetics of the enzyme-catalyzed reaction is the observation of a pH-dependent substrate inhibition by oxidized glutathione at pH less than or equal 7, which is shown to correlate with the binding of oxidized glutathione to the oxidized form of the enzyme. 2. The catalytic activity of yeast glutathione reductase at pH 5.5 is affected by the sodium acetate buffer concentration. The stability of the oxidized and reduced forms of the enzyme at pH 5.5 and 25 degrees C in the absence of bovine serum albumin was studied as a function of sodium acetate concentration. The results show that activation of the catalytic activity of the enzyme at low sodium acetate concentration correlates with an effect of sodium acetate on a reduced form of the enzyme. In contrast, inhibition of the catalytic activity of the enzyme at high sodium acetate concentration correlates with an effect of sodium acetate on the oxidized form of the enzyme.},
	language = {eng},
	number = {1},
	journal = {Biochimica Et Biophysica Acta},
	author = {Moroff, G. and Brandt, K. G.},
	month = nov,
	year = {1975},
	pmid = {74},
	keywords = {Acetates, Drug Stability, Enzyme Activation, Glutathione, Glutathione Reductase, Hydrogen-Ion Concentration, Kinetics, Osmolar Concentration, Oxidation-Reduction, Saccharomyces cerevisiae, Temperature},
	pages = {21--31}
}

@article{rahimunnisa_security_????,
	title = {Security {Monitoring} {Approach} in {Embedded} {System}},
	url = {http://ijcaonline.s1024.sureserver.com/icvci/number10/icvci1419.pdf},
	urldate = {2015-06-10},
	author = {Rahimunnisa, K. and Varkey, Rincy Merrin and Sureshkumar, S.},
	file = {Rahimunnisa et al. - Security Monitoring Approach in Embedded System.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\XHM7VP89\\Rahimunnisa et al. - Security Monitoring Approach in Embedded System.pdf:application/pdf}
}

@misc{__????-2,
	url = {http://www.fujaba.de/uploads/tx_sibibtex/ICSEToolDemo2000.pdf},
	urldate = {2016-04-06},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\7QFVHEXT\\ICSEToolDemo2000.html:text/html}
}

@article{spinke_object-oriented_2013,
	title = {An object-oriented implementation of concurrent and hierarchical state machines},
	volume = {55},
	issn = {0950-5849},
	doi = {10.1016/j.infsof.2013.03.005},
	abstract = {Context
State machine diagrams are a powerful means to describe the behavior of reactive systems. Unfortunately, the implementation of state machines is difficult, because state machine concepts, like states, events and transitions, are not directly supported in commonly used programming languages. Most of the implementation approaches known so far have one or more serious drawbacks: they are difficult to understand and maintain, lack in performance, depend on the properties of a specific programming language or do not implement the more advanced state machine features like hierarchy, concurrency or history.
Objective
This paper proposes and examines an approach to implement state machines, where both states and events are objects. Because the reaction of the state machine depends on two objects (state and event), a method known as double-dispatch is used to invoke the transition between the states. The aim of this work is to explore this approach in detail.
Method
To prove the usefulness of the proposed approach, an example was implemented with the proposed approach as well as with other commonly known approaches. The implementation strategies are then compared with each other with respect to run-time, code size, maintainability and portability.
Results
The presented approach executes fast but needs slightly more memory than other approaches. It supports hierarchy, concurrency and history, is human authorable, easy to understand and easy to modify. Because of its pure object-oriented nature depending only on inheritance and late binding, it is extensible and can be implemented with a wide variety of programming languages.
Conclusion
The results show that the presented approach is a useful way to implement state machines, even on small micro-controllers.},
	number = {10},
	urldate = {2016-04-13},
	journal = {Information and Software Technology},
	author = {Spinke, Volker},
	month = oct,
	year = {2013},
	keywords = {Code generation, design pattern, Double-dispatch, State machines, State pattern, UML statecharts},
	pages = {1726--1740},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\ZHIIV7D7\\Spinke - 2013 - An object-oriented implementation of concurrent an.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\QI4HD9IF\\S0950584913000670.html:text/html}
}

@incollection{gerber_transformation:_2002,
	title = {Transformation: {The} {Missing} {Link} of {MDA}},
	shorttitle = {Transformation},
	url = {http://dx.doi.org/10.1007/3-540-45832-8_9},
	abstract = {In this paper we explore the issue of transforming models to models, an essential part of the OMGâ€™s Model Driven Architecture (MDA) vision. Drawing from the literature and our experiences implementing a number of transformations using different technologies, we explore the strengths and weaknesses of the different technologies and identify requirements for a transformation language for performing the kind of model-to-model transformations required to realise the MDA vision.},
	urldate = {2015-05-19},
	booktitle = {Graph {Transformation}},
	author = {Gerber, Anna and Lawley, Michael and Raymond, Kerry and Steel, Jim and Wood, Andrew},
	year = {2002},
	keywords = {mda, transformation},
	pages = {90--105}
}

@article{petriu_software_2010,
	title = {Software model-based performance analysis},
	url = {http://www.sce.carleton.ca/faculty/petriu/MDD4DRES-prepub.pdf},
	urldate = {2015-06-18},
	journal = {Model Driven Engineering for distributed Real-Time Systems: MARTE modelling, model transformations and their usages (JP Babau, M. Blay-Fornarino, J. Champeau, S. Robert, A. Sabetta, Eds.), ISTE Ltd and John Wiley \& Sons Inc},
	author = {Petriu, Dorina C.},
	year = {2010},
	file = {10.1.1.180.5178.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\F86RIA7C\\10.1.1.180.5178.pdf:application/pdf}
}

@book{cortellessa_model-based_2011,
	title = {Model-{Based} {Software} {Performance} {Analysis}},
	isbn = {9783642136214},
	abstract = {Poor performance is one of the main quality-related shortcomings that cause software projects to fail. Thus, the need to address performance concerns early during the software development process is fully acknowledged, and there is a growing interest in the research and software industry communities towards techniques, methods and tools that permit to manage system performance concerns as an integral part of software engineering. Model-based software performance analysis introduces performance concerns in the scope of software modeling, thus allowing the developer to carry on performance analysis throughout the software lifecycle. With this book, Cortellessa, Di Marco and Inverardi provide the cross-knowledge that allows developers to tackle software performance issues from the very early phases of software development. They explain the basic concepts of performance analysis and describe the most representative methodologies used to annotate and transform software models into performance models. To this end, they go all the way from performance primers through software and performance modeling notations to the latest transformation-based methodologies.  As a result, their book is a self-contained reference text on software performance engineering, from which different target groups will benefit: professional software engineers and graduate students in software engineering will learn both basic concepts of performance modeling and new methodologies; while performance specialists will find out how to investigate software performance model building.},
	language = {en},
	publisher = {Springer Science \& Business Media},
	author = {Cortellessa, Vittorio and Marco, Antinisca Di and Inverardi, Paola},
	month = may,
	year = {2011},
	keywords = {Computers / Software Development \& Engineering / Quality Assurance \& Testing}
}

@article{bernardi_dependability_2012,
	title = {Dependability modeling and analysis of software systems specified with {UML}},
	volume = {45},
	url = {http://dl.acm.org/citation.cfm?id=2379778},
	number = {1},
	urldate = {2015-06-09},
	journal = {ACM Computing Surveys (CSUR)},
	author = {Bernardi, Simona and Merseguer, José and Petriu, Dorina C.},
	year = {2012},
	pages = {2},
	file = {Bernardi et al. - 2012 - Dependability modeling and analysis of software sy.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\SAJIKXDS\\Bernardi et al. - 2012 - Dependability modeling and analysis of software sy.pdf:application/pdf}
}

@inproceedings{petriu_challenges_2015,
	address = {New York, NY, USA},
	series = {{WOSP} '15},
	title = {Challenges in {Integrating} the {Analysis} of {Multiple} {Non}-{Functional} {Properties} in {Model}-{Driven} {Software} {Engineering}},
	isbn = {978-1-4503-3340-5},
	url = {http://doi.acm.org/10.1145/2693561.2693566},
	doi = {10.1145/2693561.2693566},
	abstract = {This vision paper discusses the challenges of integrating the analysis of multiple Non-Functional Properties (NFP) in the model-driven software engineering process, where formal analysis models are generated by model transformations from annotated software models. The paper proposes an integration approach based on an ecosystem of inter-related heterogeneous modeling artifacts intended to support consistent co-evolution of the software and analysis models, cross-model traceability, incremental propagation of changes across models and (semi)automated software process steps. Another goal is to investigate new metaheuristics approaches for reducing the size of the design space to be explored in the search for a design solution that will meet all the non-functional requirements.},
	urldate = {2015-06-09},
	booktitle = {Proceedings of the 2015 {Workshop} on {Challenges} in {Performance} {Methods} for {Software} {Development}},
	publisher = {ACM},
	author = {Petriu, Dorina C.},
	year = {2015},
	keywords = {ecosystem of models, model-driven analysis, model-driven engineering, non-functional properties},
	pages = {41--46},
	file = {Petriu - 2015 - Challenges in Integrating the Analysis of Multiple.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\UJMX8CRC\\Petriu - 2015 - Challenges in Integrating the Analysis of Multiple.pdf:application/pdf}
}

@incollection{hearnden_incremental_2006,
	title = {Incremental {Model} {Transformation} for the {Evolution} of {Model}-{Driven} {Systems}},
	volume = {4199},
	isbn = {978-3-540-45772-5},
	abstract = {Model transformations are an integral part of model-driven development. Incremental updates are a key execution scenario for transformations in model-based systems, and are especially important for the evolution of such systems. This paper presents a strategy for the incremental maintenance of declarative, rule-based transformation executions. The strategy involves recording dependencies of the transformation execution on information from source models and from the transformation definition. Changes to the source models or the transformation itself can then be directly mapped to their effects on transformation execution, allowing changes to target models to be computed efficiently. This particular approach has many benefits. It supports changes to both source models and transformation definitions, it can be applied to incomplete transformation executions, and a priori knowledge of volatility can be used to further increase the efficiency of change propagation.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer Berlin / Heidelberg},
	author = {Hearnden, David and Lawley, Michael and Raymond, Kerry},
	editor = {Nierstrasz, Oscar and Whittle, Jon and Harel, David and Reggio, Gianna},
	year = {2006},
	keywords = {mda, model, transformation},
	pages = {321--335}
}

@inproceedings{zhao_embedded_2011,
	title = {An {Embedded} {Laboratory} {Security} {Monitoring} {System}},
	volume = {1},
	doi = {10.1109/ICMTMA.2011.100},
	abstract = {This paper presents the design and implementation of an Embedded Laboratory Security Monitoring System (ELSMS). The system includes a web server which acquires video information through camera, and Wireless Sensor Network (WSN) which gets environmental parameters through sensors and sends them to the web server. Users can access the Monitoring Server (MS) through PCs or Wireless Mobile Terminals(WMT) which are developed using Qt, to watch video and check environmental parameters in real-time. When an exception occurs, the MS sends Short Message Service (SMS) through GSM Modem, displays alarm information on web and gives sound and light alarm, etc. SQLite database stores historical information related to environmental parameters for users' query. The system proposed in this paper is a kind of new monitoring system that is applicable to the lab and other fields that store valuables.},
	booktitle = {2011 {Third} {International} {Conference} on {Measuring} {Technology} and {Mechatronics} {Automation} ({ICMTMA})},
	author = {Zhao, Guangyuan and Wang, Zhiwei and Li, Wei and Wang, Ke},
	month = jan,
	year = {2011},
	keywords = {camera, cameras, cellular radio, Communication system security, computerised monitoring, electronic messaging, ELSMS, embedded laboratory security monitoring system, embedded systems, file servers, GSM modem, Internet, laboratory techniques, modems, Monitoring, monitoring server, query processing, security, Security Monitoring System, short message service, SMS, SQLite database, user query, video communication, video information, Video Transmission, Web server, Wireless communication, wireless mobile terminals, wireless sensor network, wireless sensor networks, WSN},
	pages = {395--398},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\R2KHZ89D\\abs_all.html:text/html;Zhao et al. - 2011 - An Embedded Laboratory Security Monitoring System.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\GKNPGA36\\Zhao et al. - 2011 - An Embedded Laboratory Security Monitoring System.pdf:application/pdf}
}

@incollection{kasper_embedded_2007,
	title = {An embedded system for practical security analysis of contactless smartcards},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-72354-7_13},
	urldate = {2015-06-10},
	booktitle = {Information {Security} {Theory} and {Practices}. {Smart} {Cards}, {Mobile} and {Ubiquitous} {Computing} {Systems}},
	publisher = {Springer},
	author = {Kasper, Timo and Carluccio, Dario and Paar, Christof},
	year = {2007},
	pages = {150--160},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\9EHSIF2W\\978-3-540-72354-7_13.html:text/html}
}

@article{varro_model_2007-1,
	title = {The model transformation language of the {VIATRA}2 framework},
	volume = {68},
	url = {http://www.sciencedirect.com/science/article/pii/S016764230700127X},
	number = {3},
	urldate = {2015-05-19},
	journal = {Science of Computer Programming},
	author = {Varró, Dániel and Balogh, András},
	year = {2007},
	pages = {214--234},
	file = {[HTML] from sciencedirect.com:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\5K8M9BRM\\S016764230700127X.html:text/html}
}

@inproceedings{agt_modeling_2011,
	title = {Modeling and {Analyzing} {Non}-{Functional} {Properties} to {Support} {Software} {Integration}},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-22056-2_15},
	urldate = {2015-06-09},
	booktitle = {Advanced {Information} {Systems} {Engineering} {Workshops}},
	publisher = {Springer},
	author = {Agt, Henning and Bauhoff, Gregor and Kutsche, Ralf-D. and Milanovic, Nikola},
	year = {2011},
	pages = {149--163},
	file = {Agt et al. - 2011 - Modeling and Analyzing Non-Functional Properties t.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\3BH7SPDI\\Agt et al. - 2011 - Modeling and Analyzing Non-Functional Properties t.pdf:application/pdf}
}

@incollection{pahl_model-driven_2008,
	title = {Model-driven performance evaluation for service engineering},
	url = {http://link.springer.com/chapter/10.1007/978-3-7643-8864-5_12},
	urldate = {2015-06-10},
	booktitle = {Emerging {Web} {Services} {Technology}, {Volume} {II}},
	publisher = {Springer},
	author = {Pahl, Claus and Boŝković, Marko and Hasselbring, Wilhelm},
	year = {2008},
	pages = {171--185},
	file = {Pahl et al. - 2008 - Model-driven performance evaluation for service en.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\KTF3C5SJ\\Pahl et al. - 2008 - Model-driven performance evaluation for service en.pdf:application/pdf}
}

@inproceedings{bezivin_object_2001-1,
	title = {From object composition to model transformation with the {MDA}},
	url = {http://www.computer.org/csdl/proceedings/tools/2001/1251/00/12510350.pdf},
	urldate = {2015-05-19},
	booktitle = {Technology of {Object}-{Oriented} {Languages}, {International} {Conference} on},
	publisher = {IEEE Computer Society},
	author = {Bézivin, Jean},
	year = {2001},
	pages = {0350--0350},
	file = {[PDF] from uma.es:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\KEDV9KDF\\Bézivin - 2001 - From object composition to model transformation wi.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\47X2IUN5\\12510350.html:text/html}
}

@inproceedings{nickel_fujaba_2000,
	title = {The {FUJABA} environment},
	doi = {10.1109/ICSE.2000.870485},
	abstract = {Fujaba is an acronym for From UML to Java And Back Again. The Fujaba environment aims to provide round-trip engineering support for UML and Java. The main distinction to other UML tools is its tight integration of UML class and UML behavior diagrams to a visual programming language. Our use of UML allows to model operations on graph-like object structures on a high-level of abstraction and leverages the user from programming with plain references at code level. Code generation from class diagrams is widely known and supported by most modern CASE tools. However, code generation from class diagrams creates class frames and method declarations without bodies, only. The actual work remains unsupported. The paper considers how Fujaba generates code from collaboration diagrams. It presents an example session},
	booktitle = {Proceedings of the 2000 {International} {Conference} on {Software} {Engineering}, 2000},
	author = {Nickel, U. and Niere, J. and Zundorf, A.},
	year = {2000},
	keywords = {CASE tools, Code generation, Collaboration, collaboration diagrams, Collaborative work, Computer languages, Computer science, diagrams, From UML to Java And Back Again, Fujaba environment, graph-like object structures, java, Navigation, Nickel, object-oriented languages, Permission, program compilers, software tools, specification languages, UML behavior diagrams, UML class diagrams, Unified Modeling Language, visual languages, visual programming language, Yarn},
	pages = {742--745},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\NG3JNAMR\\articleDetails.html:text/html}
}

@inproceedings{angyal_synchronizing_2008,
	title = {A {Synchronizing} {Technique} for {Syntactic} {Model}-{Code} {Round}-{Trip} {Engineering}},
	doi = {10.1109/ECBS.2008.33},
	abstract = {The introduction of UML class diagrams has not raised the abstraction level of development to the extent that was intended: class diagrams are only the visual representations of source class skeletons implemented in a programming language. To improve the productivity, domain-specific languages are applied, which cover a narrow domain, and their high abstraction makes use of the domain experts easier. The simultaneous evolution of the source code and the software models causes the loss of synchronization. Round-tripping the domain-specific models is not supported by model-driven development tools, because the abstraction gap between the models and the generated code prevents the use of general approaches. However, developers should have the opportunity of choosing between the artifacts that are more efficient for applying the modifications. This paper introduces how different tools achieve the preservation of manually written code while the model is evolving. In contrast, we present our approach that allows the customization of the generated code. The abstraction gap is closed by performing model transformations and an incremental merge.},
	booktitle = {Engineering of {Computer} {Based} {Systems}, 2008. {ECBS} 2008. 15th {Annual} {IEEE} {International} {Conference} and {Workshop} on the},
	author = {Angyal, L. and Lengyel, L. and Charaf, H.},
	month = mar,
	year = {2008},
	keywords = {abstraction gap, AST Merging, Computer languages, Conferences, Domain specific languages, Domain-Specific Models, Merging, Metamodeling, Microwave integrated circuits, Model-Code Synchronization, Model-Driven Development, model-driven development tools, productivity, programming language, programming languages, Proposals, Skeleton, Software engineering, software tools, syntactic model-code round-trip engineering, Three-way AST Differencing, UML class diagrams, Unified Modeling Language, visual representations},
	pages = {463--472},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\NITWD7H9\\login.html:text/html}
}

@article{Niaz2005,
author = {Niaz, I a and Tanaka, J},
file = {:C$\backslash$:/Documents/articles/niaz{\_}IJCIS2005.pdf:pdf},
journal = {International Journal of Computer {\&} Information Science},
keywords = {case,code generation,design,java,object composition,object-oriented analysis and,statecharts},
mendeley-groups = {code gen},
number = {2},
pages = {83--98},
title = {{An object-oriented approach to generate Java code from UML Statecharts}},
volume = {6},
year = {2005}
}

@article{Niaz2004,
author = {Niaz, IA and Tanaka, Jiro},
file = {:C$\backslash$:/Documents/articles/10.1.1.9.8608.pdf:pdf},
journal = {IASTED Conf. on Software Engineering},
keywords = {code generation,java,object-oriented analysis and design,software engineering,state pattern,statecharts},
mendeley-groups = {code gen},
pages = {111--116},
title = {{Mapping UML statecharts to java code.}},
year = {2004}
}

@misc{_andromda_,
	title = {{AndroMDA} {Model} {Driven} {Architecture} {Framework} - {Homepage}},
	howpublished = "\url{http://andromda.sourceforge.net/}",
	urldate = {2016-04-02},
	file = {AndroMDA Model Driven Architecture Framework – AndroMDA - Homepage:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\N552T2GT\\andromda.sourceforge.net.html:text/html}
}

@misc{moka,
	title = {Moka {Model} {Execution}},
	howpublished = "\url{https://wiki.eclipse.org/Papyrus/UserGuide/ModelExecution}",
	urldate = {2016-04-02},
	file = {Software Design Tools for Agile Teams, with UML, BPMN and More:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\7V3W9PSE\\www.visual-paradigm.com.html:text/html}
}



@article{spinke_object-oriented_2013-1,
	title = {An object-oriented implementation of concurrent and hierarchical state machines},
	volume = {55},
	issn = {0950-5849},
	url = {http://www.sciencedirect.com/science/article/pii/S0950584913000670},
	doi = {10.1016/j.infsof.2013.03.005},
	abstract = {Context
State machine diagrams are a powerful means to describe the behavior of reactive systems. Unfortunately, the implementation of state machines is difficult, because state machine concepts, like states, events and transitions, are not directly supported in commonly used programming languages. Most of the implementation approaches known so far have one or more serious drawbacks: they are difficult to understand and maintain, lack in performance, depend on the properties of a specific programming language or do not implement the more advanced state machine features like hierarchy, concurrency or history.
Objective
This paper proposes and examines an approach to implement state machines, where both states and events are objects. Because the reaction of the state machine depends on two objects (state and event), a method known as double-dispatch is used to invoke the transition between the states. The aim of this work is to explore this approach in detail.
Method
To prove the usefulness of the proposed approach, an example was implemented with the proposed approach as well as with other commonly known approaches. The implementation strategies are then compared with each other with respect to run-time, code size, maintainability and portability.
Results
The presented approach executes fast but needs slightly more memory than other approaches. It supports hierarchy, concurrency and history, is human authorable, easy to understand and easy to modify. Because of its pure object-oriented nature depending only on inheritance and late binding, it is extensible and can be implemented with a wide variety of programming languages.
Conclusion
The results show that the presented approach is a useful way to implement state machines, even on small micro-controllers.},
	number = {10},
	urldate = {2016-03-26},
	journal = {Information and Software Technology},
	author = {Spinke, Volker},
	month = oct,
	year = {2013},
	keywords = {Code generation, design pattern, Double-dispatch, State machines, State pattern, UML statecharts},
	pages = {1726--1740},
	file = {ScienceDirect Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\3AFV7IT3\\S0950584913000670.html:text/html}
}

@misc{_ibm_2013,
	type = {{CT}701},
	title = {{IBM} {Knowledge} {Center} - {Transforming} {UML} models and {C}++ code},
	copyright = {© Copyright IBM Corp. 2013, 2014},
	url = {http://www-01.ibm.com/support/knowledgecenter/SS8PJ7_8.0.4/com.ibm.xtools.transform.uml2.cpp.doc/topics/t_parent_cpp.html?lang=fr},
	language = {en-us},
	urldate = {2015-05-20},
	month = jan,
	year = {2013},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\8SA63T7T\\t_parent_cpp.html:text/html}
}

@inproceedings{laurent_formalization_2014,
	title = {Formalization of {fUML}: {An} {Application} to {Process} {Verification}},
	shorttitle = {Formalization of {fUML}},
	url = {http://link.springer.com/chapter/10.1007/978-3-319-07881-6_24},
	urldate = {2015-05-19},
	booktitle = {Advanced {Information} {Systems} {Engineering}},
	publisher = {Springer},
	author = {Laurent, Yoann and Bendraou, Reda and Baarir, Souheib and Gervais, Marie-Pierre},
	year = {2014},
	pages = {347--363},
	file = {laurent14caise.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\U9WRZJTV\\laurent14caise.pdf:application/pdf}
}

@incollection{kolovos_epsilon_2008,
	title = {The {Epsilon} {Transformation} {Language}},
	volume = {5063},
	isbn = {978-3-540-69926-2},
	url = {http://dx.doi.org/10.1007/978-3-540-69927-9_4},
	abstract = {Support for automated model transformation is essential for realizing a Model Driven Development (MDD) process. However, model transformation is only one of the many tools in a model engineering toolkit. To apply MDD in the large, automated support for a number of additional tasks such as model comparison, merging, validation and model-to-text transformation, is essential. While a number of successful model transformation languages have been currently proposed, the majority of them have been developed in isolation and as a result, they face consistency and integration difficulties with languages that support other model management tasks. We present the Epsilon Transformation Language (ETL), a hybrid model transformation language that has been developed atop the infrastructure provided by the Epsilon model management platform. By building atop Epsilon, ETL is seamlessly integrated with a number of other task-specific languages to help to realize composite model management workflows.},
	urldate = {2015-05-19},
	booktitle = {Theory and {Practice} of {Model} {Transformations}},
	publisher = {Springer Berlin Heidelberg},
	author = {Kolovos, Dimitrios and Paige, Richard and Polack, Fiona},
	editor = {Vallecillo, Antonio and Gray, Jeff and Pierantonio, Alfonso},
	year = {2008},
	keywords = {transformation},
	pages = {46--60}
}

@incollection{yie_approach_2009,
	title = {An {Approach} for {Evolving} {Transformation} {Chains}},
	volume = {5795},
	isbn = {978-3-642-04424-3},
	url = {http://dx.doi.org/10.1007/978-3-642-04425-0_42},
	abstract = {A transformation chain (TC) generates applications from high-level models that are defined in terms of problem domain concepts. The result is a low-level model that is rooted in the solution domain. The evolution of a TC is a complex and expensive endeavor since there are intricate dependencies between all its constituent parts. More specific, an evolution problem arises when we need to add an unanticipated concern (e.g., security) that does not fit the expressiveness of the high-level metamodel, because such an addition forces us to adapt existing assets (i.e., metamodels, models, and transformations). We present a solution that adds a new concern model to the TC, in an independent way.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Yie, Andrés and Casallas, Rubby and Wagelaar, Dennis and Deridder, Dirk},
	editor = {Schürr, Andy and Selic, Bran},
	year = {2009},
	keywords = {transformation},
	pages = {551--555}
}

@incollection{jing_testing_????,
	title = {A {Testing} {Framework} for {Model} {Transformations}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.57.9495},
	abstract = {As models and model transformations are elevated to first-class artifacts within the software development process, there is an increasing need to provide support for techniques and methodologies that are currently missing in modeling practice, but provided readily in other stages of the development lifecycle.},
	urldate = {2015-05-19},
	booktitle = {Model-{Driven} {Software} {Development}},
	publisher = {Springer},
	author = {Jing, Yuehua},
	keywords = {transformation},
	pages = {219--236}
}

@incollection{moha_generic_2009,
	title = {Generic {Model} {Refactorings}},
	volume = {5795},
	isbn = {978-3-642-04424-3},
	url = {http://dx.doi.org/10.1007/978-3-642-04425-0_50},
	abstract = {Many modeling languages share some common concepts and principles. For example, Java, MOF, and UML share some aspects of the concepts of classes, methods, attributes, and inheritance. However, model transformations such as refactorings specified for a given language cannot be readily reused for another language because their related metamodels may be structurally different. Our aim is to enable a flexible reuse of model transformations across various metamodels. Thus, in this paper, we present an approach allowing the specification of generic model transformations, in particular refactorings, so that they can be applied to different metamodels. Our approach relies on two mechanisms: (1) an adaptation based mainly on the weaving of aspects; (2) the notion of model typing, an extension of object typing in the model-oriented context. We validated our approach by performing some experiments that consisted of specifying three well known refactorings ( Encapsulate Field,Move Method, and Pull Up Method) and applying each of them onto three different metamodels (Java, MOF, and UML).},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Moha, Naouel and Mahé, Vincent and Barais, Olivier and Jézéquel, Jean-Marc},
	editor = {Schürr, Andy and Selic, Bran},
	year = {2009},
	keywords = {2009, model, refactoring},
	pages = {628--643}
}

@book{gamma_design_1995,
	address = {Boston, MA, USA},
	title = {Design {Patterns}: {Elements} of {Reusable} {Object}-oriented {Software}},
	isbn = {9780201633610},
	shorttitle = {Design {Patterns}},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John},
	year = {1995}
}

@incollection{biermann_precise_2008,
	address = {Toulouse, France},
	title = {\{{Precise} {Semantics} of {EMF} {Model} {Transformations} by {Graph} {Transformation}\}},
	isbn = {978-3-540-87874-2},
	url = {http://dx.doi.org/10.1007/978-3-540-87875-9_4},
	abstract = {\{Model transformation is one of the key activities in model-driven software development. An increasingly popular technology to define modeling languages is provided by the Eclipse Modeling Framework (EMF). Several EMF model transformation approaches have been developed, focusing on different transformation aspects. To validate model transformations wrt. functional behavior and correctness, a formal foundation is needed. In this paper, we define EMF model transformations as a special kind of typed graph transformations using node type inheritance. Containment constraints of EMF model transformations are translated to a special kind of EMF model transformation rules such that their application leads to consistent transformation results only. Thus, we identify a kind of EMF model transformations which behave like algebraic graph transformations. As a consequence, the rich theory of algebraic graph transformation can be applied to these EMF model transformations to show functional behavior and correctness. We illustrate our approach by selected refactorings of simplified statechart models.\}},
	urldate = {2015-05-19},
	booktitle = {Proceedings of the 11th international conference on {Model} {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer-Verlag},
	author = {Biermann, Enrico and Ermel, Claudia and Taentzer, Gabriele},
	year = {2008},
	pages = {53--67}
}

@inproceedings{peralta_specifying_2008,
	title = {Specifying security aspects in {UML} models},
	url = {http://137.226.34.227/Publications/CEUR-WS/Vol-413/paper11.pdf},
	urldate = {2015-06-10},
	booktitle = {{ACM}/{IEEE} 11th {International} {Conference} on {Model} {Driven} {Engineering} {Languages} and {System}, {Toulouse}, {França}, {Proceedings} of the {Workshop} on {Modeling} {Security} ({MODSEC}08 1: 1-10},
	author = {Peralta, Karine P. and Orozco, Alex M. and Zorzo, Avelino F. and Oliveira, Flávio M.},
	year = {2008},
	file = {Peralta et al. - 2008 - Specifying security aspects in UML models.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\ZWHWZF32\\Peralta et al. - 2008 - Specifying security aspects in UML models.pdf:application/pdf}
}

@inproceedings{zhu_model_2009,
	title = {Model {Driven} {Development} with non-functional aspects},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5071584},
	urldate = {2015-06-09},
	booktitle = {Aspect-{Oriented} {Requirements} {Engineering} and {Architecture} {Design}, 2009. {EA}'09. {ICSE} {Workshop} on},
	publisher = {IEEE},
	author = {Zhu, Liming and Liu, Yan},
	year = {2009},
	pages = {49--54},
	file = {Zhu et Liu - 2009 - Model Driven Development with non-functional aspec.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\XQNIDQZA\\Zhu et Liu - 2009 - Model Driven Development with non-functional aspec.pdf:application/pdf}
}

@misc{_documents_????,
	title = {Documents exportés.bib - {Fichier} partagé depuis {Box}},
	url = {https://app.box.com/s//k3f65hpwnu0tublqc2v4},
	urldate = {2015-05-19},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\RC3IM95F\\k3f65hpwnu0tublqc2v4.html:text/html}
}

@article{jouault_atl:_2008-1,
	title = {{ATL}: {A} model transformation tool},
	volume = {72},
	shorttitle = {{ATL}},
	url = {http://www.sciencedirect.com/science/article/pii/S0167642308000439},
	number = {1},
	urldate = {2015-05-19},
	journal = {Science of computer programming},
	author = {Jouault, Frédéric and Allilaire, Freddy and Bézivin, Jean and Kurtev, Ivan},
	year = {2008},
	pages = {31--39},
	file = {[HTML] from sciencedirect.com:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\WTZ7PRNH\\S0167642308000439.html:text/html}
}

@misc{_round-trip_????,
	title = {Round-{Trip} {Engineering} {Approach} to {Keep} {Activity} {Diagrams} {Synchronized} with {Source} {Code} - {Google} {Search}},
	url = {https://www.google.fr/search?q=Round-Trip+Engineering+Approach+to+Keep+Activity+Diagrams+Synchronized+with+Source+Code},
	urldate = {2016-04-05},
	file = {Round-Trip Engineering Approach to Keep Activity Diagrams Synchronized with Source Code - Google Search:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\GK7BBI24\\search.html:text/html}
}

@misc{_java_thread,
	title = {Java 6 thread states and life cycle {UML} protocol state machine diagram example.},
	howpublished = "\url{http://www.uml-diagrams.org/examples/java-6-thread-state-machine-diagram-example.html?context=stm-examples}",
	url = {http://www.uml-diagrams.org/examples/java-6-thread-state-machine-diagram-example.html?context=stm-examples},
	urldate = {2016-04-17},
	file = {Java 6 thread states and life cycle UML protocol state machine diagram example.:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\CXV3RKNT\\java-6-thread-state-machine-diagram-example.html:text/html}
}

@inproceedings{niaz_mapping_2004,
	title = {Mapping {UML} statecharts to java code.},
	url = {http://www.actapress.com/PDFViewer.aspx?paperId=16433},
	urldate = {2016-01-26},
	booktitle = {{IASTED} {Conf}. on {Software} {Engineering}},
	author = {Niaz, Iftikhar Azim and Tanaka, Jiro and {others}},
	year = {2004},
	pages = {111--116},
	file = {10.1.1.9.8608.pdf:C\:\\Documents\\articles\\umlstatemachine\\10.1.1.9.8608.pdf:application/pdf}
}

@inproceedings{becker_model-driven_2012,
	title = {Model-driven performance engineering of self-adaptive systems: a survey},
	shorttitle = {Model-driven performance engineering of self-adaptive systems},
	url = {http://dl.acm.org/citation.cfm?id=2304716},
	urldate = {2015-06-10},
	booktitle = {Proceedings of the 8th international {ACM} {SIGSOFT} conference on {Quality} of {Software} {Architectures}},
	publisher = {ACM},
	author = {Becker, Matthias and Luckey, Markus and Becker, Steffen},
	year = {2012},
	pages = {117--122},
	file = {Becker et al. - 2012 - Model-driven performance engineering of self-adapt.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\M2PA68WZ\\Becker et al. - 2012 - Model-driven performance engineering of self-adapt.pdf:application/pdf}
}

@incollection{zhang_transformation_2005,
	title = {Transformation from {CIM} to {PIM}: {A} {Feature}-{Oriented} {Component}-{Based} {Approach}},
	shorttitle = {Transformation from {CIM} to {PIM}},
	url = {http://dx.doi.org/10.1007/11557432_18},
	abstract = {Model Transformation is a crucial part of Model-Driven Architecture (MDA). However, most of the current researches only focus on the transformation from PIM to PSM, and pay little attention to the CIM-to-PIM transformation. One of the results is that converting CIM to PIM will depend much on designersâ€™ personal experience or creativity, and thus the quality of PIM can not be well controlled. This paper presents a feature-oriented component-based approach to the CIM-to-PIM transformation. In this approach, features and components are adopted as the key elements of CIM and PIM, respectively. One important characteristic of this approach is that it provides a method to decompose the n-to-n relations between features and components into two groups of 1-to-n relations. The other important characteristic is that this approach proposes a way to create components by clustering responsibilities which are operationalized from features. These two characteristics partially resolve two basic problems related to the CIM-to-PIM transformation: one is the traceability problem between CIM and PIM, the other is the problem of CIM-based PIM construction.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	author = {Zhang, Wei and Mei, Hong and Zhao, Haiyan and Yang, Jie},
	year = {2005},
	keywords = {cim, component-based, feature, model, pim, transformation},
	pages = {248--263}
}

@incollection{cuadrado_towards_2012,
	title = {Towards a family of model transformation languages},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-30476-7_12},
	urldate = {2015-05-19},
	booktitle = {Theory and {Practice} of {Model} {Transformations}},
	publisher = {Springer},
	author = {Cuadrado, Jesús Sánchez},
	year = {2012},
	pages = {176--191},
	file = {icmt2012.family.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\ZGT864JA\\icmt2012.family.pdf:application/pdf}
}

@inproceedings{egyed_instant_2006,
	title = {Instant consistency checking for the {UML}},
	url = {http://dl.acm.org/citation.cfm?id=1134339},
	urldate = {2015-05-20},
	booktitle = {Proceedings of the 28th international conference on {Software} engineering},
	publisher = {ACM},
	author = {Egyed, Alexander},
	year = {2006},
	pages = {381--390},
	file = {[PDF] from irisa.fr:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\PRSV6JS3\\Egyed - 2006 - Instant consistency checking for the UML.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\56ZC4H6I\\citation.html:text/html}
}

@inproceedings{mokos_ontology-based_2010,
	title = {Ontology-{Based} {Model} {Driven} {Engineering} for {Safety} {Verification}},
	doi = {10.1109/SEAA.2010.60},
	abstract = {Safety assessment of dependable systems is a complex verification task that is desirable to be explicitly incorporated into the development cycle during the very early stages of a project. The main reason is that the cost to correct a safety error at the late stages of system development is excessively high. Towards this aim, we introduce an ontology-based model-driven engineering process for automating transformations of models that are utilized as reusable artifacts. The logical and syntactical structures of the design and safety models have to conform to a number of metamodel constraints. These constraints are semantically represented by mapping them onto an OWL domain ontology, allowing the incorporation of a Description Logic OWL reasoner and inference rules, in order to detect lacks of model elements and semantically inconsistent parts. Model validation throughout the ontology-based transformation assures that the generated formal safety model fulfils a series of requirements that render it analyzable. Our approach has been implemented as a response to an industrial problem, where the architecture design is expressed in Architecture Analysis and Design Language (AADL) and safety models are specified in the AltaRica formal language.},
	booktitle = {2010 36th {EUROMICRO} {Conference} on {Software} {Engineering} and {Advanced} {Applications} ({SEAA})},
	author = {Mokos, K. and Meditskos, G. and Katsaros, P. and Bassiliades, N. and Vasiliades, V.},
	month = sep,
	year = {2010},
	keywords = {AltaRica formal language, Analytical models, architecture analysis and design language, Cognition, Computer architecture, constraint handling, dependable systems, description logic OWL reasoner, formal languages, formal safety model, formal verification, inference mechanisms, inference rules, knowledge representation languages, metamodel constraints, model driven engineering, model transformation, Ontologies, ontologies (artificial intelligence), ontology based model driven engineering, ontology reasoning, OWL, OWL domain ontology, reusable artifacts, Safety, safety assessment, safety verification, semantics, software reusability, verification and validation},
	pages = {47--54},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\M5ZCQK9X\\abs_all.html:text/html;Mokos et al. - 2010 - Ontology-Based Model Driven Engineering for Safety.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\NRK8IZGP\\Mokos et al. - 2010 - Ontology-Based Model Driven Engineering for Safety.pdf:application/pdf}
}

@inproceedings{tisi_use_2009,
	title = {On the {Use} of {Higher}-{Order} {Model} {Transformations}},
	volume = {5562},
	isbn = {978-3-642-02673-7},
	url = {http://dx.doi.org/10.1007/978-3-642-02674-4_3},
	doi = {10.1007/978-3-642-02674-4_3},
	abstract = {The level of maturity that has been reached by model transformation technologies is proved by the growing literature on transformation libraries that address an increasingly wide spectrum of applications. With the success of the modeling and transformation paradigm, the need arises to address more complex applications that require a direct manipulation of model transformations. The uniformity and flexibility of the model-driven paradigm allows this class of applications to make use of the same transformation infrastructure. This is possible because transformations can be translated into transformation models and given as objects to a different class of model transformations, called Higher-Order Transformations (HOT). This paper provides an introduction to HOTs and a survey of the several application cases where their use is relevant. A number of possible future applications of HOTs is also proposed.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Architecture} - {Foundations} and {Applications}},
	publisher = {Springer Berlin Heidelberg},
	author = {Tisi, Massimo and Jouault, Frédéric and Fraternali, Piero and Ceri, Stefano and Bézivin, Jean},
	editor = {Paige, Richard and Hartman, Alan and Rensink, Arend},
	year = {2009},
	keywords = {higher-order, transformation},
	pages = {18--33}
}

@article{makar_formate_1975-1,
	title = {Formate assay in body fluids: application in methanol poisoning},
	volume = {13},
	issn = {0006-2944},
	shorttitle = {Formate assay in body fluids},
	language = {eng},
	number = {2},
	journal = {Biochemical Medicine},
	author = {Makar, A. B. and McMartin, K. E. and Palese, M. and Tephly, T. R.},
	month = jun,
	year = {1975},
	pmid = {1},
	keywords = {Aldehyde Oxidoreductases, Animals, Body Fluids, Carbon Dioxide, Formates, Haplorhini, Humans, Hydrogen-Ion Concentration, Kinetics, Methanol, Methods, Pseudomonas},
	pages = {117--126}
}

@misc{sparxsystems_enterprise_2014,
	title = {Enterprise {Architect}},
	url = {http://www.sparxsystems.eu/start/home/},
	abstract = {SparxSystems UML, Enterprise Architect. UML design and business analysis tool for modeling, documenting, reverse engineering, for building or maintaining object-oriented software systems.},
	language = {en},
	urldate = {2016-04-02},
	author = {SparxSystems},
	month = sep,
	year = {2016},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\KPKBNE8Z\\home.html:text/html}
}

@misc{ibm_rhapsody,
	title = {IBM {Rhapsody}},
	url = {http://www.ibm.com/developerworks/downloads/r/rhapsodydeveloper/},
	abstract = {SparxSystems UML, Enterprise Architect. UML design and business analysis tool for modeling, documenting, reverse engineering, for building or maintaining object-oriented software systems.},
	language = {en},
	urldate = {2016-04-02},
	author = {IBM},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\KPKBNE8Z\\home.html:text/html}
}

@misc{__????-3,
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.9.8608&rep=rep1&type=pdf},
	urldate = {2016-04-13},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\SZMUN6G2\\download.html:text/html}
}

@incollection{kalnins_model_2005,
	title = {Model transformation language {MOLA}},
	url = {http://link.springer.com/chapter/10.1007/11538097_5},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Architecture}},
	publisher = {Springer},
	author = {Kalnins, Audris and Barzdins, Janis and Celms, Edgars},
	year = {2005},
	pages = {62--76},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\TW7J7WSR\\11538097_5.html:text/html}
}

@article{varro_model_2007-2,
	title = {\{{The} model transformation language of the {VIATRA}2 framework\}},
	volume = {68},
	url = {http://dx.doi.org/10.1016/j.scico.2007.05.004},
	doi = {10.1016/j.scico.2007.05.004},
	abstract = {\{We present the model transformation language of the VIATRA2 framework, which provides a rule- and pattern-based transformation language for manipulating graph models by combining graph transformation and abstract state machines into a single specification paradigm. This language offers advanced constructs for querying (e.g. recursive graph patterns) and manipulating models (e.g. generic transformation and meta-transformation rules) in unidirectional model transformations frequently used in formal model analysis to carry out powerful abstractions.\}},
	number = {3},
	urldate = {2015-05-19},
	journal = {Special Issue on Model Transformation},
	author = {Varró, Dániel and Balogh, Andras},
	month = oct,
	year = {2007},
	pages = {214--234}
}

@misc{youtube_help_https://youtube.com/devicesupport_2015,
	title = {https://youtube.com/devicesupport},
	shorttitle = {https},
	url = {https://www.youtube.com/watch?v=UKY3scPIMd8&feature=youtube_gdata_player},
	abstract = {https://youtube.com/devicesupport
http://m.youtube.com},
	urldate = {2015-05-20},
	collaborator = {{YouTube Help}},
	month = apr,
	year = {2015}
}

@article{giese_model_2009,
	title = {From model transformation to incremental bidirectional model synchronization},
	volume = {8},
	issn = {1619-1366, 1619-1374},
	url = {http://link.springer.com/10.1007/s10270-008-0089-9},
	doi = {10.1007/s10270-008-0089-9},
	language = {en},
	number = {1},
	urldate = {2015-05-19},
	journal = {Software \& Systems Modeling},
	author = {Giese, Holger and Wagner, Robert},
	month = feb,
	year = {2009},
	pages = {21--43},
	file = {Holger - Robert -From model transformation to incremental bidirectional model.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\ZCM6G5DP\\Holger - Robert -From model transformation to incremental bidirectional model.pdf:application/pdf}
}

@inproceedings{trubiani_model-based_2013-1,
	title = {Model-based performance analysis of software architectures under uncertainty},
	isbn = {9781450321266},
	url = {http://dl.acm.org/citation.cfm?doid=2465478.2465487},
	doi = {10.1145/2465478.2465487},
	language = {en},
	urldate = {2015-06-18},
	publisher = {ACM Press},
	author = {Trubiani, Catia and Meedeniya, Indika and Cortellessa, Vittorio and Aleti, Aldeida and Grunske, Lars},
	year = {2013},
	pages = {69},
	file = {main-swPerf-uncertainty-qosa.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\24IHF97F\\main-swPerf-uncertainty-qosa.pdf:application/pdf}
}

@incollection{cuadrado_plugin-based_2006,
	title = {A {Plugin}-{Based} {Language} to {Experiment} with {Model} {Transformation}},
	url = {http://dx.doi.org/10.1007/11880240_24},
	abstract = {Model transformation is a key technology of model driven software development approaches. Several transformation languages have appeared in the last few years, but more research is still needed for an in-depth understanding of the nature of model transformations and to discover desirable features of transformation languages. Research interest is primarily focused on experimentation with languages by writing transformations for real problems. RubyTL is a hybrid transformation language defined as a Ruby internal domain specific language, and is designed as an extensible language: a plugin mechanism allows new features to be added to core features. In this paper, we describe this plugin mechanism, devised to facilitate the experimentation with possible features of RubyTL. Through an example, we show how to add a new language feature, specifically we will develop a plugin to organize a transformation in several phases. Finally, we discuss the advantages of this extensible language design.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	author = {Cuadrado, Jesús and Molina, Jesús},
	year = {2006},
	keywords = {model, ruby, transformation},
	pages = {336--350}
}

@article{jurjens_umlsec:_????,
	title = {{UMLsec}: {A} {UML} {Profile} for {Secure} {Systems} {Development}},
	shorttitle = {{UMLsec}},
	url = {http://www-secse.cs.tu-dortmund.de/jj/csdumltut/tutorials/umlsec.pdf},
	urldate = {2015-06-10},
	author = {Jürjens, Jan},
	file = {Jürjens - UMLsec A UML Profile for Secure Systems Developme.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\H748EN5H\\Jürjens - UMLsec A UML Profile for Secure Systems Developme.pdf:application/pdf}
}

@book{heineman_component-based_2001,
	address = {Boston},
	title = {Component-based software engineering: putting the pieces together},
	isbn = {0201704854},
	shorttitle = {Component-based software engineering},
	publisher = {Addison-Wesley},
	editor = {Heineman, George T. and Councill, William T.},
	year = {2001},
	keywords = {Component software, Software engineering},
	file = {gpce11-steck.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\S43K5JH6\\gpce11-steck.pdf:application/pdf}
}

@article{schmoldt_digitoxin_1975,
	title = {Digitoxin metabolism by rat liver microsomes},
	volume = {24},
	issn = {0006-2952},
	language = {eng},
	number = {17},
	journal = {Biochemical Pharmacology},
	author = {Schmoldt, A. and Benthe, H. F. and Haberland, G.},
	month = sep,
	year = {1975},
	pmid = {10},
	keywords = {Animals, Chromatography, Thin Layer, Digitoxigenin, Digitoxin, Hydroxylation, In Vitro Techniques, Male, Microsomes, Liver, NADP, Rats, Time Factors},
	pages = {1639--1641}
}

@misc{__????-4,
	url = {http://www.uml.org.cn/c++/pdf/DesignPatterns.pdf},
	urldate = {2016-04-13},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\HD8R9TF8\\DesignPatterns.html:text/html}
}

@inproceedings{syriani_programmed_2008,
	title = {Programmed {Graph} {Rewriting} with {Time} for {Simulation}-{Based} {Design}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.453.8984},
	abstract = {Abstract. The Discrete EVent system Specification (DEVS) formal-ism allows for highly modular, hierarchical modelling of timed, reactive systems. DEVS can be used to describe complex control structures for programmed graph transformation. A side-effect of this approach is the introduction of an explicit notion of time. In this paper we show how the explicit notion of time allows for the simulation-based design of reactive systems such as modern computer games. We use the well-known game of PacMan as an example and model its dynamics with programmed graph transformation based on DEVS. This also allows the modelling of player behaviour, incorporating data about human players â behaviour and reaction times. Thus, a model of both player and game is obtained which can be used to evaluate, through simulation, the playability of a game design. We propose a playability performance measure and vary parameters of the PacMan game. For each variant of the game thus ob-tained, simulation yields a value for the quality of the game. This allows us to choose an âoptimal â (from a playability point of view) game con-figuration. The user model is subsequently replaced by a visual interface to a real player and the game model is executed using a real-time DEVS simulator. 1},
	urldate = {2015-05-19},
	author = {Syriani, Eugene and Vangheluwe, Hans},
	year = {2008},
	keywords = {game, model, pdf, rt, time},
	pages = {91--106}
}

@book{heineman_model-driven_2001,
	address = {Boston},
	title = {Model-{Driven} {Engineering} and {Run}-{Time} {Model}-{Usage} in {Service} {Robotics}},
	isbn = {0201704854},
	shorttitle = {Component-based software engineering},
	publisher = {Addison-Wesley},
	editor = {Heineman, George T. and Councill, William T.},
	year = {2001},
	keywords = {Component software, Software engineering},
	file = {Heineman et Councill - 2001 - Model-Driven Engineering and Run-Time Model-Usage .pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\N85FA95W\\Heineman et Councill - 2001 - Model-Driven Engineering and Run-Time Model-Usage .pdf:application/pdf}
}

@misc{_c_????,
	title = {C {Abstract} {Syntax} {Tree} ({CAST}) {Representation}},
	url = {http://www.cs.utah.edu/flux/flick/current/doc/guts/gutsch6.html},
	urldate = {2016-04-13},
	file = {C Abstract Syntax Tree (CAST) Representation:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\JM2BMKPR\\gutsch6.html:text/html}
}

@incollection{de_lara_automated_2004,
	title = {Automated {Model} {Transformation} and {Its} {Validation} {Using} {AToM} 3 and {AGG}},
	url = {http://www.springerlink.com/content/8c0q57fbe2f60xq5},
	abstract = {Complex systems are characterized by components that may have to be described using different notations. For the analysis of such a system, our approach is to transform each component (preserving behaviour) into a single common formalism with appropriate analysis methods. Both source and target notations are described by means of meta-modelling whereas the translation is modelled by means of graph transformation. During the transformation process, the intermediate models can be a blend of elements of the source and target notations, but at the end the resulting model should be expressed in the target notation alone. In this work we propose defining also a meta-model for the intermediate process, in such a way that we can apply some validation methods to the transformation. In particular, we show how to prove functional behaviour (confluence and termination) via critical pair analysis and layering conditions, and discuss other desirable properties of the transformation, namely: syntactic consistency and behaviour preservation. The automation of these concepts has been carried out by combining the AToM 3 and AGG tools. Keywords: Meta-Modelling, Graph Transformation, Multi-Formalism Modelling.},
	urldate = {2015-05-19},
	booktitle = {Diagrammatic {Representation} and {Inference}},
	author = {de Lara, Juan and Taentzer, Gabriele},
	year = {2004},
	keywords = {agg, atom3, model, transformation, validation},
	pages = {182--198}
}

@article{yang_anti-hepatitis_2014,
	title = {Anti-hepatitis {B} {Virus} {Activity} of α-{DDB}-{FNCG}, a {Novel} {Nucleoside}-{Biphenyldicarboxylate} {Compound} {In} {Vitro} and {In} {Vivo}},
	volume = {126},
	issn = {1347-8613, 1347-8648},
	url = {http://jlc.jst.go.jp/DN/JST.JSTAGE/jphs/13230FP?lang=en&from=CrossRef&type=abstract},
	doi = {10.1254/jphs.13230FP},
	language = {en},
	number = {3},
	urldate = {2015-05-19},
	journal = {Journal of Pharmacological Sciences},
	author = {Yang, Qinghua and Zhao, Xuejie and Yu, Wenquan and He, Wu and Fang, Xianzhen and Zang, Limin and Wan, Na and Wang, Qingduan and Zheng, Liyun and Chang, Junbiao},
	year = {2014},
	pages = {208--215}
}

@inproceedings{steck_model-driven_2011,
	title = {Model-driven engineering and run-time model-usage in service robotics},
	volume = {47},
	url = {http://dl.acm.org/citation.cfm?id=2047875},
	urldate = {2015-06-13},
	booktitle = {{ACM} {SIGPLAN} {Notices}},
	publisher = {ACM},
	author = {Steck, Andreas and Lotz, Alex and Schlegel, Christian},
	year = {2011},
	pages = {73--82},
	file = {[PDF] from researchgate.net:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\Z2PKAKPF\\Steck et al. - 2011 - Model-driven engineering and run-time model-usage .pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\7SKH3ESB\\citation.html:text/html}
}

@article{xiong_realizing_????,
	title = {Realizing {Bidirectional} {Graph} {Transformations} {From} {Bidirectional} {Tree} {Transformations}},
	volume = {1},
	url = {http://www.researchgate.net/profile/Masato_Takeichi/publication/229012902_Realizing_Bidirectional_Graph_Transformations_From_Bidirectional_Tree_Transformations/links/0912f50b34e580f6c7000000.pdf},
	number = {V2},
	urldate = {2015-05-19},
	journal = {Meta},
	author = {Xiong, Yingfei and Hu, Zhenjiang and Liu, Dongxi and Zhao, Haiyan and Mei, Hong and Takeichi, Masato},
	pages = {V2},
	file = {IPSJ07.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\8UH65MPX\\IPSJ07.pdf:application/pdf}
}

@incollection{diskin_state-delta-based_2010,
	title = {From state-to delta-based bidirectional model transformations},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-13688-7_5},
	urldate = {2015-05-19},
	booktitle = {Theory and {Practice} of {Model} {Transformations}},
	publisher = {Springer},
	author = {Diskin, Zinovy and Xiong, Yingfei and Czarnecki, Krzysztof},
	year = {2010},
	pages = {61--76},
	file = {ICMT10.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\A4V3C2AB\\ICMT10.pdf:application/pdf}
}

@article{makar_formate_1975-2,
	title = {Formate assay in body fluids: application in methanol poisoning},
	volume = {13},
	issn = {0006-2944},
	shorttitle = {Formate assay in body fluids},
	language = {eng},
	number = {2},
	journal = {Biochemical Medicine},
	author = {Makar, A. B. and McMartin, K. E. and Palese, M. and Tephly, T. R.},
	month = jun,
	year = {1975},
	pmid = {1},
	keywords = {Aldehyde Oxidoreductases, Animals, Body Fluids, Carbon Dioxide, Formates, Haplorhini, Humans, Hydrogen-Ion Concentration, Kinetics, Methanol, Methods, Pseudomonas},
	pages = {117--126}
}

@incollection{anastasakis_uml2alloy:_2007-1,
	title = {{UML}2Alloy: {A} challenging model transformation},
	shorttitle = {{UML}2Alloy},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-75209-7_30},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer},
	author = {Anastasakis, Kyriakos and Bordbar, Behzad and Georg, Geri and Ray, Indrakshi},
	year = {2007},
	pages = {436--450},
	file = {[PDF] from anastasakis.net:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\B264HCBC\\Anastasakis et al. - 2007 - UML2Alloy A challenging model transformation.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\JGI4HI5I\\978-3-540-75209-7_30.html:text/html}
}

@techreport{sendall_model_2003-1,
	title = {Model transformation the heart and soul of model-driven software development},
	url = {http://infoscience.epfl.ch/record/52559},
	urldate = {2015-05-19},
	author = {Sendall, Shane and Kozaczynski, Wojtek},
	year = {2003},
	file = {[PDF] from epfl.ch:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\FWS7DN4U\\Sendall et Kozaczynski - 2003 - Model transformation the heart and soul of model-d.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\4QSA5F4R\\52559.html:text/html}
}

@inproceedings{gudemann_towards_2011,
	title = {Towards model-driven safety analysis},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5970318},
	urldate = {2015-06-11},
	booktitle = {Dependable {Control} of {Discrete} {Systems} ({DCDS}), 2011 3rd {International} {Workshop} on},
	publisher = {IEEE},
	author = {Güdemann, Matthias and Ortmeier, Frank},
	year = {2011},
	pages = {53--58},
	file = {Güdemann et Ortmeier - 2011 - Towards model-driven safety analysis.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\78895TCM\\Güdemann et Ortmeier - 2011 - Towards model-driven safety analysis.pdf:application/pdf;Vittorio Cortellessa, Antinisca Di Marco, Paola Inverardi (auth.)-Model-Based Software Performance Analysis-Springer-Verlag Berlin Heidelberg (2011).pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\65N8ZA5X\\Vittorio Cortellessa, Antinisca Di Marco, Paola Inverardi (auth.)-Model-Based Software Performance Analysis-Springer-Verlag Berlin Heidelberg (2011).pdf:application/pdf}
}

@article{baranyi_tp_2004,
	title = {{TP} model transformation as a way to {LMI}-based controller design},
	volume = {51},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1282027},
	number = {2},
	urldate = {2015-05-19},
	journal = {Industrial Electronics, IEEE Transactions on},
	author = {Baranyi, Péter},
	year = {2004},
	pages = {387--400},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\EH473MS2\\login.html:text/html}
}

@article{grady_booch_unified_1999,
	title = {Unified {Modeling} {Language} {User} {Guide}, {The} (2nd {Edition}) ({Addison}-{Wesley} {Object} {Technology} {Series})},
	volume = {10},
	journal = {J. Database Manag.},
	author = {Grady Booch, James Rumbaugh},
	year = {1999},
	file = {Unified Modeling Language User Guide, The (2nd Edition) (Addison-Wesley Object Technology Series) (PDF Download Available):C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\APBUWEK5\\234785986_Unified_Modeling_Language_User_Guide_The_2nd_Edition_Addison-Wesley_Object_Technology.html:text/html}
}

@article{__????-5
}

@book{Kelly2007,
abstract = {Domain-Specific Modeling (DSM) is the latest approach to software development,promising to greatly increase the speed and ease of software creation. Twoauthorities in the field explain what DSM is, why it works, and how to use itto improve productivity and quality. Divided into four parts, the book covers:background and motivation; fundamentals; in-depth examples; and creating DSMsolutions. The book is complemented iwth examples from various fields toillustrate to experienced developers how DSM can improve software developmentin their teams.},
author = {Kelly, Steven and Tolvanen, Juha Pekka},
booktitle = {Domain-Specific Modeling: Enabling Full Code Generation},
doi = {10.1002/9780470249260},
isbn = {9780470036662},
issn = {09485023},
pages = {1--427},
pmid = {21318237},
title = {{Domain-Specific Modeling: Enabling Full Code Generation}},
year = {2007}
}


@article{Jorges2013,
archivePrefix = {arXiv},
arxivId = {9780201398298},
author = {J{\"{o}}rges, Sven},
doi = {10.1007/3-540-68339-9{\_}34},
eprint = {9780201398298},
isbn = {03029743 (ISSN); 9783642361265 (ISBN)},
issn = {03029743},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
keywords = {Agile development,Automatic code generations,Building blockes,Building codes,Code Generation,Code generators,Computer programming languages,Domain specific,Formal verification methods,GENESYS,General approach,Graphical development,Language development,Meta levels,Model checking,Model driven approach,Model driven development,Model-driven,Reference implementation,Reliability and robustness,Reuse and integrations,Rule-based transformation,Service-oriented approaches,Software engineering,Software systems,Specifications,Systems analysis,Target language},
pages = {1--265},
pmid = {4520227},
title = {{Construction and evolution of code generators: A model-driven and service-oriented approach}},
year = {2013}
}



@book{Frankel:2002:MDA:579151,
 author = {Frankel, David},
 title = {Model Driven Architecture: Applying MDA to Enterprise Computing},
 year = {2002},
 isbn = {0471319201},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
} 

@inbook{E-ESE-120044648,
author = { Bernhard   Steffen  and  Tiziana   Margaria  and  Christian   Wagner },
title = {Round-Trip Engineering},
booktitle = {Encyclopedia of Software Engineering},
chapter = {96},
pages = {1044-1055},
doi = {10.1081/E-ESE-120044648},
URL = {http://www.tandfonline.com/doi/abs/10.1081/E-ESE-120044648},
eprint = {http://www.tandfonline.com/doi/pdf/10.1081/E-ESE-120044648}
}

@inproceedings{Blech2005,
abstract = {ABSTRACT UML specifications offer the advantage to describe software systems while the actual task of implementing code for them is passed to code generators that automatically produce eg Java code . For safety reasons, it is necessary that the generated code is semantically ...},
author = {Blech, J O and Glesner, S},
booktitle = {{\ldots} of the 3rd International Fujaba Days},
keywords = {code generation,fujaba,isabelle/HOL,semantics,statecharts,transformations,verification},
pages = {49--56},
title = {{Formal verification of java code generation from uml models}},
year = {2005}
}

@article{Antkiewicz2006,
abstract = {We propose Framework-Specific Modeling Languages (FSMLs) as a special category of Domain-Specific Modeling Languages that are defined on top of an object-oriented application framework. They are used to express models showing how framework-provided$\backslash$nabstractions are used in framework-based application code. Such models may be connected with the application code through$\backslash$na forward and a reverse mapping enabling round-trip engineering. We also propose a lightweight and iterative approach to round-trip$\backslash$nengineering. Furthermore, we present a proof-of-concept FSML for modeling the interaction of workbench parts within Eclipse.$\backslash$nFinally, we identify a number of challenges, opportunities, and directions for future research on FSMLs.},
author = {Antkiewicz, Michal and Czarnecki, Krzysztof},
doi = {10.1007/11880240{\_}48},
isbn = {978-3-540-45772-5},
issn = {03029743},
journal = {ACM/IEEE 9th International Conference on Model Driven Engineering Languages and Systems (MoDELS)},
pages = {692--706},
title = {{Framework-Specific Modeling Languages with Round-Trip}},
year = {2006}
}


@article{Kindler2007,
abstract = {Triple Graph Grammars (TGGs) are a technique for defining the correspondence between two different types of models in a declara- tive way. The power of TGGs comes from the fact that the relation between the two models cannot only be defined, but the definition can be made operational so that one model can be transformed into the other in either direction; even more, TGGs can be used to syn- chronize and to maintain the correspondence of the two models, even if both of them are changed independently of each other; i. e., TGGs work incrementally. TGGs have been introduced more than 10 years ago by Andy Sch¨ urr. Since that time, there have been many different applications of TGGs for transforming models and for maintaining the correspon- dence between these models. To date, there have been several mod- ifications, generalizations, extensions, and variations. Moreover, there are different approaches for implementing the actual transfor- mations and synchronizations of models. In this paper, we present the essential concepts of TGGs, their spirit, their purpose, and their fields of application. We also discuss some of the extensions along with some of the inherent design decisions, as well as their benefits and caveats. All these are based on several year’s of experience of using TGGs in different projects in different application areas},
author = {Kindler, Ekkart and Wagner, Robert},
doi = {citeulike-article-id:4677892},
journal = {University of Paderborn},
title = {{Triple graph grammars: Concepts, extensions, implementations, and application scenarios}},
year = {2007}
}


@incollection{giese_incremental_2006,
	title = {Incremental model synchronization with triple graph grammars},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer},
	author = {Giese, Holger and Wagner, Robert},
	year = {2006},
	pages = {543--557},
	file = {Holger - Robert Germany.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\PKB6C43M\\Holger - Robert Germany.pdf:application/pdf}
}

@inproceedings{rygielski_meta-model_2013,
	title = {A meta-model for performance modeling of dynamic virtualized network infrastructures},
	url = {http://dl.acm.org/citation.cfm?id=2479918},
	urldate = {2015-06-09},
	booktitle = {Proceedings of the 4th {ACM}/{SPEC} {International} {Conference} on {Performance} {Engineering}},
	publisher = {ACM},
	author = {Rygielski, Piotr and Zschaler, Steffen and Kounev, Samuel},
	year = {2013},
	pages = {327--330},
	file = {Rygielski et al. - 2013 - A meta-model for performance modeling of dynamic v.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\5ARGHZBT\\Rygielski et al. - 2013 - A meta-model for performance modeling of dynamic v.pdf:application/pdf}
}

@article{matsuo_early_2014,
	title = {Early {Growth} {Response} 4 {Is} {Involved} in {Cell} {Proliferation} of {Small} {Cell} {Lung} {Cancer} through {Transcriptional} {Activation} of {Its} {Downstream} {Genes}},
	volume = {9},
	issn = {1932-6203},
	url = {http://dx.plos.org/10.1371/journal.pone.0113606},
	doi = {10.1371/journal.pone.0113606},
	language = {en},
	number = {11},
	urldate = {2015-05-19},
	journal = {PLoS ONE},
	author = {Matsuo, Taisuke and Dat, Le Tan and Komatsu, Masato and Yoshimaru, Tetsuro and Daizumoto, Kei and Sone, Saburo and Nishioka, Yasuhiko and Katagiri, Toyomasa},
	editor = {Minna, John D.},
	month = nov,
	year = {2014},
	pages = {e113606}
}

@article{rizzardi_cdk1-dependent_2015,
	title = {{CDK}1-dependent {Inhibition} of the {E}3 {Ubiquitin} {Ligase} {CRL}4 $^{\textrm{{CDT}2}}$ {Ensures} {Robust} {Transition} from {S} {Phase} to {Mitosis}},
	volume = {290},
	issn = {0021-9258, 1083-351X},
	url = {http://www.jbc.org/lookup/doi/10.1074/jbc.M114.614701},
	doi = {10.1074/jbc.M114.614701},
	language = {en},
	number = {1},
	urldate = {2015-05-19},
	journal = {Journal of Biological Chemistry},
	author = {Rizzardi, Lindsay F. and Coleman, Kate E. and Varma, Dileep and Matson, Jacob P. and Oh, Seeun and Cook, Jeanette Gowen},
	month = jan,
	year = {2015},
	pages = {556--567}
}

@inproceedings{mottu_model_2008,
	title = {Model transformation testing: oracle issue},
	shorttitle = {Model transformation testing},
	url = {http://dx.doi.org/10.1109/icstw.2008.27},
	doi = {10.1109/icstw.2008.27},
	abstract = {The definition of an oracle function for model transformation is challenging because of the very complex nature of models resulting from a transformation. Validating the correctness of an output model requires checking a large number of properties on the structure and semantics of this model. The oracle function can thus be very complex if it checks every property. In this paper, we identify and discuss important issues that must be tackled to define model transformation testing oracles. We also propose several oracle functions and analyze how they take advantage of different model driven engineering techniques.},
	urldate = {2015-05-19},
	booktitle = {Software {Testing} {Verification} and {Validation} {Workshop}, 2008. {ICSTW} '08. {IEEE} {International} {Conference} on},
	author = {Mottu, JM and Baudry, B and Traon, YL},
	year = {2008},
	keywords = {model, testing, transformation},
	pages = {105--112}
}

@article{chi_three_2008-1,
	title = {Three types of conceptual change: {Belief} revision, mental model transformation, and categorical shift},
	shorttitle = {Three types of conceptual change},
	url = {https://books.google.fr/books?hl=en&lr=&id=sdyOAgAAQBAJ&oi=fnd&pg=PA61&dq=model+transformation&ots=qzX2LkcZkk&sig=cU0m5JyNLcMnVkfbJ0BCG0Vm3S4},
	urldate = {2015-05-19},
	journal = {International handbook of research on conceptual change},
	author = {Chi, Michelene TH},
	year = {2008},
	pages = {61--82},
	file = {[PDF] from asu.edu:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\URPXJNP7\\Chi - 2008 - Three types of conceptual change Belief revision,.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\FZ59CSUJ\\books.html:text/html}
}

@inproceedings{lawley_practical_2006-1,
	title = {Practical declarative model transformation with {Tefkat}},
	url = {http://link.springer.com/chapter/10.1007/11663430_15},
	urldate = {2015-05-19},
	booktitle = {Satellite {Events} at the {MoDELS} 2005 {Conference}},
	publisher = {Springer},
	author = {Lawley, Michael and Steel, Jim},
	year = {2006},
	pages = {139--150},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\RMR7IHF6\\11663430_15.html:text/html}
}

@inproceedings{naslavsky_using_2008,
	title = {Using model transformation to support model-based test coverage measurement},
	isbn = {978-1-60558-030-2},
	url = {http://dx.doi.org/10.1145/1370042.1370044},
	doi = {10.1145/1370042.1370044},
	abstract = {Adoption of model-driven development is leading to increased use of models jointly with source code for software testing, by means of Model-Based Testing (MBT). MBT uses models to derive concrete test cases to test code. With MBT, test adequacy criteria are described in relation to the models. They are used to evaluate reliability of derived test cases and as predictor for determining when to stop testing. Hence, when concrete test cases are executed, it is important to measure coverage achieved with regards to the model, rather than only to the code. This places new challenges for testing activities, which include creation and maintenance of relationships between model and code elements. To deal with such challenge, we propose an approach that leverages model-to-text transformation traceability techniques to create relationships required to measure model coverage achieved with test cases executions. We illustrate the approach by applying it to a small ATM example.},
	urldate = {2015-05-19},
	publisher = {ACM},
	author = {Naslavsky, Leila and Ziv, Hadar and Richardson, Debra},
	year = {2008},
	keywords = {coverage, mbt, model, testing, transformation},
	pages = {1--6}
}

@inproceedings{guerra_pattern-based_2009,
	title = {\{{Pattern}-{Based} {Model}-to-{Model} {Transformation}: {Handling} {Attribute} {Conditions}\}},
	isbn = {978-3-642-02407-8},
	shorttitle = {\{\vphantom{\}}{Pattern}-{Based} {Model}-to-{Model} {Transformation}},
	url = {http://dx.doi.org/10.1007/978-3-642-02408-5_7},
	doi = {10.1007/978-3-642-02408-5_7},
	abstract = {\{Pattern-based model-to-model transformation is a new approach for specifying transformations in a declarative, relational and formal style. The language relies on patterns describing allowed or forbidden relations between two models, which are compiled into operational mechanisms to perform forward and backward transformations.\}},
	urldate = {2015-05-19},
	booktitle = {Theory and {Practice} of {Model} {Transformations}},
	publisher = {Springer-Verlag},
	author = {Guerra, Esther and Lara, Juan and Orejas, Fernando},
	year = {2009},
	keywords = {2009, model\_transformation, pattern},
	pages = {83--99}
}

@inproceedings{madari_incremental_2008,
	title = {Incremental model synchronization by bi-directional model transformations},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4721408},
	urldate = {2015-05-19},
	booktitle = {Computational {Cybernetics}, 2008. {ICCC} 2008. {IEEE} {International} {Conference} on},
	publisher = {IEEE},
	author = {Madari, István and Lengyel, László and Mezei, Gergely},
	year = {2008},
	pages = {215--218},
	file = {Istvan madari - Incremental Model Synchronization by.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\NQWEHTW9\\Istvan madari - Incremental Model Synchronization by.pdf:application/pdf}
}

@incollection{varro_formal_2002,
	title = {\{{A} {Formal} {Semantics} of {UML} {Statecharts} by {Model} {Transition} {Systems}\}},
	volume = {2505},
	isbn = {978-3-540-44310-0},
	url = {http://dx.doi.org/10.1007/3-540-45832-8_28},
	abstract = {\{UML Statecharts are well-known visual means to capture the dynamic behavior of reactive systems in the object-oriented design methodology. Since the UML standard only contains an informal description on how to execute such statemachines mathematically precise semantic frameworks are required for an automated analysis. The current paper presents a formal semantics for UML statecharts based on a combination of metamodeling and graph transformation that is (i) simultaneously visual and precise, and (ii) clearly separates derived static concepts (like priorities, conflicts, etc.) from their dynamic interpretation thus scaling up well for different statechart variants (with, e.g., various priority strategies) and potential future changes in the standard.\}},
	urldate = {2015-05-19},
	booktitle = {Graph {Transformation}},
	publisher = {Springer Berlin Heidelberg},
	author = {Varró, Dániel},
	editor = {Corradini, Andrea and Ehrig, Hartmut and Kreowski, Hans and Rozenberg, Grzegorz},
	month = oct,
	year = {2002},
	keywords = {\_hardcopy, \_pdf, 2002, hardcopy, semantics, statecharts, uml},
	pages = {378--392}
}

@inproceedings{boonma_model-driven_2011,
	title = {Model-driven performance engineering for wireless sensor networks with feature modeling and event calculus},
	url = {http://dl.acm.org/citation.cfm?id=1998574},
	urldate = {2015-06-10},
	booktitle = {Proceedings of the 3rd workshop on {Biologically} inspired algorithms for distributed systems},
	publisher = {ACM},
	author = {Boonma, Pruet and Suzuki, Junichi},
	year = {2011},
	pages = {17--24},
	file = {Boonma et Suzuki - 2011 - Model-driven performance engineering for wireless .pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\FMJAQ9N7\\Boonma et Suzuki - 2011 - Model-driven performance engineering for wireless .pdf:application/pdf}
}

@inproceedings{bambagini_code_2012-1,
	title = {A code generation framework for distributed real-time embedded systems},
	doi = {10.1109/ETFA.2012.6489586},
	abstract = {Modeling languages and tools, including Simulink, Scicos, SysML and the Eclipse Modeling Framework (EMF), bring the promise of an improved quality and productivity in the development of embedded systems and software. Unfortunately, none of these modeling languages, taken individually, is capable of fulfilling all the needs in the development of complex distributed embedded applications, from the modeling, analysis and validation stages to the automatic generation of the implementation. Overall, their strengths and weaknesses are somewhat complementary and an integrated approach could be the most promising solution. In this paper, we present a framework for integrated code generation in complex real-time distributed systems, where MBD approaches are used for the analysis and the generation of the functional (or behavioral) part, and MDA approaches (SysML/EMF) are used for modeling the execution platform, the task model and the deployment of functions onto the platform resources. This paper presents a meta-model for the description of execution platforms and an open-source code generation framework, based on the selected mapping of the functional components on the chosen platform.},
	booktitle = {2012 {IEEE} 17th {Conference} on {Emerging} {Technologies} {Factory} {Automation} ({ETFA})},
	author = {Bambagini, M. and Di Natale, M.},
	month = sep,
	year = {2012},
	keywords = {automatic generation, complex distributed embedded applications, complex real-time distributed systems, distributed processing, distributed real-time embedded systems, Eclipse Modeling Framework, embedded software, embedded systems, EMF, execution platform, functional components, integrated code generation, MBD approaches, modeling languages, modeling tools, open-source code generation framework, platform resources, productivity, program compilers, Scicos, selected mapping, Simulink, software quality, specification languages, SysML},
	pages = {1--10},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\JQPCTIEG\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\A68IWHHT\\Bambagini et Di Natale - 2012 - A code generation framework for distributed real-t.pdf:application/pdf}
}

@techreport{sendall_model_2003-2,
	title = {Model transformation the heart and soul of model-driven software development},
	url = {http://infoscience.epfl.ch/record/52559},
	urldate = {2015-05-19},
	author = {Sendall, Shane and Kozaczynski, Wojtek},
	year = {2003},
	file = {[PDF] from epfl.ch:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\32JHS7GI\\Sendall et Kozaczynski - 2003 - Model transformation the heart and soul of model-d.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\4CA8FB46\\52559.html:text/html}
}

@article{snook_uml-b:_2006,
	title = {{UML}-{B}: {Formal} modeling and design aided by {UML}},
	shorttitle = {{UML}-{B}},
	abstract = {The emergence of the UML as a de facto standard for object-oriented modeling has been mirrored by the success of the B method as a practically useful formal modeling technique. The two notations have much to offer each other. The UML provides an accessible visualization of models facilitating communication of ideas but lacks formal precise semantics. B, on the other hand, has the precision to support animation and rigorous verification but requires significant effort in training to overcome the mathematical barrier that many practitioners perceive. We utilize a derivation of the B notation as an action and constraint language for the UML and define the semantics of UML entities via a translation into B. Through the UML-B profile we provide specializations of UML entities to support model refinement. The result is a formally precise variant of UML that can be used for refinement based, object-oriented behavioral modeling. The design of UML-B has been guided by industrial applications.},
	journal = {ACM Trans. Softw. Eng. Methodol},
	author = {Snook, Colin and Butler, Michael},
	year = {2006},
	pages = {92--122},
	file = {Citeseer - Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\IECBNXDT\\Snook et Butler - 2006 - UML-B Formal modeling and design aided by UML.pdf:application/pdf;Citeseer - Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\HFB245JD\\summary.html:text/html}
}

@book{douglass_real-time_2000,
	address = {Essex, UK, UK},
	title = {Real-time {UML} (2Nd {Ed}.): {Developing} {Efficient} {Objects} for {Embedded} {Systems}},
	isbn = {9780201657845},
	shorttitle = {Real-time {UML} (2Nd {Ed}.)},
	publisher = {Addison-Wesley Longman Ltd.},
	author = {Douglass, Bruce Powel},
	year = {2000}
}

@inproceedings{fernandez_security_2005,
	title = {Security {Patterns} and {Secure} {Systems} {Design} {Using} {UML}.},
	url = {http://www.iceis.org/iceis2007/Hall_Of_Fame/efernandez/efernandez_2005.pdf},
	urldate = {2015-06-10},
	booktitle = {{ICEIS} (1)},
	author = {Fernandez, Eduardo B.},
	year = {2005},
	pages = {21},
	file = {Fernandez - 2005 - Security Patterns and Secure Systems Design Using .pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\TI6SXZAQ\\Fernandez - 2005 - Security Patterns and Secure Systems Design Using .pdf:application/pdf}
}

@article{vizhanyo_improving_2006,
	title = {\{{Improving} the {Usability} of a {Graph} {Transformation} {Language}\}},
	volume = {152},
	url = {http://dx.doi.org/10.1016/j.entcs.2005.10.026},
	doi = {10.1016/j.entcs.2005.10.026},
	abstract = {\{Model transformation tools implemented using graph transformation techniques are often expected to provide high performance. For this reason, in the Graph Rewriting and Transformation (GReAT) language we have supported two techniques: pre-binding of selected pattern variables and explicit sequencing of transformation steps to improve the performance of the transformation engine. When applied to practical situations, we recognized three shortcomings in our approach: (1) no support for the convenient reuse of results of one rewriting step in another, distant step, (2) lack of a sorting capability for ordering the results of the pattern matching, and (3) absence of support for the distinguished merging of results of multiple pattern matches. In this paper we briefly highlight the relevant features of GReAT, describe three motivating examples that illustrate the problems, introduce our solutions: new extensions to the language, and compare the approaches to other languages.\}},
	urldate = {2015-05-19},
	journal = {Proceedings of the International Workshop on Graph and Model Transformation (GraMoT 2005)},
	author = {Vizhanyo, Attila and Neema, Sandeep and Shi, Feng and Balasubramanian, Daniel and Karsai, Gábor},
	month = mar,
	year = {2006},
	keywords = {\_pdf, 2006, graph\_transformation},
	pages = {207--222}
}

@misc{_event-b.org_????,
	title = {Event-{B}.org},
	url = {http://www.event-b.org/},
	urldate = {2016-04-13},
	file = {Event-B.org:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\T4WSAU8Q\\www.event-b.org.html:text/html}
}

@article{specification_uml_2007,
	title = {{UML} specification},
	journal = {Object Management Group pct/07-08-04},
	author = {Specification, O. M. G.},
	year = {2007},
	file = {formal-15-03-01 (3).pdf:C\:\\Users\\VP242103\\Downloads\\formal-15-03-01 (3).pdf:application/pdf}
}

@incollection{bordbar_model_2007,
	title = {Model {Transformation} from {OWL}-{S} to {BPEL} {Via} {SiTra}},
	url = {http://dx.doi.org/10.1007/978-3-540-72901-3_4},
	abstract = {Although there are a large number of academic and industrial model transformation frameworks available, allowing specification, implementation, maintenance and documentation of model transformations which provide a rich set of functionalities, such tools are inherently complex. In particular, for a newcomer to the field of model transformation and for researchers who are only interested in experimentation and creation of prototypes, the steep learning curve is a significant hurdle. There is thus a clear scope for the creation of model transformation frameworks that are both easy to use and able to conduct complex transformations. Simple Transformer (SiTra) is a model transformation framework, which was originally designed to be a “way in” for the experienced programmer, to start using the concepts of model transformation, and for academic researchers to experiment with the creation of prototypes of implementation of their transformations. The underlying idea of SiTra is to put less focus on the specification language, maintenance and documentation aspects of transformation, by focusing on the implementation of transformations. SiTra makes use of Java for the specification of transformations. This alleviates the need to learn a new specification language or get to grips with a new tool and development environment. SiTra is equipped with a strong transformation engine to execute the transformation behind the scenes. This paper reports on a case study involving transformations from Ontology Web Language-Service (OWL-S) to Business Process Execution Language (BPEL), demonstrating that SiTra can also be used to handle complex and large transformations.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Architecture}- {Foundations} and {Applications}},
	author = {Bordbar, Behzad and Howells, Gareth and Evans, Michael and Staikopoulos, Athanasios},
	year = {2007},
	keywords = {bpel, from, owl-s, to, transformation, ws},
	pages = {43--58}
}

@book{cortellessa_model-based_2011-1,
	address = {Berlin, Heidelberg},
	title = {Model-{Based} {Software} {Performance} {Analysis}},
	isbn = {978-3-642-13620-7, 978-3-642-13621-4},
	url = {http://link.springer.com/10.1007/978-3-642-13621-4},
	language = {en},
	urldate = {2015-06-18},
	publisher = {Springer Berlin Heidelberg},
	author = {Cortellessa, Vittorio and Di Marco, Antinisca and Inverardi, Paola},
	year = {2011},
	file = {Vittorio Cortellessa, Antinisca Di Marco, Paola Inverardi (auth.)-Model-Based Software Performance Analysis-Springer-Verlag Berlin Heidelberg (2011).pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\NJD6JMKC\\Vittorio Cortellessa, Antinisca Di Marco, Paola Inverardi (auth.)-Model-Based Software Performance Analysis-Springer-Verlag Berlin Heidelberg (2011).pdf:application/pdf}
}

@incollection{sanchez_approaches_2008,
	address = {Zurich, Switzerland},
	title = {Approaches for {Model} {Transformation} {Reuse}: {Factorization} and {Composition}},
	volume = {5063},
	isbn = {978-3-540-69926-2},
	shorttitle = {Approaches for {Model} {Transformation} {Reuse}},
	url = {http://dx.doi.org/10.1007/978-3-540-69927-9_12},
	abstract = {Reusability is one of the principal software quality factors. In the context of model driven development (MDD), reuse of model transformations is also considered a key activity to achieve productivity and quality. It is necessary to devote important research efforts to find out appropriate reusability mechanisms for transformation tools and languages. In this paper we present two approaches for reusing model transformation definitions. Firstly, we tackle the creation of related model transformations, showing how the factorization of common parts can be achieved. Secondly, we describe a proposal on the composition of existing, separated transformation definitions so that they can be used to solve a concrete transformation problem. We illustrate both proposals with examples taken from the development of a software product line for adventure games, which has been implemented using the modularization mechanisms of the RubyTL transformation language.},
	urldate = {2015-05-19},
	booktitle = {Theory and {Practice} of {Model} {Transformations}},
	publisher = {Springer Berlin Heidelberg},
	author = {{Sánchez} and {García}},
	editor = {Vallecillo, Antonio and Gray, Jeff and Pierantonio, Alfonso},
	year = {2008},
	keywords = {transformation},
	pages = {168--182}
}

@misc{gronback_eclipse_,
	title = {Eclipse {Modeling} {Project}},
	url = {http://www.eclipse.org/modeling/emf/},
	abstract = {Eclipse is probably best known as a Java IDE, but it is more: it is an IDE framework, a tools framework, an open source project, a community, an eco-system, and a foundation.},
	urldate = {2016-04-06},
	author = {Gronback, Richard},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\2P6RVGMF\\emf.html:text/html}
}

@inproceedings{ubayashi2010archface,
	title={Archface: a contract place where architectural design and code meet together},
	author={Ubayashi, Naoyasu and Nomura, Jun and Tamai, Tetsuo},
	booktitle={Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume 1},
	pages={75--84},
	year={2010},
	organization={ACM}
}

@inproceedings{aldrich2002archjava,
	title={ArchJava: connecting software architecture to implementation},
	author={Aldrich, Jonathan and Chambers, Craig and Notkin, David},
	booktitle={Software Engineering, 2002. ICSE 2002. Proceedings of the 24rd International Conference on},
	pages={187--197},
	year={2002},
	organization={IEEE}
}

@book{steinberg2008emf,
	title={EMF: eclipse modeling framework},
	author={Steinberg, Dave and Budinsky, Frank and Merks, Ed and Paternostro, Marcelo},
	year={2008},
	publisher={Pearson Education}
}

@inproceedings{bezivin_preliminary_2002,
	title = {A {Preliminary} {Identification} of {MDA} {Components}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.7299},
	abstract = {This position paper reports on an initial investigation in the fields of MDA and generative approaches. Our view is that MDA aims at providing a precise framework for generative software production. Unfortunately many notions are still loosely defined (PIM, PSM, etc.).. We propose here an initial exploration of some basic artifacts of the MDA space. Because all these artifacts may be considered as assets for the organization where the MDA is being deployed, we are going to talk about MDA abstract components. We show in this paper the central role that the undergoing RFP on model query and transformation may play in the global MDA organization. Our position is that, if this RFP is successful, the resulting "UTL (Unified Transformation Language)" may soon become the cornerstone of the MDA and contribute to bring closer the generative techniques and the MDA communities.},
	urldate = {2015-05-19},
	author = {Bezivin, Jean and Gerard, Sebastien},
	year = {2002},
	keywords = {mda, model, pivot, transformation}
}

@article{ciccozzi_round-trip_2013,
	title = {Round-trip support for extra-functional property management in model-driven engineering of embedded systems},
	volume = {55},
	url = {http://www.sciencedirect.com/science/article/pii/S0950584912001401},
	number = {6},
	urldate = {2015-06-09},
	journal = {Information and Software Technology},
	author = {Ciccozzi, Federico and Cicchetti, Antonio and Sjödin, Mikael},
	year = {2013},
	pages = {1085--1100},
	file = {Ciccozzi et al. - 2013 - Round-trip support for extra-functional property m.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\WEBIZKI2\\Ciccozzi et al. - 2013 - Round-trip support for extra-functional property m.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\R237UVVA\\S0950584912001401.html:text/html}
}

@inproceedings{scheidgen_model_2006,
	title = {Model patterns for model transformations in model driven development},
	url = {http://dx.doi.org/10.1109/mbd-mompes.2006.17},
	doi = {10.1109/mbd-mompes.2006.17},
	abstract = {Model driven development is a popular approach to master the complexity of computer based systems, but it is still missing well-established technologies for model transformations. A lot of research has been done to address this subject, most of it tends towards highly expressive and highly specialized transformation languages. This paper takes a contra point to this trend, proposing the transformation implementation language Mopa (model pattern), which is less expressive but provides more flexibility. Mopa is independent of the chosen modelling techniques, it allows the realization of different transformation approaches, and it is integrated into the Java programming language, hence easy to integrate into existing environments. Mopa is described with formal syntax and semantics, and this paper shows how to use Mopa to implement different existing transformation approaches.},
	urldate = {2015-05-19},
	booktitle = {Model-{Based} {Development} of {Computer}-{Based} {Systems} and {Model}-{Based} {Methodologies} for {Pervasive} and {Embedded} {Software}, 2006. {MBD}/{MOMPES} 2006. {Fourth} and {Third} {International} {Workshop} on},
	author = {Scheidgen, M},
	year = {2006},
	keywords = {transformation},
	pages = {10 pp.}
}

@inproceedings{cicchetti_evolution_2011,
	title = {Evolution management of extra-functional properties in component-based embedded systems},
	url = {http://dl.acm.org/citation.cfm?id=2000243},
	urldate = {2015-06-09},
	booktitle = {Proceedings of the 14th international {ACM} {Sigsoft} symposium on {Component} based software engineering},
	publisher = {ACM},
	author = {Cicchetti, Antonio and Ciccozzi, Federico and Leveque, Thomas and Sentilles, Séverine},
	year = {2011},
	pages = {93--102},
	file = {Cicchetti et al. - 2011 - Evolution management of extra-functional propertie.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\5ZAGK6RE\\Cicchetti et al. - 2011 - Evolution management of extra-functional propertie.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\XFQZWMHD\\citation.html:text/html}
}

@misc{_building_2006,
	type = {{CT}316},
	title = {Building a {CDT}-based editor, {Part} 1: {The} {C}/{C}++ {Development} {Tooling} model},
	copyright = {© Copyright IBM Corporation 2006},
	shorttitle = {Building a {CDT}-based editor, {Part} 1},
	url = {http://www.ibm.com/developerworks/opensource/library/os-ecl-cdt1/index.html},
	language = {en},
	urldate = {2015-06-04},
	month = sep,
	year = {2006},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\JJFDTSEV\\index.html:text/html}
}

@incollection{taentzer_construction_2008,
	title = {Construction of {Consistent} {Models} in {Model}-{Driven} {Software} {Development}},
	url = {http://dx.doi.org/10.1007/978-3-540-78999-4_12},
	abstract = {Model-driven software development is considered as a promising paradigm in software engineering. Models are ideal means for abstraction and can enable developers to master the increasing complexity of software systems. However, it is not easy to construct consistent models. Inconsistent models are usually the source for erroneous code which cannot be compiled or, if compiled, lead to malfunctioning applications. Developers have little help in producing consistent models, i.e. they are often not well informed by adequate error messages. Starting with a consistent initial model, we follow the idea to identify designated model development steps between consistent models only. These development steps are defined as model transformations. Recurring modeling patterns are identified and formalized as transformation rules. As essential contribution, a construction approach for consistent models in model-driven development is deduced and specified on the basis of graph transformation concepts. Using this approach, developers can be guided in the modeling process such that consistent models are developed only.},
	urldate = {2015-05-19},
	booktitle = {Model-{Based} {Software} and {Data} {Integration}},
	author = {Taentzer, Gabriele},
	year = {2008},
	keywords = {consistency, model, transformation},
	pages = {113--124}
}

@article{crim_observations_1975,
	title = {Observations on the distribution of visual pigments in {Amphibia}},
	volume = {52},
	issn = {0300-9629},
	language = {eng},
	number = {4},
	journal = {Comparative Biochemistry and Physiology. A, Comparative Physiology},
	author = {Crim, J. W.},
	month = dec,
	year = {1975},
	pmid = {1202},
	keywords = {Amphibians, Animals, Anura, Bufonidae, Larva, Metamorphosis, Biological, Ranidae, Retinal Pigments, Rhodopsin, Salamandridae, Species Specificity, Spectrophotometry, Urodela, Xenopus},
	pages = {719--720}
}

@inproceedings{czarnecki_classification_2003-1,
	title = {Classification of model transformation approaches},
	volume = {45},
	url = {http://www.researchgate.net/profile/Simon_Helsen/publication/213882885_Classification_of_Model_Transformation_Approaches/links/00b495204f8807e206000000.pdf},
	urldate = {2015-05-19},
	booktitle = {Proceedings of the 2nd {OOPSLA} {Workshop} on {Generative} {Techniques} in the {Context} of the {Model} {Driven} {Architecture}},
	publisher = {USA},
	author = {Czarnecki, Krzysztof and Helsen, Simon},
	year = {2003},
	pages = {1--17},
	file = {[PDF] from researchgate.net:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\4D8XE6P5\\Czarnecki et Helsen - 2003 - Classification of model transformation approaches.pdf:application/pdf}
}

@article{apvrille_towards_2014,
	title = {Towards the {Model}-{Driven} {Engineering} of {Secure} yet {Safe} {Embedded} {Systems}},
	volume = {148},
	issn = {2075-2180},
	url = {http://arxiv.org/abs/1404.1985v1},
	doi = {10.4204/EPTCS.148.2},
	language = {en},
	urldate = {2015-06-09},
	journal = {Electronic Proceedings in Theoretical Computer Science},
	author = {Apvrille, Ludovic and Roudier, Yves},
	month = apr,
	year = {2014},
	pages = {15--30}
}

@inproceedings{brunekreef_transformation_1996,
	title = {A {Transformation} {Tool} for {Pure} {Prolog} {Programs}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.37.9449},
	abstract = {This technical report contains the complete annotated algebraic specification of `TransLog', a
transformation tool for pure Prolog programs. TransLog supports the interactive transformation
of (a part of) a program by means of buttons representing transformation steps. As much as
possible, pure Prolog semantics are preserved. The choice of pure Prolog semantics induces a
number of conditions that have to be satisfied before a particular transformation step is to be
applied.

Keywords: logic...},
	urldate = {2015-05-19},
	author = {Brunekreef, Jacob},
	year = {1996},
	keywords = {prolog, transformation},
	pages = {130--145}
}

@article{aleti_software_2013,
	title = {Software {Architecture} {Optimization} {Methods}: {A} {Systematic} {Literature} {Review}},
	volume = {39},
	issn = {0098-5589},
	shorttitle = {Software {Architecture} {Optimization} {Methods}},
	doi = {10.1109/TSE.2012.64},
	abstract = {Due to significant industrial demands toward software systems with increasing complexity and challenging quality requirements, software architecture design has become an important development activity and the research domain is rapidly evolving. In the last decades, software architecture optimization methods, which aim to automate the search for an optimal architecture design with respect to a (set of) quality attribute(s), have proliferated. However, the reported results are fragmented over different research communities, multiple system domains, and multiple quality attributes. To integrate the existing research results, we have performed a systematic literature review and analyzed the results of 188 research papers from the different research communities. Based on this survey, a taxonomy has been created which is used to classify the existing research. Furthermore, the systematic analysis of the research literature provided in this review aims to help the research community in consolidating the existing research efforts and deriving a research agenda for future developments.},
	number = {5},
	journal = {IEEE Transactions on Software Engineering},
	author = {Aleti, A. and Buhnova, B. and Grunske, L. and Koziolek, A. and Meedeniya, I.},
	month = may,
	year = {2013},
	keywords = {Computer architecture, Optimization methods, problem overview, Software, software architecture, software architecture design, Software architecture optimization, software architecture optimization method, software quality, software quality attribute, software system, systematic literature review, Systematics, Taxonomy},
	pages = {658--683},
	file = {Aleti et al. - 2013 - Software Architecture Optimization Methods A Syst.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\VU4WKMG6\\Aleti et al. - 2013 - Software Architecture Optimization Methods A Syst.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\S7PJIMVH\\articleDetails.html:text/html}
}

@article{foster_combinators_2007,
	title = {Combinators for {Bidirectional} {Tree} {Transformations}: {A} {Linguistic} {Approach} to the {View}-update {Problem}},
	volume = {29},
	issn = {0164-0925},
	shorttitle = {Combinators for {Bidirectional} {Tree} {Transformations}},
	doi = {10.1145/1232420.1232424},
	abstract = {We propose a novel approach to the view-update problem for tree-structured data: a domain-specific programming language in which all expressions denote bidirectional transformations on trees. In one direction, these transformations---dubbed lenses---map a concrete tree into a simplified abstract view; in the other, they map a modified abstract view, together with the original concrete tree, to a correspondingly modified concrete tree. Our design emphasizes both robustness and ease of use, guaranteeing strong well-behavedness and totality properties for well-typed lenses. We begin by identifying a natural space of well-behaved bidirectional transformations over arbitrary structures, studying definedness and continuity in this setting. We then instantiate this semantic framework in the form of a collection of lens combinators that can be assembled to describe bidirectional transformations on trees. These combinators include familiar constructs from functional programming (composition, mapping, projection, conditionals, recursion) together with some novel primitives for manipulating trees (splitting, pruning, merging, etc.). We illustrate the expressiveness of these combinators by developing a number of bidirectional list-processing transformations as derived forms. An extended example shows how our combinators can be used to define a lens that translates between a native HTML representation of browser bookmarks and a generic abstract bookmark format.},
	number = {3},
	urldate = {2016-04-14},
	journal = {ACM Trans. Program. Lang. Syst.},
	author = {Foster, J. Nathan and Greenwald, Michael B. and Moore, Jonathan T. and Pierce, Benjamin C. and Schmitt, Alan},
	month = may,
	year = {2007},
	keywords = {Bidirectional programming, Harmony, lenses, view update problem, XML},
	file = {ACM Full Text PDF:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\6RNFTK7E\\Foster et al. - 2007 - Combinators for Bidirectional Tree Transformations.pdf:application/pdf}
}

@misc{__????-6
}

@article{__????-7
}

@incollection{bezivin_model_2006-1,
	title = {Model transformations? transformation models!},
	shorttitle = {Model transformations?},
	url = {http://link.springer.com/chapter/10.1007/11880240_31},
	urldate = {2015-05-19},
	booktitle = {Model driven engineering languages and systems},
	publisher = {Springer},
	author = {Bézivin, Jean and Büttner, Fabian and Gogolla, Martin and Jouault, Frédéric and Kurtev, Ivan and Lindow, Arne},
	year = {2006},
	pages = {440--453},
	file = {[PDF] from researchgate.net:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\72TQD4T7\\Bézivin et al. - 2006 - Model transformations transformation models!.pdf:application/pdf;Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\C47N7ZCH\\11880240_31.html:text/html}
}

@misc{_original_????,
	title = {Original {UML}-{B} - {Event}-{B}},
	url = {http://wiki.event-b.org/index.php/Original_UML-B},
	urldate = {2016-04-13},
	file = {Original UML-B - Event-B:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\3NRW3BNU\\Original_UML-B.html:text/html}
}

@article{de_miguel_integration_2008,
	title = {Integration of safety analysis in model-driven software development},
	volume = {2},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4543989},
	number = {3},
	urldate = {2015-06-11},
	journal = {Software, IET},
	author = {de Miguel, Miguel A. and Briones, Javier Fernández and Silva, Juan Pedro and Alonso, Alejandro},
	year = {2008},
	pages = {260--280},
	file = {de Miguel et al. - 2008 - Integration of safety analysis in model-driven sof.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\AWWE7WS2\\de Miguel et al. - 2008 - Integration of safety analysis in model-driven sof.pdf:application/pdf}
}

@incollection{briones_application_2007,
	title = {Application of safety analyses in model driven development},
	url = {http://link.springer.com/chapter/10.1007/978-3-540-75664-4_10},
	urldate = {2015-06-11},
	booktitle = {Software {Technologies} for {Embedded} and {Ubiquitous} {Systems}},
	publisher = {Springer},
	author = {Briones, Javier Fernández and De Miguel, Miguel Ángel and Silva, Juan Pedro and Alonso, Alejandro},
	year = {2007},
	pages = {93--104},
	file = {Briones et al. - 2007 - Application of safety analyses in model driven dev.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\TIACIE6W\\Briones et al. - 2007 - Application of safety analyses in model driven dev.pdf:application/pdf}
}

@article{mens_taxonomy_2006-1,
	title = {A taxonomy of model transformation},
	volume = {152},
	url = {http://www.sciencedirect.com/science/article/pii/S1571066106001435},
	urldate = {2015-05-19},
	journal = {Electronic Notes in Theoretical Computer Science},
	author = {Mens, Tom and Van Gorp, Pieter},
	year = {2006},
	pages = {125--142},
	file = {[HTML] from sciencedirect.com:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\FJFCQ5PN\\S1571066106001435.html:text/html}
}

@article{mens_applying_2006-1,
	title = {Applying a model transformation taxonomy to graph transformation technology},
	volume = {152},
	url = {http://www.sciencedirect.com/science/article/pii/S1571066106001447},
	urldate = {2015-05-19},
	journal = {Electronic Notes in Theoretical Computer Science},
	author = {Mens, Tom and Van Gorp, Pieter and Varró, Dániel and Karsai, Gabor},
	year = {2006},
	pages = {143--159},
	file = {[HTML] from sciencedirect.com:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\2F75M4E6\\S1571066106001447.html:text/html}
}

@article{thiele_performance_2005,
	title = {Performance analysis of distributed embedded systems},
	volume = {2},
	url = {http://libvolume3.xyz/computers/btech/semester7/embeddedcomputingsystems/distributedembeddedsystems/distributedembeddedsystemstutorial1.pdf},
	urldate = {2015-06-18},
	journal = {Embedded Systems Handbook},
	author = {Thiele, Lothar and Wandeler, Ernesto},
	year = {2005},
	file = {TW05.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\9A7XZRFS\\TW05.pdf:application/pdf}
}

@misc{_123456789.pdf_????,
	title = {123456789.pdf - {Fichier} partagé depuis {Box}},
	url = {https://app.box.com/s/8lbey7wmjp1k6ar38fnj},
	urldate = {2015-05-19},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\EF9F3RUG\\8lbey7wmjp1k6ar38fnj.html:text/html}
}

@article{OMG2015,
	author = {OMG},
	file = {:C$\backslash$:/Users/VP242103/Downloads/formal-15-10-02.pdf:pdf},
	number = {October},
	title = {{Precise Semantics Of UML Composite Structures}},
	howpublished = "\url{http://www.omg.org/spec/PSCS/}",
	year = {2015}
}

@incollection{saeki_role_2002,
	title = {Role of {Model} {Transformation} in {Method} {Engineering}},
	url = {http://dx.doi.org/10.1007/3-540-47961-9_43},
	abstract = {This paper discusses two applications of model transformation to method engineering; one is method assembly of diagram based methods and formal methods and the other one is providing formal semantics with meta models by means of the transformation of the meta model descriptions into the formal descriptions. We use Class Diagram to define the meta models, and the models following the meta model can be represented with instance graphs. Thus our model transformation is based on graph grammars. To show and clarify the benefits of model transformation in method engineering, we illustrate the transformation rules and how to transform models. We use two examples; one is a method assembly of Class Diagram and Z and the other one is defining formal semantics of the meta model of Class Diagram.},
	urldate = {2015-05-19},
	booktitle = {Advanced {Information} {Systems} {Engineering}},
	author = {Saeki, Motoshi},
	year = {2002},
	keywords = {model, transformation, z},
	pages = {626--642}
}

@incollection{mens_formalising_2002,
	title = {Formalising {Behaviour} {Preserving} {Program} {Transformations}},
	url = {http://dx.doi.org/10.1007/3-540-45832-8_22},
	abstract = {The notion of refactoring —transforming the source-code of an object-oriented program without changing its external behaviour— has increased the need for a precise definition of refactorings and their properties. This paper introduces a graph representation of those aspects of the source code that should be preserved by a refactoring, and graph rewriting rules as a formal specification for the refactoring transformations themselves. To this aim, we use type graphs, forbidden subgraphs, embedding mechansims, negative application conditions and controlled graph rewriting. We show that it is feasible to reason about the effect of refactorings on object-oriented programs independently of the programming language being used. This is crucial for the next generation of refactoring tools.},
	urldate = {2015-05-19},
	booktitle = {Graph {Transformation}},
	author = {Mens, Tom and Demeyer, Serge and Janssens, Dirk},
	year = {2002},
	keywords = {graph, refactoring, transformation},
	pages = {286--301}
}

@misc{_models_????-1,
	title = {Models at {Runtime} for {Self}-{Adaptive} {Software} {\textbar} {MDELab}},
	url = {https://www.hpi.uni-potsdam.de/giese/public/mdelab/mdelab-projects/software-engineering-for-self-adaptive-systems/morisia/},
	urldate = {2015-06-09},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\NKXDPSVJ\\morisia.html:text/html}
}

@misc{cea-list_papyrus_????,
	title = {{Papyrus} {Homepage} {Website}},
	howpublished = "\url{https://eclipse.org/papyrus/}",
	urldate = {2016-04-02},
	author = {CEA-List},
	file = {Papyrus:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\ZJ9ZDGNW\\papyrus.html:text/html}
}

@incollection{xiong_supporting_2009,
	title = {Supporting parallel updates with bidirectional model transformations},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-02408-5_15},
	urldate = {2015-05-19},
	booktitle = {Theory and {Practice} of {Model} {Transformations}},
	publisher = {Springer},
	author = {Xiong, Yingfei and Song, Hui and Hu, Zhenjiang and Takeichi, Masato},
	year = {2009},
	pages = {213--228},
	file = {ICMT09.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\AETQTFUR\\ICMT09.pdf:application/pdf}
}

@inproceedings{arcelli_model-based_2014,
	title = {Model-based software refactoring driven by performance analysis},
	booktitle = {{MODELS} 2014 {Doctoral} {Symposium}},
	author = {Arcelli, Davide},
	year = {2014},
	file = {dsmodels14_12.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\XEDQK2RM\\dsmodels14_12.pdf:application/pdf}
}

@book{douglass_real-time_2000-1,
	address = {Essex, UK, UK},
	title = {Real-time {UML} (2Nd {Ed}.): {Developing} {Efficient} {Objects} for {Embedded} {Systems}},
	isbn = {9780201657845},
	shorttitle = {Real-time {UML} (2Nd {Ed}.)},
	publisher = {Addison-Wesley Longman Ltd.},
	author = {Douglass, Bruce Powel},
	year = {2000}
}

@inproceedings{johann_instant_2004,
	title = {Instant and incremental transformation of models},
	url = {http://dl.acm.org/citation.cfm?id=1025246},
	urldate = {2015-05-19},
	booktitle = {Proceedings of the 19th {IEEE} international conference on {Automated} software engineering},
	publisher = {IEEE Computer Society},
	author = {Johann, Sven and Egyed, Alexander},
	year = {2004},
	pages = {362--365},
	file = {Instant_and_Incremental_Transformation_of_Models.pdf:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\SMN3S89H\\Instant_and_Incremental_Transformation_of_Models.pdf:application/pdf}
}

@book{marwedel_embedded_2010,
	title = {Embedded {System} {Design}: {Embedded} {Systems} {Foundations} of {Cyber}-{Physical} {Systems}},
	isbn = {9789400702578},
	shorttitle = {Embedded {System} {Design}},
	abstract = {Embedded systems can be defined as information processing systems embedded into enclosing products such as cars, telecommunication or fabrication equipment. Such systems come with a large number of common characteristics, including real-time constraints, and dependability as well as efficiency requirements. Following the success of information technology (IT) for office and workflow applications, embedded systems are considered to be the most important application area of IT during the coming years. This importance of embedded systems is so far not well reflected in many of the current curricula. Embedded System Design is intended as an aid for changing this situation. It provides the material for a first course on embedded systems, but can also be used by PhD students and professors. A key goal of this book is to provide an overview of embedded system design and to relate the most important topics in embedded system design to each other. It should help to motivate students as well as professors to put more emphasis on education in embedded systems. In order to facilitate teaching from this book, slides, exercises and other related material can be downloaded via the author's web page.},
	language = {en},
	publisher = {Springer Science \& Business Media},
	author = {Marwedel, Peter},
	month = nov,
	year = {2010},
	keywords = {Computers / Computer Engineering, Computers / Software Development \& Engineering / General, Technology \& Engineering / Electrical, Technology \& Engineering / Electronics / Circuits / General}
}

@book{roessler_model_2008,
	address = {Saarbrücken, Germany, Germany},
	title = {Model {Driven} {Engineering} for {Safety} {Relevant} {Embedded} {Systems}},
	isbn = {3836494159, 9783836494151},
	abstract = {The increasing complexity of control systems in automation and the verification of compliance with safety standards, require system wide, device spanning modeling of functions. Such models can be expressed with the help of UML in the form of component and class diagrams as well as state charts. In this book an UML Profile is defined, which both restricts and extends UML to model function in the rolling stock domain appropriately. In addition, concepts to describe the quality of service aspects like time constraints and fault tolerance are added to the Profile (based on the UML Profile for Modeling Quality of Service and Fault Tolerance Characteristics and Mechanisms, defined by the OMG). A generator is realized for the defined language, which is able to check UML models for conformance to the Profile and to map conforming models to the target language 'Structured Text'. Mechanisms which allow traceability of single code fragments into the model are used during the generation.},
	publisher = {VDM Verlag},
	author = {Roessler, Wolfgang},
	year = {2008}
}

@inproceedings{van_gorp_cavit:_2005,
	title = {{CAViT}: a consistency maintenance framework based on visual model transformation and transformation contracts},
	shorttitle = {{CAViT}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.70.7884},
	abstract = {Abstract. Model driven engineering is a software engineering methodology that aims to manage the complexity of frameworks by relying on models and transformations. Unfortunately it is only poorly understood where and how this new methodology differs from traditional methodologies. Therefore, this paper formalizes how contract based model transformation extends existing design by contract theory. The key extension is that transformation contracts can be maintained automatically by mapping consistency invariants to the postconditions of transformation rules. When an invariant is violated, the corresponding transformation rule will be called provided that its precondition is satisfied. This paper presents the Contract Aware Visual Transformation (CAViT) framework, an implementation of declarative middleware for contract based model transformation. We illustrate how CAViT can be used to integrate UML based visual model transformations with OCL based transformation contracts.},
	urldate = {2015-05-19},
	author = {Van Gorp, Pieter and Janssens, Dirk},
	year = {2005},
	keywords = {consistency, framework, maintenance, models, transformation}
}

@misc{czarnecki_classification_2003-2,
	title = {Classification of {Model} {Transformation} {Approaches}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.122.8124},
	abstract = {The Model-Driven Architecture (MDA) [Fra03] is an initiative by the Object Management Group (OMG) to define an approach to software development based on modeling and automated mapping of models to implementations. The basic MDA pattern involves defining a platformindependent model (PIM) and its automated mapping to one or more platform-specific models},
	urldate = {2015-05-19},
	author = {Czarnecki, Krzysztof and Helsen, Simon},
	year = {2003},
	keywords = {2006, feature, model, transformation}
}

@misc{_object_????,
	title = {Object {Management} {Group}},
	url = {http://www.omg.org/},
	urldate = {2016-04-05},
	file = {Object Management Group:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\82D2E26K\\www.omg.org.html:text/html}
}

@incollection{stevens_bidirectional_2007,
	title = {Bidirectional {Model} {Transformations} in {QVT}: {Semantic} {Issues} and {Open} {Questions}},
	volume = {4735},
	isbn = {978-3-540-75208-0},
	shorttitle = {Bidirectional {Model} {Transformations} in {QVT}},
	url = {http://dx.doi.org/10.1007/978-3-540-75209-7_1},
	abstract = {We consider the OMG’s Queries, Views and Transformations (QVT) standard as applied to the specification of bidirectional transformations between models. We discuss what is meant by bidirectional transformations, and the model-driven development scenarios in which they are needed. We analyse the fundamental requirements on tools which support such transformations, and discuss some semantic issues which arise. We argue that a considerable amount of basic research is needed before suitable tools will be fully realisable, and suggest directions for this future research.},
	urldate = {2015-05-19},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Stevens, Perdita},
	editor = {Engels, Gregor and Opdyke, Bill and Schmidt, Douglas and Weil, Frank},
	year = {2007},
	keywords = {transformation},
	pages = {1--15}
}

@misc{__????-8,
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.114.2206&rep=rep1&type=pdf},
	urldate = {2016-04-13},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\4AXGHK5B\\download.html:text/html}
}

@article{czarnecki_feature-based_2006-1,
	title = {Feature-based survey of model transformation approaches},
	volume = {45},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5386627},
	number = {3},
	urldate = {2015-05-19},
	journal = {IBM Systems Journal},
	author = {Czarnecki, Krzysztof and Helsen, Simon},
	year = {2006},
	pages = {621--645},
	file = {Snapshot:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\SE3RCBDA\\login.html:text/html}
}

@misc{__????-9,
	url = {http://www.icst.pku.edu.cn/course/uml/reference/the-unified-modeling-language-user-guide.9780201571684.997.pdf},
	urldate = {2016-04-12},
	file = {:C\:\\Users\\VP242103\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\x5kjwptk.default\\zotero\\storage\\43DFEP3X\\the-unified-modeling-language-user-guide.9780201571684.997.html:text/html}
}

@article{jenkins_they_2007,
	title = {'{They} have built a legal system without punishment': reflections on the use of amnesty in the {South} {African} transition},
	volume = {64},
	shorttitle = {'{They} have built a legal system without punishment'},
	url = {http://dx.doi.org/10.1353/trn.2008.0008},
	doi = {10.1353/trn.2008.0008},
	abstract = {The conditional amnesty process administered by the Truth and Reconciliation Commission was an innovative feature of the transition to democracy in South Africa, yet it remains relatively under-analysed in comparison with other aspects of the TRC’s work. Moreover, although the South African TRC has inspired a new generation of truth commissions in Africa and around the world, the amnesty process has never been
repeated. This paper examines the context of the use of amnesty in South Africa and offers some critical reflections on the South African amnesty process, particularly in
the context of the rise of international criminal law and the creation of the International Criminal Court. Noting that the demand for ‘amnesties for peace’ has not diminished, it argues that, although the South African amnesty process was in some respects flawed both in its conception and implementation, it merits consideration by other countries
in transition and offers valuable lessons for the development of international legal policy.},
	number = {1},
	urldate = {2015-05-19},
	journal = {Transformation: Critical Perspectives on Southern Africa},
	author = {Jenkins, Catherine},
	year = {2007},
	keywords = {south-africa, transitional-justice},
	pages = {27--65}
}

@article{Sendall,
author = {Sendall, Shane and K\"{u}ster, Jochen},
file = {:C$\backslash$:/Users/VP242103/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Sendall, K\"{u}ster - Unknown - Taming Model Round-Trip Engineering.pdf:pdf},
keywords = {computer science department,ibm zurich research laboratory,ing model round-trip engineering,k\"{u}ster,shane sendall and jochen},
mendeley-groups = {Transformation},
title = {{Taming Model Round-Trip Engineering}}
}

@article{Specification2007,
abstract = {This specification defines the Unified Modeling Language (UML), revision 2. The objective of UML is to provide system architects, software engineers, and software developers with tools for analysis, design, and implementation of software- based systems as well as for modeling business and similar processes.},
author = {Specification, O M G Available and Bars, Change},
doi = {10.1007/s002870050092},
isbn = {formal/2010-05-03},
issn = {08950695},
journal = {Language},
pages = {1 -- 212},
pmid = {10834647},
title = {{OMG Unified Modeling Language ( OMG UML )}},
url = {http://www.omg.org/spec/UML/2.1.2/Infrastructure/PDF},
year = {2007}
}

@article{Mussbacher2014,
author = {Mussbacher, Gunter and Amyot, Daniel and Breu, Ruth and Bruel, Jean-michel and Cheng, Betty H C and Collet, Philippe and Combemale, Benoit and France, Robert B and Heldal, Rogardt and Hill, James and Kienzle, J\"{o}rg and Sch\"{o}ttle, Matthias},
file = {:C$\backslash$:/Documents/articles/models transformation/chp\%3A10.1007\%2F978-3-319-11653-2\_12.pdf:pdf},
journal = {ACM/IEEE 17th MODELS},
keywords = {benoit combemale 7,betty h,c,cheng 5,daniel amyot 2,france 8,gunter mussbacher 1,jean-michel bruel 4,philippe collet 6,relevance of model-driven engineering,robert b,ruth breu 3,thirty years from now},
mendeley-groups = {MODELS Con},
pages = {183--200},
title = {{The Relevance of Model-Driven Engineering Thirty Years from Now}},
year = {2014}
}


@misc{UModel,
	author = {Altova},
	title = {{"UModel"}},
	howpublished = "\url{http://www.altova.com/umodel.html}",
	note = "[Online; accessed 01-Sept-2015]",
	year = {2016}
}


@misc{omg,
	author = {OMG},
	title = {{Object} {Management} {Groups}},
	howpublished = "\url{http://www.omg.org/}",
	note = "[Online; accessed 04-July-2016]",
	year = {2016}
}

@misc{ibmdiff,
	author = {IBM},
	title = {{IBM} {Rhapshody} {and} {UML} {differences}},
	howpublished = "\url{http://www-01.ibm.com/support/docview.wss?uid=swg27040251}",
	note = "[Online; accessed 04-July-2016]",
	year = {2016}
}

@misc{MSM,
	author = {MSM},
	title = {{Meta} {State} {Machine}},
	howpublished = "\url{http://www.boost.org/doc/libs/1_59_0_b1/libs/msm/doc/HTML/index.html}",
	note = "[Online; accessed 04-July-2016]",
	year = {2016}
}

@inproceedings{Giese2006,
	author = {Giese, Holger and Wagner, Robert},
	booktitle = {Proceedings of the 9th international conference on Model Driven Engineering Languages and Systems},
	title = {{Incremental Model Synchronization with Triple Graph Grammars}},
	year = {2006},
	address = {Genova, Italy},
}

@misc{boost,
	author = {boost},
	title = {{Boost} {C++}},
	howpublished = "\url{http://www.boost.org/}",
	note = "[Online; accessed 04-July-2016]",
	year = {2016}
}

@inproceedings{kramer2015change,
	title={Change-Driven Consistency for Component Code, Architectural Models, and Contracts},
	author={Kramer, Max E and Langhammer, Michael and Messinger, Dominik and Seifermann, Stephan and Burger, Erik},
	booktitle={Proceedings of the 18th International ACM SIGSOFT Symposium on Component-Based Software Engineering},
	pages={21--26},
	year={2015},
	organization={ACM}
}

@inproceedings{langhammer2013co,
	title={Co-evolution of component-based architecture-model and object-oriented source code},
	author={Langhammer, Michael},
	booktitle={Proceedings of the 18th international doctoral symposium on Components and architecture},
	pages={37--42},
	year={2013},
	organization={ACM}
}

@inproceedings{zheng2012enhancing,
	title={Enhancing architecture-implementation conformance with change management and support for behavioral mapping},
	author={Zheng, Yongjie and Taylor, Richard N},
	booktitle={Proceedings of the 34th International Conference on Software Engineering},
	pages={628--638},
	year={2012},
	organization={IEEE Press}
}

@inproceedings{kent2002model,
	title={Model driven engineering},
	author={Kent, Stuart},
	booktitle={International Conference on Integrated Formal Methods},
	pages={286--298},
	year={2002},
	organization={Springer}
}

@misc{statechart,
	author = {{Boost} {Library}},
	title = {{The} {Boost} {Statechart} {Library}},
	howpublished = "\url{http://www.boost.org/doc/libs/1_61_0/libs/statechart/doc/index.html}",
	note = "[Online; accessed 04-July-2016]",
	year = {2016}
}

@misc{visual,
	author = {{Visual} {Paradigm}},
	title = {{Visual} {Paradigm} {Homepage} {Website}},
	howpublished = "\url{http://www.visual-paradigm.com/}",
	note = "[Online; accessed 01-Sept-2015]",
	year = {2016}
}

@misc{Rhapsody,
	author = {IBM},
	title = {{IBM} {Rational} {Rhapsody}},
	howpublished = "\url{http://www.ibm.com/developerworks/downloads/r/rhapsodydeveloper/}",
	note = "[Online; accessed 14-Mar-2016]",
	year = {2016}
}

@misc{qm,
	author = {QM},
	title = {QM},
	howpublished = "\url{http://www.state-machine.com/qm/}",
	note = "[Online; accessed 14-May-2016]",
	year = {2016}
}

@misc{simpleexample,
	author = {{Boost}},
	title = {{Simple} {CDPlayer} {Example}},
	howpublished = "\url{http://www.boost.org/doc/libs/1_45_0/libs/msm/doc/HTML/ch03s02.html#d0e424}",
	note = "[Online; accessed 14-May-2016]",
	year = {2016}
}

@misc{compositeexample,
	author = {{Boost}},
	title = {{Composite} {CDPlayer} {Example}},
	howpublished = "\url{http://www.boost.org/doc/libs/1_45_0/libs/msm/doc/HTML/ch03s02.html#d0e554}",
	note = "[Online; accessed 14-May-2016]",
	year = {2016}
}

@misc{Magicdraw,
	author = {{No} {Magic}},
	title = {{Magic} {Draw}},
	howpublished = "\url{https://www.nomagic.com/products/magicdraw.html}",
	note = "[Online; accessed 14-Mar-2016]",
	year = {2016}
}

@misc{EA,
	author = {SparxSysemx},
	title = {{Enterprise} {Architect}},
	howpublished = "\url{http://www.sparxsystems.com/products/ea/}",
	note = "[Online; accessed 14-Mar-2016]",
	year = {2016}
}

@article{Chikofsky1990,
abstract = {The key to applying computer-aided software engineering to the maintenance and enhancement of existing systems lies in applying reverse-engineering approaches. However, there is considerable confusion over the terminology used in both technical and marketplace discussions. The authors define and relate six terms: forward engineering, reverse engineering, redocumentation, design recovery, restructuring, and reengineering. The objective is not to create new terms but to rationalize the terms already in use. The resulting definitions apply to the underlying engineering processes, regardless of the degree of automation applied.<>},
author = {Chikofsky, Elliot J. and Cross, James H.},
doi = {10.1109/52.43044},
isbn = {0740-7459},
issn = {07407459},
journal = {IEEE Software},
number = {1},
pages = {13--17},
pmid = {21470229},
title = {{Reverse Engineering and Design Recovery: A Taxonomy}},
volume = {7},
year = {1990}
}

@article{Kusel_Etzlstorfer_Kapsammer_2013, title={A Survey on Incremental Model Transformation Approaches}, url={http://scholar.google.com/scholar?hl=en&btnG=Search&q=intitle:A+Survey+on+Incremental+Model+Transformation+Approaches#0}, journal={ME 2013–Models and …}, author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth}, year={2013}}

@article{Ujhelyi2015,
author = {Ujhelyi, Zolt\'{a}n and Bergmann, G\'{a}bor and Heged\"{u}s, \'{A}bel and Horv\'{a}th, \'{A}kos and Izs\'{o}, Benedek and R\'{a}th, Istv\'{a}n and Szatm\'{a}ri, Zolt\'{a}n and Varr\'{o}, D\'{a}niel},
doi = {10.1016/j.scico.2014.01.004},
file = {:C$\backslash$:/Users/VP242103/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Ujhelyi et al. - 2015 - EMF-IncQuery An integrated development environment for live model queries.pdf:pdf},
issn = {01676423},
journal = {Science of Computer Programming},
keywords = {2015,80,98,99,com,contents lists available at,elsevier,ence of computer programming,locate,scico,science of computer programming,sciencedirect,www},
mendeley-groups = {incQuery},
month = feb,
number = {2015},
pages = {80--99},
publisher = {Elsevier B.V.},
title = {{EMF-IncQuery: An integrated development environment for live model queries}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0167642314000082},
volume = {98},
year = {2015}
}

@electronic{OMG,
  added-at = {2012-05-15T14:08:23.000+0200},
  author = {{OMG}},
  biburl = {http://www.bibsonomy.org/bibtex/28f2c88ebc7c601261582adc81a21c60b/maxirichter},
  interhash = {2cb124da13fdc373407cca4955e4c783},
  intrahash = {8f2c88ebc7c601261582adc81a21c60b},
  keywords = {metamodeling modelling omg prio:1 richterm_ma},
  timestamp = {2012-05-15T14:08:49.000+0200},
  title = {Object Management Group (OMG)},
  url = {http://www.omg.org/},
  year = 2012
}


@INPROCEEDINGS{4492428, 
author={L. Angyal and L. Lengyel and H. Charaf}, 
booktitle={Engineering of Computer Based Systems, 2008. ECBS 2008. 15th Annual IEEE International Conference and Workshop on the}, 
title={A Synchronizing Technique for Syntactic Model-Code Round-Trip Engineering}, 
year={2008}, 
pages={463-472}, 
keywords={Unified Modeling Language;programming languages;software engineering;software tools;UML class diagrams;abstraction gap;model-driven development tools;programming language;syntactic model-code round-trip engineering;visual representations;Computer languages;Conferences;Domain specific languages;Merging;Metamodeling;Microwave integrated circuits;Productivity;Proposals;Skeleton;Unified modeling language;AST Merging;Domain-Specific Models;Model-Code Synchronization;Model-Driven Development;Three-way AST Differencing}, 
doi={10.1109/ECBS.2008.33}, 
month={March},}

@INPROCEEDINGS{6619500, 
author={T. Buchmann and B. Westfechtel}, 
booktitle={Software Engineering and Advanced Applications (SEAA), 2013 39th EUROMICRO Conference on}, 
title={Towards Incremental Round-Trip Engineering Using Model Transformations}, 
year={2013}, 
pages={130-133}, 
keywords={Java;software tools;Java source code;bidirectional transformation tool;class diagrams;incremental round-trip engineering;incremental transformation tool;model transformations;model-driven software engineering;model-driven tool construction;unidirectional batch transformations;Adaptation models;Bidirectional control;Computational modeling;Context modeling;Java;Software engineering;Unified modeling language;model transformations;model-driven engineering;round-trip engineering}, 
doi={10.1109/SEAA.2013.19}, 
month={Sept},}

@inproceedings{Bruneliere:2010:MGE:1858996.1859032,
 author = {Bruneliere, Hugo and Cabot, Jordi and Jouault, Fr{\'e}d{\'e}ric and Madiot, Fr{\'e}d{\'e}ric},
 title = {MoDisco: A Generic and Extensible Framework for Model Driven Reverse Engineering},
 booktitle = {Proceedings of the IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE '10},
 year = {2010},
 isbn = {978-1-4503-0116-9},
 location = {Antwerp, Belgium},
 pages = {173--174},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1858996.1859032},
 doi = {10.1145/1858996.1859032},
 acmid = {1859032},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {eclipse platform, extensibility, genericity, model driven engineering, open source, reverse engineering},
} 

@techreport{KNNZ99_2_ag,
  added-at = {2009-11-04T14:26:00.000+0100},
  address = {Paderborn, Germany},
  author = {Kle\'{i}n, Thomas and Nickel, Ulrich A. and Niere, J{\"o}rg and Z{\"u}ndorf, Albert},
  biburl = {http://www.bibsonomy.org/bibtex/201c009f84dc0b7e982c0a1c851bf3924/zuendorf},
  description = {Dokumente},
  institution = {University of Paderborn},
  interhash = {8494b05e861940401c9ed81c3559e074},
  intrahash = {01c009f84dc0b7e982c0a1c851bf3924},
  keywords = {UML Zündorf fujaba imported myown reverse_engineering round_trip},
  month = {September},
  number = {tr-ri-00-216},
  timestamp = {2010-02-12T16:28:43.000+0100},
  title = {From UML to Java And Back Again},
  year = 1999
}

@electronic{umllab,
  added-at = {2014-03-25T22:20:39.000+0100},
  author = {Solutions, Yatta},
  biburl = {http://www.bibsonomy.org/bibtex/22c0f6ee509cd4f65910e11a8634f34ae/butonic},
  interhash = {17b9da5eaa87c7a6726b4fb960e10be2},
  intrahash = {2c0f6ee509cd4f65910e11a8634f34ae},
  keywords = {dis lab tool uml yatta},
  timestamp = {2014-03-25T22:20:39.000+0100},
  title = {UML Lab},
  url = {http://www.uml-lab.com},
  urldate = {2014-03-25},
  year = 2012
}

@article{HafeezOsman2012,
abstract = {This paper focuses on Computer-aided Software Engineering (CASE) tools that offer functionality for reverse engineering into Unified Modeling Language (UML) models. Such tools can be used for design recovery or round-trip engineering. For these purposes, the quality and correctness of the reverse engineering capability of these tools is of key importance: Do the tools completely reconstruct the UML diagrams? Are the reverse engineering results correct? What kind of information is presented in the result? Based on these questions, we compare eight UML CASE tools (six commercial tools and two open source tools). We evaluate i) the types of inputs that these tools can handle, ii) the types of diagrams that can be reconstructed, iii) the quality of resulting diagrams.},
author = {{Hafeez Osman}, Michel R.V. Chaudron},
doi = {10.5176{\_}2010-2283{\_}2.1.150},
journal = {GSTF Journal on Computing},
keywords = {Reverse Engineering,Software Design,Software Engineering,Software Tools.},
number = {1},
pages = {193--201},
title = {{Correctness and Completeness of CASE Tools in Reverse Engineering Source Code into UML Model}},
url = {http://dl.globalstf.org/index.php?page=shop.product{\_}details{\&}flypage=flypage{\_}images.tpl{\&}product{\_}id=1465{\&}category{\_}id=72{\&}option=com{\_}virtuemart{\&}Itemid=4},
volume = {2},
year = {2012}
}

@article{Cutting2015,
abstract = {Various tools exist to reverse engineer software source code and generate design information, such as UML projections. Each has specific strengths and weaknesses, however no standardised benchmark exists that can be used to evaluate and compare their performance and effectiveness in a systematic manner. To facilitate such comparison in this paper we introduce the Reverse Engineering to Design Benchmark (RED-BM), which consists of a comprehensive set of Java-based targets for reverse engineering and a formal set of performance measures with which tools and approaches can be analysed and ranked. When used to evaluate 12 industry standard tools performance figures range from 8.82$\backslash${\%} to 100$\backslash${\%} demonstrating the ability of the benchmark to differentiate between tools. To aid the comparison, analysis and further use of reverse engineering XMI output we have developed a parser which can interpret the XMI output format of the most commonly used reverse engineering applications, and is used in a number of tools.},
author = {Cutting, David and Noppen, Joost},
file = {:C$\backslash$:/Users/VP242103/Downloads/soft{\_}v8{\_}n12{\_}2015{\_}pp{\_}115{\_}124.pdf:pdf},
journal = {International Journal on Advances in Software},
keywords = {benchmarking,extensible methods,hension,ison,reverse engineering,software compre-,tool compar-,tool support,uml,uml reconstruction,xmi},
mendeley-groups = {code gen},
number = {1},
pages = {115--124},
title = {{An Extensible Benchmark and Tooling for Comparing Reverse Engineering Approaches}},
url = {https://ueaeprints.uea.ac.uk/53612/},
volume = {8},
year = {2015}
}

@article{Chawathe:1996:CDH:235968.233366,
 author = {Chawathe, Sudarshan S. and Rajaraman, Anand and Garcia-Molina, Hector and Widom, Jennifer},
 title = {Change Detection in Hierarchically Structured Information},
 journal = {SIGMOD Rec.},
 issue_date = {June 1996},
 volume = {25},
 number = {2},
 month = jun,
 year = {1996},
 issn = {0163-5808},
 pages = {493--504},
 numpages = {12},
 doi = {10.1145/235968.233366},
 acmid = {233366},
 publisher = {ACM},
 address = {New York, NY, USA},
} 